{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Download/DownloadService.js","Image/ImageService.js","Location/LocationService.js","Product/ProductService.js","ProductCategory/ProductService.js","ProductTypeDetail/ProductTypeDetailService.js","ProductTypeHeader/ProductTypeHeaderService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","SelectCustomerLocationProductQuestion/SelectCustomerLocationProductQuestionService.js","SelectSurvey/SelectSurveyService.js","SelectLocation/SelectLocationService.js","SelectUser/SelectUserService.js","Survey/SurveyService.js","SurveyCustomerLocationProductQuestion/SurveyCustomerLocationProductQuestionService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","User/UserService.js","UserRole/UserRoleService.js","Directives.js","AffixResizer.js","AfterImage.js","BeforeImage.js","App.js","MainController.js","AdminController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","ProductTypeDetail/Controllers/ProductTypeDetailAddEditController.js","ProductTypeDetail/Controllers/ProductTypeDetailController.js","ProductCategory/Controllers/ProductCategoryAddEditController.js","ProductCategory/Controllers/ProductCategoryController.js","ProductTypeHeader/Controllers/ProductTypeHeaderAddEditController.js","ProductTypeHeader/Controllers/ProductTypeHeaderController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionAddEditController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","SelectCompany/SelectCompanyController.js","SelectCustomer/SelectCustomerController.js","SelectLocation/SelectLocationController.js","SelectSurvey/SelectSurveyController.js","Survey/MerchandiseSurveyController.js","ReportController.js","SurveyReportController.js","SurveyHeaderReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","moment","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","RedirectState","GetRedirectState","SetRedirectState","state","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Role","GetRole","SetRole","role","StartDate","Date","startOf","format","GetStartDate","SetStartDate","date","EndDate","add","GetEndDate","SetEndDate","ProductTypeHeader","GetProductTypeHeader","SetProductTypeHeader","Clear","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","orderBy","skip","take","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","post","response","length","Update","put","Delete","delete","SelectionApplicationService","parameters","companyId","DownloadSurveyData","DownloadNoteData","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","statusText","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","inlineCount","CreateBulk","Message","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","directive","$window","restrict","link","scope","elem","attrs","element","on","innerWidth","addClass","removeClass","$scope","reader","FileReader","onload","AfterImage","target","result","$apply","Header","IsAfterImage","files","readAsDataURL","BeforeImage","IsBeforeImage","blockUIConfig","delay","filter","utcDate","dt","getTime","$stateProvider","$urlRouterProvider","otherwise","templateUrl","run","$rootScope","$state","UserService","go","controller","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","SelectedProductTypeHeader","Route","toastr","$stateParams","$routeParams","$location","CustomerService","Init","focus","Save","index","$parent","gridOptions","indexOf","splice","items","enableFiltering","enableSorting","columnDefs","width","cellTemplate","field","cellTooltip","Edit","row","CompanyService","Select","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","City","address_components","long_name","State","Zip","ProductService","ProductCategoryService","ProductTypeHeaderService","SearchProductCategories","substringof","SelectProductCategory","ProductCategoryId","SearchProductTypes","SelectProductType","ProductTypeHeaderId","ProductTypeDetailService","QuestionService","SurveyCustomerLocationProductQuestionService","Question","Product","ProductId","itemCopy","SearchCustomers","SelectCustomer","SelectCustomerCopy","SearchLocations","SelectLocation","SelectLocationCopy","SearchProducts","SelectProduct","ProductName","SelectProductCopy","SearchQuestions","SelectQuestion","QuestionId","Copy","promises","i","Results","RowOrder","rowOrder","uiGridConstants","Page","sort","gridApi","infiniteScroll","dataLoaded","InlineCount","useExternalSorting","useExternalFiltering","showGridFooter","onRegisterApi","draggableRows","rowDropped","info","dropTarget","core","filterChanged","column","grid","isDefined","filterTimeout","cancel","columns","sortChanged","sortColumns","needLoadMoreData","GetDataDown","rowTemplate","gridColumns","equalsColumns","filters","term","trim","operandName","fieldName","termName","direction","DESC","saveScrollPercentage","concat","isMoreData","count","Reorder","ValidateForOrdering","ReorderAll","j","customer","SurveyService","Roles","Customers","Validate","Predicate","SurveyCustomerLocationService","Continue","IsContinueShown","SelectLocationService","LocationServicesDisabled",">=","<=","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","SelectSurveyService","SurveyProductQuestionService","SurveyHeaderService","SurveyDetailService","ImageService","SelectCustomerLocationProductQuestionService","previousElementId","Notes","Detail","descending","changeSorting","details","Answer","Details","fileSizeBeforeImage","fileSizeAfterImage","size","alert","OnBlur","event","currentTarget","includes","NextInput","Number","parseInt","substring","document","getElementById","PrevInput","SelectedCustomer","SelectedLocation","$uibModal","ReportService","DownloadService","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","PageSize","headerTooltip","exclude","keys","obj","enableGridMenu","infiniteScrollRowsFromEnd","ViewNote","modalInstance","open","animation","note","ViewImage","title","Company.Id","Created","Customer.Id","Location.Id","Survey.Id","ViewDetail","NgMap","SelectUserService","SelectedPosition","User","CreatedBy","SearchUsers","predicateUser","users","getMap","SelectPosition","panTo","SelectMarker","marker","$uibModalInstance","ok","close","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\n(function() {\n    'use strict';\n    var services = angular.module('ApplicationServices', []);\n})();","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n        var observers = [];\r\n        this.RegisterObserver = function (callback) {\r\n            observers.push(callback);\r\n        }\r\n\r\n        this.NotifyObservers = function () {\r\n            angular.forEach(observers, function (callback) {\r\n                callback();\r\n            });\r\n        };\r\n\r\n        this.RedirectState = null;\r\n        this.GetRedirectState = function () {\r\n            return this.RedirectState;\r\n        }\r\n\r\n        this.SetRedirectState = function (state) {\r\n            this.RedirectState = state;\r\n        }\r\n\r\n        this.CompanyId = null;\r\n        this.GetCompanyId = function () {\r\n            return this.CompanyId;\r\n        };\r\n\r\n        this.SetCompanyId = function (id) {\r\n            this.CompanyId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Company = null;\r\n        this.GetCompany = function () {\r\n            return this.Company;\r\n        };\r\n\r\n        this.SetCompany = function (item) {\r\n            this.Company = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.CustomerId = null;\r\n        this.GetCustomerId = function () {\r\n            return this.CustomerId;\r\n        };\r\n\r\n        this.SetCustomerId = function (id) {\r\n            this.CustomerId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Customer = null;\r\n        this.GetCustomer = function () {\r\n            return this.Customer;\r\n        };\r\n\r\n        this.SetCustomer = function (item) {\r\n            this.Customer = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.LocationId = null;\r\n        this.GetLocationId = function () {\r\n            return this.LocationId;\r\n        };\r\n\r\n        this.SetLocationId = function (id) {\r\n            this.LocationId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Location = null;\r\n        this.GetLocation = function () {\r\n            return this.Location;\r\n        };\r\n\r\n        this.SetLocation = function (item) {\r\n            this.Location = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.SurveyId = null;\r\n        this.GetSurveyId = function () {\r\n            return this.SurveyId;\r\n        };\r\n\r\n        this.SetSurveyId = function (id) {\r\n            this.SurveyId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Survey = null;\r\n        this.GetSurvey = function () {\r\n            return this.Survey;\r\n        };\r\n\r\n        this.SetSurvey = function (item) {\r\n            this.Survey = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.SurveyHeaderId = null;\r\n        this.GetSurveyHeaderId = function () {\r\n            return this.SurveyHeaderId;\r\n        };\r\n\r\n        this.SetSurveyHeaderId = function (id) {\r\n            this.SurveyHeaderId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Role = null;\r\n        this.GetRole = function () {\r\n            return this.Role;\r\n        }\r\n\r\n        this.SetRole = function (role) {\r\n            this.Role = role;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.StartDate = new Date(moment().startOf('isoWeek').format(\"YYYY-MM-DD 00:00:00\"));\r\n        this.GetStartDate = function () {\r\n            return this.StartDate;\r\n        }\r\n\r\n        this.SetStartDate = function (date) {\r\n            this.StartDate = date;\r\n        }\r\n\r\n        this.EndDate = new Date(moment().add(2, \"days\").format(\"YYYY-MM-DD : 23:59:59\"));\r\n        this.GetEndDate = function () {\r\n            return this.EndDate;\r\n        }\r\n\r\n        this.SetEndDate = function (date) {\r\n            this.EndDate = date;\r\n        }\r\n\r\n        this.ProductTypeHeader = null;\r\n        this.GetProductTypeHeader = function () {\r\n            return this.ProductTypeHeader;\r\n        }\r\n\r\n        this.SetProductTypeHeader = function (item) {\r\n            this.ProductTypeHeader = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Clear = function () {\r\n            this.RedirectState = null;\r\n\r\n            this.CompanyId = null;\r\n            this.Company = null;\r\n\r\n            this.CustomerId = null;\r\n            this.Customer = null;\r\n\r\n            this.LocationId = null;\r\n            this.Location = null;\r\n\r\n            this.SurveyId = null;\r\n            this.Survey = null;\r\n\r\n            this.SurveyHeaderId = null;\r\n        }\r\n    });\r\n})(moment);","\n(function() {\n    'use strict';\n    var services = angular.module('DatabaseServices', []);\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"LocationApi/Search\", \"LocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationProductQuestionApi/Search\", \"SurveyCustomerLocationProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductCategoryApi/Search\", \"ProductCategoryViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyHeaderApi/Search\", \"SurveyHeaderViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SelectLocationApi/Search\", \"SelectLocationViewModel\");        \r\n        meta.setEntityTypeForResourceName(\"SelectSurveyApi/Search\", \"SelectSurveyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SelectUserApi/Search\", \"SelectUserViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SelectCustomerLocationProductQuestionApi/Search\", \"SelectCustomerLocationProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductTypeHeaderApi/Search\", \"ProductTypeHeaderViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductTypeDetailApi/Search\", \"ProductTypeDetailViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.ProductCategoryViewModel\\\",\\\"Merchandiser.Models.ProductCategoryViewModel\\\"],[\\\"Merchandiser.ProductTypeDetailViewModel\\\",\\\"Merchandiser.Models.ProductTypeDetailViewModel\\\"],[\\\"Merchandiser.ProductTypeHeaderViewModel\\\",\\\"Merchandiser.Models.ProductTypeHeaderViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SelectCustomerLocationProductQuestionViewModel\\\",\\\"Merchandiser.Models.SelectCustomerLocationProductQuestionViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SelectLocationViewModel\\\",\\\"Merchandiser.Models.SelectLocationViewModel\\\"],[\\\"Merchandiser.SelectSurveyViewModel\\\",\\\"Merchandiser.Models.SelectSurveyViewModel\\\"],[\\\"Merchandiser.SelectUserViewModel\\\",\\\"Merchandiser.Models.SelectUserViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationProductQuestionViewModel\\\"],[\\\"Merchandiser.SurveyHeaderViewModel\\\",\\\"Merchandiser.Models.SurveyHeaderViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"],[\\\"Merchandiser.UserInfoViewModel\\\",\\\"Merchandiser.Models.UserInfoViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsSendReport\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"SendReport\",\"type\":\"Edm.DateTime\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CustomerName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LocationName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductCategoryViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductCategoryViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductTypeDetailViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductTypeDetailViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductTypeHeaderId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"}]},{\"name\":\"ProductTypeHeaderViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductTypeHeaderViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"Details\",\"relationship\":\"Self.ProductTypeHeaderViewModel_Details\",\"fromRole\":\"ProductTypeHeaderViewModel_Details_Source\",\"toRole\":\"ProductTypeHeaderViewModel_Details_Target\"}},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectCustomerLocationProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Company\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Customer\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Location\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\"},{\"name\":\"Product\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Product\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\"},{\"name\":\"ProductTypeDetail\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Question\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Survey\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Phone\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"City\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"State\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Zip\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductCategoryId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"ProductCategory\",\"relationship\":\"Self.ProductViewModel_ProductCategory\",\"fromRole\":\"ProductViewModel_ProductCategory_Source\",\"toRole\":\"ProductViewModel_ProductCategory_Target\"},{\"name\":\"ProductTypeHeader\",\"relationship\":\"Self.ProductViewModel_ProductTypeHeader\",\"fromRole\":\"ProductViewModel_ProductTypeHeader_Source\",\"toRole\":\"ProductViewModel_ProductTypeHeader_Target\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsTrueFalse\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsNoteRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsEdit\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsEditDays\",\"type\":\"Edm.Int32\"},{\"name\":\"IsDelete\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsDeleteDays\",\"type\":\"Edm.Int32\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SelectLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyCreated\",\"type\":\"Edm.DateTime\"}]},{\"name\":\"SelectSurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectSurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyCreated\",\"type\":\"Edm.DateTime\"}]},{\"name\":\"SelectUserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectUserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Email\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Company\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\"},{\"name\":\"Product\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Product\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Question\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\"}]},{\"name\":\"SurveyHeaderViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyHeaderViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"IsBeforeImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsAfterImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyHeaderViewModel_Company\",\"fromRole\":\"SurveyHeaderViewModel_Company_Source\",\"toRole\":\"SurveyHeaderViewModel_Company_Target\"},{\"name\":\"CreatedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"fromRole\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_CreatedUser_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyHeaderViewModel_Customer\",\"fromRole\":\"SurveyHeaderViewModel_Customer_Source\",\"toRole\":\"SurveyHeaderViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyHeaderViewModel_Location\",\"fromRole\":\"SurveyHeaderViewModel_Location_Source\",\"toRole\":\"SurveyHeaderViewModel_Location_Target\"},{\"name\":\"ModifiedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"fromRole\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_ModifiedUser_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyHeaderViewModel_Survey\",\"fromRole\":\"SurveyHeaderViewModel_Survey_Source\",\"toRole\":\"SurveyHeaderViewModel_Survey_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.SurveyHeaderViewModel_UserInfo\",\"fromRole\":\"SurveyHeaderViewModel_UserInfo_Source\",\"toRole\":\"SurveyHeaderViewModel_UserInfo_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserInfoViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserInfoViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.UserRoleViewModel_UserInfo\",\"fromRole\":\"UserRoleViewModel_UserInfo_Source\",\"toRole\":\"UserRoleViewModel_UserInfo_Target\"}]}],\"association\":[{\"name\":\"ProductTypeHeaderViewModel_Details\",\"end\":[{\"role\":\"ProductTypeHeaderViewModel_Details_Source\",\"type\":\"Edm.Self.ProductTypeHeaderViewModel\",\"multiplicity\":\"0..1\"},{\"role\":\"ProductTypeHeaderViewModel_Details_Target\",\"type\":\"Edm.Self.ProductTypeDetailViewModel\",\"multiplicity\":\"*\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"type\":\"Edm.Self.ProductCategoryViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"ProductViewModel_ProductCategory_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"ProductViewModel_ProductCategory_Source\",\"propertyRef\":{\"name\":\"ProductCategoryId\"}}}},{\"name\":\"ProductViewModel_ProductTypeHeader\",\"end\":[{\"role\":\"ProductViewModel_ProductTypeHeader_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductTypeHeader_Target\",\"type\":\"Edm.Self.ProductTypeHeaderViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Target\",\"type\":\"Edm.Self.ProductTypeDetailViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}},{\"name\":\"UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"ProductCategoryViewModel\",\"entityType\":\"Self.ProductCategoryViewModel\"},{\"name\":\"ProductTypeDetailViewModel\",\"entityType\":\"Self.ProductTypeDetailViewModel\"},{\"name\":\"ProductTypeHeaderViewModel\",\"entityType\":\"Self.ProductTypeHeaderViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SelectCustomerLocationProductQuestionViewModel\",\"entityType\":\"Self.SelectCustomerLocationProductQuestionViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SelectLocationViewModel\",\"entityType\":\"Self.SelectLocationViewModel\"},{\"name\":\"SelectSurveyViewModel\",\"entityType\":\"Self.SelectSurveyViewModel\"},{\"name\":\"SelectUserViewModel\",\"entityType\":\"Self.SelectUserViewModel\"},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel\",\"entityType\":\"Self.SurveyCustomerLocationProductQuestionViewModel\"},{\"name\":\"SurveyHeaderViewModel\",\"entityType\":\"Self.SurveyHeaderViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"},{\"name\":\"UserInfoViewModels\",\"entityType\":\"Self.UserInfoViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"}],\"associationSet\":[{\"name\":\"ProductTypeHeaderViewModel_Details\",\"association\":\"Self.ProductTypeHeaderViewModel_Details\",\"end\":[{\"role\":\"ProductTypeHeaderViewModel_Details_Source\",\"entitySet\":\"ProductTypeHeaderViewModel\"},{\"role\":\"ProductTypeHeaderViewModel_Details_Target\",\"entitySet\":\"ProductTypeDetailViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Company\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Customer\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Location\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"ProductViewModel_ProductCategory\",\"association\":\"Self.ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"entitySet\":\"ProductCategoryViewModel\"}]},{\"name\":\"ProductViewModel_ProductTypeHeader\",\"association\":\"Self.ProductViewModel_ProductTypeHeader\",\"end\":[{\"role\":\"ProductViewModel_ProductTypeHeader_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductTypeHeader_Target\",\"entitySet\":\"ProductTypeHeaderViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Product\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Target\",\"entitySet\":\"ProductTypeDetailViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Question\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Survey\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Company\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Product\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Question\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Company\",\"association\":\"Self.SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"association\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"association\":\"Self.SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_Location\",\"association\":\"Self.SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"association\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"association\":\"Self.SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"association\":\"Self.SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"UserRoleViewModel_UserInfo\",\"association\":\"Self.UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]}]}}}\n);\r\n","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"CompanyApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"CompanyApi/AdminSearch\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/CompanyApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/CompanyApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\n            if (predicate != null) {\n                query = query.where(predicate);\n            }\n            query = query.skip(page * pageSize).take(pageSize);\n                        \n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n            \n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/CompanyUserApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/CompanyUserApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"CustomerApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/CustomerApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/CustomerApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.DownloadSurveyData = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/DownloadApi/DownloadSurveyData/'\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.DownloadNoteData = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/DownloadApi/DownloadNoteData/'\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.GetBeforeImage = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.GetAfterImage = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.CreateBeforeImage = function (image, id) {\n                var deferred = $q.defer();\n                if (image != undefined && image != null) {\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\n                    .then(function (response) {\n                        deferred.resolve(response);\n                    }, function (response) {\n                        if (response.data.length > 0) {\n                            deferred.reject(response.statusText);\n                        } else {\n                            deferred.reject(\"Failed to create the record.\");\n                        }\n                    });\n                }\n                else {\n                    deferred.resolve();\n                }\n                return deferred.promise;\n            };\n\n            this.CreateAfterImage = function (image, id) {\n                var deferred = $q.defer();\n                if (image != undefined && image != null) {\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\n                    .then(function (response) {\n                        deferred.resolve(response);\n                    }, function (response) {\n                        if (response.data.length > 0) {\n                            deferred.reject(response.statusText);\n                        } else {\n                            deferred.reject(\"Failed to create the record.\");\n                        }\n                    });\n                }\n                else {\n                    deferred.resolve();\n                }\n                return deferred.promise;\n            };\n\n            this.DeleteBeforeImage = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.DeleteAfterImage = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"LocationApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/LocationApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/LocationApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/LocationApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/LocationApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"ProductApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/ProductApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/ProductApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/ProductApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/ProductApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ProductCategoryService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"ProductCategoryApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/ProductCategoryApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/ProductCategoryApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/ProductCategoryApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/ProductCategoryApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductTypeDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductTypeDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductTypeDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductTypeDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductTypeDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductTypeDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductTypeHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductTypeHeaderApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductTypeHeaderApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductTypeHeaderApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductTypeHeaderApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductTypeHeaderApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"QuestionApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/QuestionApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/QuestionApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\n                cancelExistingSearch = cancelExistingSearch || false;\n\n                if (this.deferredRequest !== null && cancelExistingSearch) {\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\n                    this.deferredRequest = null;\n                }\n                var deferred = $q.defer();\n                var query = breeze.EntityQuery.from('RoleApi/Search');\n                if (predicate != null) {\n                    query = query.where(predicate);\n                }\n                query = query.skip(page * pageSize).take(pageSize);\n\n                breezeservice.executeQuery(query).then(function (data) {\n                    deferred.resolve(data.httpResponse.data);\n                    _self.deferredRequest = null;\n                }, function (msg, code) {\n                    deferred.reject(msg);\n                    _self.deferredRequest = null;\n                });\n\n                this.deferredRequest = deferred;\n\n                return deferred.promise;\n            };\n\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\n                cancelExistingSearch = cancelExistingSearch || false;\n\n                if (this.deferredRequest !== null && cancelExistingSearch) {\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\n                    this.deferredRequest = null;\n                }\n                var deferred = $q.defer();\n\n                var query = new breeze.EntityQuery({\n                    from: \"RoleApi/Search\",\n                    where: predicate,\n                    //orderBy: [\"Created desc\"],\n                    skip: page * pageSize,\n                    take: pageSize\n                });\n\n                breezeservice.executeQuery(query).then(function (data) {\n                    deferred.resolve(data.httpResponse.data);\n                    _self.deferredRequest = null;\n                }, function (msg, code) {\n                    deferred.reject(msg);\n                    _self.deferredRequest = null;\n                });\n\n                this.deferredRequest = deferred;\n\n                return deferred.promise;\n            };\n\n        }]);\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectCustomerLocationProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectCustomerLocationProductQuestionServiceApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectSurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectSurveyApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectLocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectLocationApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectUserService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectUserApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    inlineCount: true,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.data);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.data);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.data);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('SurveyCustomerLocationProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"SurveyCustomerLocationProductQuestionApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                inlineCount: true\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/SurveyCustomerLocationProductQuestionApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/SurveyCustomerLocationProductQuestionApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/SurveyCustomerLocationProductQuestionApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/SurveyCustomerLocationProductQuestionApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"SurveyDetailApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/SurveyDetailApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/SurveyDetailApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response.statusText);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n                cancelExistingSearch = cancelExistingSearch || false;\n\n                if (this.deferredRequest !== null && cancelExistingSearch) {\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\n                    this.deferredRequest = null;\n                }\n                var deferred = $q.defer();\n\n                var query = new breeze.EntityQuery({\n                    from: \"SurveyHeaderApi/Search\",\n                    where: predicate,\n                    orderBy: order,\n                    skip: page * pageSize,\n                    take: pageSize,\n                    inlineCount: true,\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n                });\n\n                breezeservice.executeQuery(query).then(function (data) {\n                    deferred.resolve(data.httpResponse.data);\n                    _self.deferredRequest = null;\n                }, function (msg, code) {\n                    deferred.reject(msg);\n                    _self.deferredRequest = null;\n                });\n\n                this.deferredRequest = deferred;\n\n                return deferred.promise;\n            };\n\n            this.Get = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.Create = function (item) {\n                var deferred = $q.defer();\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response.statusText);\n                    } else {\n                        deferred.reject(\"Failed to create the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            };\n\n            this.CreateBulk = function (item) {\n                var deferred = $q.defer();\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.Message.length > 0) {\n                        deferred.reject(response.data.Message);\n                    } else {\n                        deferred.reject(\"Failed to create the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            };\n\n            this.Update = function (id, item) {\n                var deferred = $q.defer();\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to update the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.UpdateBulk = function (id, item) {\n                var deferred = $q.defer();\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.Message.length > 0) {\n                        deferred.reject(response.data.Message);\n                    } else {\n                        deferred.reject(\"Failed to update the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.Delete = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.DeleteBulk = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.Message.length > 0) {\n                        deferred.reject(response.data.Message);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.GetCurrentUser = function () {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/UserApi/GetCurrentUser/',\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.GetCurrentUsername = function () {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.IsAdministrator = function (companyId) {\n                var deferred = $q.defer();\n\n                this.GetCurrentUser().then(function (data) {\n                    var userId = data;\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                        var roles = data.map(function (e) { return e.Id; });\n                        var predicate = {\n                            and: [\n                               { \"UserId\": { '==': userId } },\n                               { \"RoleId\": { '==': data[0].Id } },\n                               { \"CompanyId\": { '==': companyId } }\n                            ]\n                        }\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                            if (data.length > 0) {\n                                deferred.resolve(true);\n                            }\n                            else {\n                                deferred.resolve(false);\n                            }\n                        });\n                    });\n                });\n                return deferred.promise;\n            }\n\n            this.IsCustomer = function (companyId) {\n                var deferred = $q.defer();\n\n                this.GetCurrentUser().then(function (data) {\n                    var userId = data;\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                        var roles = data.map(function (e) { return e.Id; });\n                        var predicate = {\n                            and: [\n                               { \"UserId\": { '==': userId } },\n                               { \"RoleId\": { '==': data[0].Id } },\n                               { \"CompanyId\": { '==': companyId } }\n                            ]\n                        }\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                            if (data.length > 0) {\n                                deferred.resolve(true);\n                            }\n                            else {\n                                deferred.resolve(false);\n                            }\n                        });\n                    });\n                });\n                return deferred.promise;\n            }\n\n            this.IsDataEntry = function (companyId) {\n                var deferred = $q.defer();\n                this.GetCurrentUser().then(function (data) {\n                    var userId = data;\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                        var roles = data.map(function (e) { return e.Id; });\n                        var predicate = {\n                            and: [\n                               { \"UserId\": { '==': userId } },\n                               { \"RoleId\": { '==': data[0].Id } },\n                               { \"CompanyId\": { '==': companyId } }\n                            ]\n                        }\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                            if (data.length > 0) {\n                                deferred.resolve(true);\n                            }\n                            else {\n                                deferred.resolve(false);\n                            }\n                        });\n                    });\n                });\n                return deferred.promise;\n            }\n        }]);\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    debugger;\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Directives',[]);\n","var app = angular.module('Directives');\n\napp.directive('affixResizer', ['$window', '$timeout', function ($window, $timeout) {\n    return {\n        restrict: 'A',\n        link: function (scope, elem, attrs) {\n\n            angular.element($window).on('resize', function () {\n                if ($window.innerWidth > 992) {\n                    elem.addClass('affix');\n                }\n                else {\n                    elem.removeClass('affix');\n                }\n            });\n\n            $timeout(function () {\n                if ($window.innerWidth > 992) {\n                    elem.addClass('affix');\n                }\n                else {\n                    elem.removeClass('affix');\n                }\n            });\n        }\n    }\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\nvar app = angular.module('Directives');\n\napp.directive('afterImage', [function () {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attrs) {\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n                $scope.AfterImage = e.target.result;\n                $scope.$apply();\n            }\n\n            elem.on('change', function () {\n                $scope.Header.IsAfterImage = true;\n                $scope.Header.AfterImage = elem[0].files[0];\n                reader.readAsDataURL(elem[0].files[0]);\n            });\n        }\n    }\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\nvar app = angular.module('Directives');\n\napp.directive('beforeImage', [function () {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attrs) {\n            var reader = new FileReader();\n            \n            reader.onload = function (e) {\n                $scope.BeforeImage = e.target.result;\n                $scope.$apply();\n            }\n\n            elem.on('change', function () {\n                $scope.Header.IsBeforeImage = true;\n                $scope.Header.BeforeImage = elem[0].files[0];\n                reader.readAsDataURL(elem[0].files[0]);\n            });\n        }\n    }\n}]);","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.draggable-rows', 'ui.grid.infiniteScroll', 'ui.grid.cellNav', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMessages', 'ngMaterial', 'focus-if', 'mgcrea.bootstrap.affix', 'Directives', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.filter('dateLocalize', function () {\r\n    return function (utcDate) {\r\n        if (utcDate == null)\r\n            return \"\";\r\n        else {\r\n            var dt = new Date(utcDate + 'Z').getTime();\r\n            return dt;\r\n        }        \r\n    }\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Administrator\");\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Data Entry\");\r\n                SelectionApplicationService.SetRedirectState('main.survey');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Customer\");\r\n                SelectionApplicationService.SetRedirectState('main.report.surveyheaderreport');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\n    \"use strict\";\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\n\n        UserService.GetCurrentUsername().then(function(data){\n            $scope.Username = data;\n        });\n        $scope.GoTo = function (state) {\n            if (state == 'main.admin.company.addedit') {\n                SelectionApplicationService.Clear();\n                $state.go(state);\n            }\n            else {\n                SelectionApplicationService.Clear();\n                \n            SelectionApplicationService.SetRedirectState(state);\n                $state.go('main.selectcompany');\n            }\n        }\n\n        $scope.Logout = function () {\n            SelectionApplicationService.Clear();\n            $http.post('/Account/LogOff').then(function(data){\n                $window.location.reload();\n            });\n        }\n\n        SelectionApplicationService.RegisterObserver(function () {\n            $scope.Role = SelectionApplicationService.GetRole();\n        })\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.SelectedProductTypeHeader = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedProductTypeHeader = SelectionApplicationService.GetProductTypeHeader();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocationproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else if(state == \"main.admin.producttypedetail.addedit\") {\r\n                    if (SelectionApplicationService.GetProductTypeHeader() == null) {\r\n                        toastr.error(\"A product type must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $routeParams, $http,\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\n\n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" }\n            $scope.focus = true;\n        }\n        $scope.Init();\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                CustomerService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                CustomerService.Create($scope.item).then(function (data) {\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\n                $scope.items = data;\n                $scope.gridOptions.data = data;\n            });\n        }\n        $scope.gridOptions = {\n            enableFiltering: true,\n            enableSorting: true,\n            data: [],\n            columnDefs: [\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\n                { field: 'Name', name: 'Name', cellTooltip: true }\n            ]\n        };\n        $scope.Search();\n\n        $scope.Edit = function (row) {\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\n        }\n\n        $scope.Delete = function (Id) {\n            CustomerService.Delete(Id).then(function (data) {\n                $scope.Search();\n            }, function (error) {\n                toastr.error(error.data, error.statusText);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" }\n            $scope.focus = true;\n        }\n        $scope.Init();\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                CompanyService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    $scope.$parent.Search();\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                CompanyService.Create($scope.item).then(function (data) {\n                    $scope.$parent.Search();\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location,\n        $timeout, breezeservice, breeze, CompanyService,\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\n        $scope.Search = function () {\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\n                $scope.items = data;\n                if (data != null && data.length == 1) {\n                    $scope.Select(data[0].Id);\n                }\n            });\n        }\n        $scope.Search();\n\n        $scope.Edit = function (Id) {\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\n        }\n\n        $scope.Delete = function (Id) {\n            CompanyService.Delete(Id).then(function (data) {\n                $scope.Search();\n            })\n        }\n        \n        $scope.Select = function (Id) {\n            CompanyService.Get(Id).then(function (data) {\n                SelectionApplicationService.SetCompanyId(data.Id);\n                SelectionApplicationService.SetCompany(data);\n            });\n        }\n        \n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\n        \n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\n            $scope.focus = true;\n        }\n        $scope.Init();\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                LocationService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                LocationService.Create($scope.item).then(function (data) {\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n\n        $scope.ChangeAddress = function (value) {\n            var address = JSON.stringify(value);\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\n                return data.data.results;\n            });\n        }\n\n        $scope.SelectAddress = function (item, model, label) {\n            $scope.item.Latitude = item.geometry.location.lat;\n            $scope.item.Longitude = item.geometry.location.lng;\n            $scope.item.Address = item.formatted_address;\n            $scope.item.City = item.address_components[3].long_name;\n            $scope.item.State = item.address_components[5].long_name;\n            $scope.item.Zip = item.address_components[7].long_name;\n        }\n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location,\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\n                $scope.gridOptions.data = data;\n            });\n        }\n        $scope.gridOptions = {\n            enableFiltering: true,\n            enableSorting: true,\n            data: [],\n            columnDefs: [\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\n                { field: 'Name', name: 'Name', cellTooltip: true },\n                { field: 'Phone', name: 'Phone', cellTooltip: true },\n                { field: 'City', name: 'City', cellTooltip: true },\n                { field: 'State', name: 'State', cellTooltip: true },\n                { field: 'Zip', name: 'Zip', cellTooltip: true }\n            ]\n        };\n        $scope.Search();\n\n        $scope.Edit = function (row) {\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\n        }\n\n        $scope.Delete = function (Id) {\n            LocationService.Delete(Id).then(function (data) {\n                $scope.Search();\n            }, function (error) {\n                toastr.error(error.data, error.statusText);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductService', 'ProductCategoryService', 'ProductTypeHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductService, ProductCategoryService, ProductTypeHeaderService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProductCategories = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductCategory = function (item, model, label) {\r\n            $scope.item.ProductCategoryId = item.Id;\r\n        }\r\n\r\n        $scope.SearchProductTypes = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductTypeHeaderService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductType = function (item, model, label) {\r\n            debugger;\r\n            $scope.item.ProductTypeHeaderId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\n        'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\n        SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\n                $scope.gridOptions.data = data;\n\n            });\n        }\n        $scope.gridOptions = {\n            enableFiltering: true,\n            enableSorting: true,\n            data: [],\n            columnDefs: [\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\n                { field: 'Name', name: 'Name', cellTooltip: true },\n                { field: 'ProductCategory.Name', name: 'Category Name', cellTooltip: true },\n                { field: 'ProductTypeHeader.Name', name: 'Product Type Name', cellTooltip: true }\n            ]\n        };\n        $scope.Search();\n\n        $scope.Edit = function (row) {\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\n        }\n\n        $scope.Delete = function (Id) {\n            ProductService.Delete(Id).then(function (data) {\n                $scope.Search();\n            }, function (error) {\n                toastr.error(error.data, error.statusText);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypedetail.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeDetail/Views/ProductTypeDetailAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeDetailAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductTypeDetailService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductTypeDetailService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductTypeDetailService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductTypeDetailService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.ProductTypeHeaderId = SelectionApplicationService.GetProductTypeHeader().Id;\r\n                ProductTypeDetailService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypedetail', {\r\n            url: \"/producttypedetail\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeDetail/Views/ProductTypeDetail.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeDetailController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductTypeDetailService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductTypeDetailService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductTypeDetailService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.producttypedetail.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductTypeDetailService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";\n    angular.module('Main').config(function ($stateProvider) {\n        $stateProvider\n        .state('main.admin.productcategory.addedit', {\n            url: \"/addedit/:id\",\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategoryAddEdit.html\"\n        })\n    });\n    angular.module('Main').controller('ProductCategoryAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService, SelectionApplicationService) {\n       \n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" }\n            $scope.focus = true;\n        }\n        $scope.Init();\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                ProductCategoryService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                ProductCategoryService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                ProductCategoryService.Create($scope.item).then(function (data) {\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";\n    angular.module('Main').config(function ($stateProvider) {\n        $stateProvider\n        .state('main.admin.productcategory', {\n            url: \"/productcategory\",\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategory.html\"\n        })\n    });\n    angular.module('Main').controller('ProductCategoryController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService',\n        'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService,\n        SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\n            ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\n                $scope.gridOptions.data = data;\n\n            });\n        }\n        $scope.gridOptions = {\n            enableFiltering: true,\n            enableSorting: true,\n            data: [],\n            columnDefs: [\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\n                { field: 'Name', name: 'Name', cellTooltip: true }\n            ]\n        };\n        $scope.Search();\n\n        $scope.Edit = function (row) {\n            $state.go('main.admin.productcategory.addedit', { id: row.Id }, { reload: false });\n        }\n\n        $scope.Delete = function (Id) {\n            ProductCategoryService.Delete(Id).then(function (data) {\n                $scope.Search();\n            }, function (error) {\n                toastr.error(error.data, error.statusText);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypeheader.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeHeader/Views/ProductTypeHeaderAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeHeaderAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductTypeHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductTypeHeaderService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductTypeHeaderService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductTypeHeaderService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductTypeHeaderService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypeheader', {\r\n            url: \"/producttypeheader\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeHeader/Views/ProductTypeHeader.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeHeaderController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductTypeHeaderService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductTypeHeaderService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductTypeHeaderService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '180', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/SelectEditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.producttypeheader.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductTypeHeaderService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            ProductTypeHeaderService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetProductTypeHeader(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\n        \n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" };\n            $scope.focus = true;\n        }\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                QuestionService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                QuestionService.Create($scope.item).then(function (data) {\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\n                $scope.gridOptions.data = data;\n            });\n        }\n        $scope.gridOptions = {\n            enableFiltering: true,\n            enableSorting: true,\n            data: [],\n            columnDefs: [\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\n                { field: 'Name', name: 'Name', cellTooltip: true },\n                { field: 'IsRequired', name: 'Required', cellTooltip: true},\n                { field: 'IsTrueFalse', name: 'True False', cellTooltip: true}\n            ]\n        };\n        $scope.Search();\n\n        $scope.Edit = function (row) {\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\n        }\n\n        $scope.Delete = function (Id) {\n            QuestionService.Delete(Id).then(function (data) {\n                $scope.Search();\n            }, function (error) {\n                toastr.error(error.data, error.statusText);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\n        .state('main.admin.surveycustomerlocationproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestionAddEdit.html\",\r\n        })\r\n    });\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams',\n    '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\n        'CustomerService', 'LocationService', 'ProductService', 'QuestionService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $routeParams,\n        $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\n        CustomerService, LocationService, ProductService, QuestionService, SelectionApplicationService) {\r\n\n        $scope.Init = function () {\r\n            $scope.item = {\r\n                Question: { Name: null },\n                Location: { Name: null },\n                Customer: { Name: null },\n                Product: { Name: null },\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\n            $scope.itemCopy = {\r\n                Question: { Name: null },\n                Location: { Name: null },\n                Customer: { Name: null },\n                Product: { Name: null },\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\n            $scope.focus = true;\r\n        }\n        $scope.Init();\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\n        $scope.Search();\n\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\n                   { \"Name\": { \"substringof\": value } },\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\n                ]\r\n            }\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\n\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\n\n        $scope.SelectCustomerCopy = function (item, model, label) {\r\n            $scope.itemCopy.CustomerId = item.Id;\r\n        }\n\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\n                   { \"Name\": { \"substringof\": value } },\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\n                ]\r\n            }\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\n\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\n\n        $scope.SelectLocationCopy = function (item, model, label) {\r\n            $scope.itemCopy.LocationId = item.Id;\r\n        }\n\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\n                   { \"Name\": { \"substringof\": value } },\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\n                ]\r\n            }\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\n\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\n            $scope.item.ProductName = item.Name;\r\n        }\n\n        $scope.SelectProductCopy = function (item, model, label) {\r\n            $scope.itemCopy.ProductId = item.Id;\n            $scope.itemCopy.ProductName = item.Name;\r\n        }\n\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\n                   { \"Name\": { \"substringof\": value } },\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\n                ]\r\n            }\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n\n                return data;\r\n            });\r\n        }\n\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\n\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.data.splice(index, 1, data.data);\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\n                SurveyCustomerLocationProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.data.splice(0, 0, data.data);\n                    $scope.item.QuestionId = null; $scope.item.Question.Name = null;\n                    //$scope.Init();\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\n\n        $scope.Copy = function () {\r\n            var predicate = {\r\n                and: [\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } },\n                   { \"SurveyId\": { '==': SelectionApplicationService.GetSurveyId() } },\n                   { \"CustomerId\": { '==': $scope.item.CustomerId } }\n                ]\r\n            }\n            if ($scope.item.LocationId != null) { predicate.and.push({ \"LocationId\": { '==': $scope.item.LocationId } }) }\n            if ($scope.item.ProductId != null) { predicate.and.push({ \"ProductId\": { '==': $scope.item.ProductId } }) }\n            if ($scope.item.QuestionId != null) { predicate.and.push({ \"QuestionId\": { '==': $scope.item.QuestionId } }) }\n            var promise = {}, promises = [];\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                for (var i = 0; i < data.Results.length; i++) {\r\n                    var item = {\r\n                        CompanyId: SelectionApplicationService.GetCompanyId(),\n                        SurveyId: SelectionApplicationService.GetSurveyId(),\n                        RowOrder: data.Results[i].rowOrder,\n                        CustomerId: $scope.itemCopy.CustomerId,\n                        LocationId: $scope.itemCopy.LocationId,\n                        ProductId: $scope.itemCopy.ProductId,\n                        QuestionId: $scope.itemCopy.QuestionId,\r\n                    }\n                    if ($scope.itemCopy.LocationId == null) {\r\n                        item.LocationId = data.Results[i].Location.Id;\r\n                    }\n                    if ($scope.itemCopy.ProductId == null) {\r\n                        item.ProductId = data.Results[i].Product.Id;\r\n                    }\n                    if ($scope.itemCopy.QuestionId == null) {\r\n                        item.QuestionId = data.Results[i].Question.Id;\r\n                    }\n                    promise = SurveyCustomerLocationProductQuestionService.Create(item).then(function (data) {\r\n\n                    });\n                    //$scope.$parent.gridOptions.data.push(data);\n                    promises.push(promise);                   \r\n                }\r\n                $q.all(promises).then(function () {\r\n                    toastr.success(\"The specified survey data has been copied over.\");\n                    $scope.itemCopy = { Id: null }\n                    $scope.$parent.Search();\r\n                });\r\n            });\r\n        }\r\n    }]);\r\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion', {\r\n            url: \"/survey/customerlocationproductquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestion.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionController', ['$scope', '$state', '$routeParams', 'uiGridConstants',\r\n        '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, uiGridConstants,\r\n    $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Page = 0;\r\n        var predicate = {\r\n            and: [\r\n                { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            ]\r\n        }\r\n        var sort = [\"RowOrder asc\"];\r\n        $scope.Search = function () {\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, sort, 0, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, data.InlineCount);\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            useExternalSorting: true,\r\n            useExternalFiltering: true,\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: 'data',\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    //$scope.Reorder();\r\n                });\r\n                gridApi.core.on.filterChanged($scope, function (column) {\r\n                    var grid = this.grid;\r\n                    if (angular.isDefined($scope.filterTimeout)) {\r\n                        $timeout.cancel($scope.filterTimeout);\r\n                    }\r\n                    $scope.filterTimeout = $timeout(function () {\r\n                        $scope.filterChanged(grid.columns);\r\n                    }, 1000);\r\n                });\r\n\r\n                gridApi.core.on.sortChanged($scope, function (grid, sortColumns) {\r\n                    $scope.sortChanged(sortColumns);\r\n                });\r\n\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.filterChanged = function (gridColumns) {\r\n            var equalsColumns = [\"RowOrder\"];\r\n            predicate.and.length = 1;\r\n            $scope.data = [];\r\n            $scope.Page = 0;\r\n            angular.forEach(gridColumns, function (column) {\r\n                if (typeof column.filters !== 'undefined' && column.filters !== null &&\r\n                        column.filters.length > 0 && column.filters[0].term != null && column.filters[0].term.trim().length > 0) {\r\n\r\n                    var operandName = \"contains\"; var fieldName = column.field; var termName = column.filters[0].term;\r\n                    if (equalsColumns.indexOf(column.field) != -1) {\r\n                        operandName = \"==\";\r\n                    }\r\n                    var filter = {};\r\n                    var field = {}\r\n                    field[operandName] = termName;\r\n                    filter[fieldName] = field;\r\n                    predicate.and.push(filter);\r\n                }\r\n            });\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.sortChanged = function (sortColumns) {\r\n            sort.length = 0;\r\n            $scope.data = [];\r\n            $scope.Page = 0;\r\n            if (sortColumns.length > 0) {\r\n                angular.forEach(sortColumns, function (column) {\r\n                    if (column.sort.direction == uiGridConstants.DESC) {\r\n                        sort.push(column.field + \" desc\");\r\n                    }\r\n                    else {\r\n                        sort.push(column.field + \" asc\");\r\n                    }                   \r\n                });\r\n            }\r\n            else {\r\n                sort = [\"RowOrder asc\"];\r\n            }\r\n\r\n            $scope.Search();\r\n        };\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function (count) {\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocationproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        //TODO: Reorder button.  Don't do on drop.  \r\n        $scope.Reorder = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            //reorder\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                var row = $scope.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        $scope.ReorderAll = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            var promise = {}, promises = [];\r\n            angular.forEach($scope.data, function (item, index) {\r\n                var predicate = {\r\n                    and: [\r\n                        { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                        { \"ProductId\": { \"==\": item.ProductId } },\r\n                        { \"QuestionId\": { \"==\": item.QuestionId } }\r\n                    ]\r\n                }\r\n                promise = SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    for (var j = 0; j < data.Results.length; j++) {\r\n                        var row = data.Results[j];\r\n                        row.RowOrder = index;\r\n                        SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n\r\n                        });\r\n                    }\r\n                });\r\n                promises.push(promise);\r\n                $q.all(promises).then(function () {\r\n                    $scope.Search();\r\n                })\r\n            });\r\n        }\r\n\r\n        $scope.ValidateForOrdering = function () {\r\n            var customer = $scope.data[0].CustomerId;\r\n            var location = $scope.data[0].LocationId;\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                if (customer != $scope.data[i].CustomerId) {\r\n                    toastr.error(\"The grouping does not contain just one customer.  Please filter down to just one customer first before ordering.\");\r\n                    return false;\r\n                }\r\n                if (location != $scope.data[i].LocationId) {\r\n                    toastr.error(\"The grouping does not contain just one location.  Please filter down to just one location first before ordering.\");\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            else {\r\n                $scope.Init();\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\n                $scope.items = data;\n                if (data != null && data.length == 1) {\n                    $scope.Select(data[0].Id);\n                }\n            });\n        }\n        $scope.Search();\n\n        $scope.Edit = function (Id) {\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\n        }\n\n        $scope.Delete = function (Id) {\n            SurveyService.Delete(Id).then(function (data) {\n                $scope.Search();\n            })\n        }\n\n        $scope.Select = function (Id) {\n            SurveyService.Get(Id).then(function (data) {\n                SelectionApplicationService.SetSurveyId(data.Id);\n                SelectionApplicationService.SetSurvey(data);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name != \"Customer\") {\r\n                $scope.item.Customer = null;\r\n            }\r\n\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\n                $scope.gridOptions.data = data;\n            });\n        }\n        $scope.gridOptions = {\n            enableFiltering: true,\n            enableSorting: true,\n            data: [],\n            columnDefs: [\n                { name: 'Manage', width: '120',  cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\n            ]\n        };\n        $scope.Search();\n\n        $scope.Delete = function (Id) {\n            UserRoleService.Delete(Id).then(function (data) {\n                $scope.Search();\n            }, function (error) {\n                toastr.error(error.data, error.statusText);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\n    \"use strict\";\n    angular.module('Main').config(function ($stateProvider) {\n        $stateProvider\n        .state('main.selectcompany', {\n            url: \"/selectcompany/:redirectState\",\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCompany/SelectCompany.html\"\n        })\n    });\n    angular.module('Main').controller('SelectCompanyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\n\n        $scope.Search = function () {\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\n                if (data.length == 1) {\n                    $scope.Select(data[0]);\n                }\n                else {\n                    $scope.Company = data;\n                }\n            });\n        }\n        $scope.Search();\n\n        $scope.Select = function (item) {\n            SelectionApplicationService.SetCompany(item);\n            SelectionApplicationService.SetCompanyId(item.Id);\n            $state.go('main.selectcustomer');\n        }\n\n        $scope.Continue = function () {\n            $state.go('main.selectcustomer');\n        }\n\n        $scope.IsContinueShown = function () {\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    }]);\n})(moment);","(function (moment) {\n    \"use strict\";\n    angular.module('Main').config(function ($stateProvider) {\n        $stateProvider\n        .state('main.selectcustomer', {\n            url: \"/selectcustomer/:redirectState\",\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCustomer/SelectCustomer.html\"\n        })\n    });\n    angular.module('Main').controller('SelectCustomerController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\n\n        $scope.Search = function () {\n            var predicate = { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } };\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\n                if (data.length == 1) {\n                    $scope.Select(data[0]);\n                }\n                else {\n                    $scope.Customer = data;\n                }\n            });\n        }\n        $scope.Search();\n\n        $scope.Select = function (item) {\n            SelectionApplicationService.SetCustomer(item);\n            SelectionApplicationService.SetCustomerId(item.Id);\n            $state.go('main.selectlocation');\n        }\n\n        $scope.Continue = function () {\n            $state.go('main.selectlocation');\n        }\n\n        $scope.IsContinueShown = function () {\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    }]);\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectlocation', {\r\n            url: \"/selectlocation/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectLocation/SelectLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectLocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectLocationService) {\r\n        \r\n        $scope.LocationServicesDisabled = false;\r\n        $scope.Location = [];\r\n        $scope.predicate = {\r\n            and: [\r\n               { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ]\r\n        }\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                $scope.predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },                       \r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"Latitude\": { '>=': $scope.Latitude - .0725 } },\r\n                       { \"Latitude\": { '<=': $scope.Latitude + .0725 } },\r\n                       { \"Longitude\": { '>=': $scope.Longitude - .0725 } },\r\n                       { \"Longitude\": { '<=': $scope.Longitude + .0725 } }\r\n                    ]\r\n                }\r\n                SelectLocationService.Search($scope.predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            else {\r\n                LocationService.Search($scope.predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go('main.selectsurvey');\r\n                    }\r\n                    if (data.length < 1) {\r\n                        $scope.LocationServicesDisabled = true;\r\n                    }\r\n                    else if (data.length == 1) {\r\n                        $scope.Select(data[0]);\r\n                    }\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            \r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Latitude = position.coords.latitude;\r\n            $scope.Longitude = position.coords.longitude;\r\n            $scope.Search();\r\n        }, function (error) {\r\n            toastr.error(\"User has denied geolocation for this site.  Please allow location services to get your location to find locations near you.\");\r\n            $scope.LocationServicesDisabled = true;\r\n        });\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.Latitude = item.geometry.location.lat;\r\n            $scope.Longitude = item.geometry.location.lng;\r\n            $scope.LocationServicesDisabled = false;\r\n            if (SelectionApplicationService.GetRedirectState() != 'main.survey') {\r\n                $scope.predicate.and = [];\r\n                $scope.predicate.and.push({ \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } });\r\n                $scope.predicate.and.push({ \"Latitude\": { '>=': $scope.Latitude - .0725 } });\r\n                $scope.predicate.and.push({ \"Latitude\": { '<=': $scope.Latitude + .0725 } });\r\n                $scope.predicate.and.push({ \"Longitude\": { '>=': $scope.Longitude - .0725 } });\r\n                $scope.predicate.and.push({ \"Longitude\": { '<=': $scope.Longitude + .0725 } });\r\n            }\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetLocation(item);\r\n            SelectionApplicationService.SetLocationId(item.Id);\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectsurvey', {\r\n            url: \"/selectsurvey/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectSurvey/SelectSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectSurveyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectSurveyService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectSurveyService) {\r\n        \r\n        $scope.Survey = [];\r\n        $scope.Search = function () {\r\n            if(SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SelectSurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                    ]\r\n                }\r\n                SurveyService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go(SelectionApplicationService.GetRedirectState());\r\n                    }\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SurveyService.Get(item.Id).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                $state.go(SelectionApplicationService.GetRedirectState());\r\n            });\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go(SelectionApplicationService.GetRedirectState());\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyCustomerLocationProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService', 'SelectCustomerLocationProductQuestionService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyCustomerLocationProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService,\r\n        SelectionApplicationService, SelectCustomerLocationProductQuestionService) {\r\n        \r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n        $scope.previousElementId = \"input0\";\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Survey = data.Results[0].Survey;\r\n                    $scope.Header = data.Results[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SurveyCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data.Results[0].Survey;\r\n                    $scope.Detail = data.Results;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.sort = {\r\n            column: ['RowOrder', 'Product.Name'],\r\n            descending: false\r\n        };\r\n        $scope.changeSorting = function (column) {\r\n            var sort = $scope.sort;\r\n\r\n            if (sort.column[0] == column) {\r\n                sort.descending = !sort.descending;\r\n            } else {\r\n                sort.column[0] = column;\r\n                sort.descending = false;\r\n            }\r\n        };\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        SelectionApplicationService.SetRedirectState('main.survey');\r\n                        $state.go('main.selectcompany');\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(error);\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null ) {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsBeforeImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsAfterImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.OnBlur = function (event) {\r\n            if (event.currentTarget.id.includes(\"input\")) {\r\n                $scope.previousElementId = event.currentTarget.id;\r\n            }\r\n        }\r\n\r\n        $scope.NextInput = function () {\r\n            var index = Number(parseInt($scope.previousElementId.substring(5, 7))) + Number(1);\r\n            document.getElementById('input' + index).focus();\r\n        }\r\n\r\n        $scope.PrevInput = function () {\r\n            var index = Number(parseInt($scope.previousElementId.substring(5, 7))) - Number(1);\r\n            document.getElementById('input' + index).focus();\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').config(function ($stateProvider) {\n        $stateProvider\n        .state('main.report', {\n            url: \"/report\",\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\n        })\n    });\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\n    function controller($scope, $state, SelectionApplicationService) {\n        $scope.SelectedCompany = SelectionApplicationService.GetCompany();\n        $scope.SelectedCustomer = SelectionApplicationService.GetCustomer();\n        $scope.SelectedLocation = SelectionApplicationService.GetLocation();\n        $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\n    }]);\n\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate();\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), SelectionApplicationService.GetSurveyHeaderId(), SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {                    \r\n                    $scope.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, \r\n                                cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Images/Notes', width: 65,  cellTooltip: true, headerTooltip: true, \r\n                        cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true, headerTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, headerTooltip: true,\r\n                        cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error getting all the data.\");\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.data = $scope.data.concat(data);\r\n                    $scope.gridApi.infiniteScroll.dataLoaded(false, true);\r\n                });\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: 'data',\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.data[index].Id == id) {\r\n                        $scope.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n        $scope.DownloadSurveyData = function () {\r\n            window.open('/DownloadApi/DownloadSurveyData' +\r\n                '?companyId=' + SelectionApplicationService.GetCompanyId() +\r\n                '&surveyHeaderId=' + SelectionApplicationService.GetSurveyHeaderId() +\r\n                '&customerId=' + SelectionApplicationService.GetCustomerId() +\r\n                '&locationId=' + SelectionApplicationService.GetLocationId() +\r\n                '&productId=null' +\r\n                '&surveyId=' + SelectionApplicationService.GetSurveyId() +\r\n                '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') +\r\n                '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n\r\n        $scope.DownloadNoteData = function () {\r\n            window.open('/DownloadApi/DownloadNoteData' +\r\n                '?companyId=' + SelectionApplicationService.GetCompanyId() +\r\n                '&surveyHeaderId=' + SelectionApplicationService.GetSurveyHeaderId() +\r\n                '&customerId=' + SelectionApplicationService.GetCustomerId() +\r\n                '&locationId=' + SelectionApplicationService.GetLocationId() +\r\n                '&productId=null' +\r\n                '&surveyId=' + SelectionApplicationService.GetSurveyId() +\r\n                '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') +\r\n                '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyheaderreport', {\r\n            url: \"/surveyheaderreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/SurveyHeader/SurveyHeaderReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyHeaderReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate();\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\" : moment($scope.StartDate).format('YYYY-MM-DD')}},\r\n                   { \"Created\": { \"<=\" : moment($scope.EndDate).format('YYYY-MM-DD')}}\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } },\r\n                   { \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function(count){\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 50,\r\n            data: 'data',\r\n            columnDefs: [\r\n                {\r\n                    name: 'Detail', width: 65, cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<button class=\"btn btn-primary btn-sm\" ng-click=\"grid.appScope.ViewDetail(row.entity)\">Detail</button>'\r\n                },\r\n                { name: 'Images/Notes', width: 65, cellTooltip: true, headerTooltip: true, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html' },\r\n                { field: 'Survey.Name', name: 'Survey Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true, headerTooltip: true },\r\n                {\r\n                    name: 'Created', cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                //gridApi.options.loadTimeout = true;\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.ViewDetail = function (item) {\r\n            SelectionApplicationService.SetSurveyHeaderId(item.Id);\r\n            $state.go('main.report.surveyreport')\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'SurveyHeaderService', 'SelectUserService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, SurveyHeaderService, SelectUserService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.User = null;\r\n        \r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate();\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.Search();\r\n        }\r\n        var predicate = {\r\n            and: [\r\n                { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ]\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            predicate.and.length = 1;\r\n            predicate.and.push({ \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } });\r\n            predicate.and.push({ \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } });\r\n            if ($scope.User != null && $scope.User.Id != null) { predicate.and.push({ \"CreatedBy\": { \"==\": $scope.User.Id } }) }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n\r\n        $scope.SearchUsers = function(){\r\n            var predicateUser = {\r\n                and: [\r\n                    { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            SelectUserService.Search(predicateUser, [\"LastName asc\"], 0, 100, false).then(function (data) {\r\n                $scope.users = data.Results;\r\n            })\r\n        }\r\n\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n        $scope.SearchUsers();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\n    $scope.image = image;\n    $scope.title = title;\n\n    $scope.ok = function () {\n        $uibModalInstance.close();\n    };\n\n    $scope.cancel = function () {\n        $uibModalInstance.dismiss('cancel');\n    };\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\n    $scope.note = note;\n\n    $scope.ok = function () {\n        $uibModalInstance.close();\n    };\n\n    $scope.cancel = function () {\n        $uibModalInstance.dismiss('cancel');\n    };\n});"],"sourceRoot":"/source/"}