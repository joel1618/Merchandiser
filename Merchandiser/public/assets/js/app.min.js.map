{"version":3,"sources":["ApplicationServices.js","Company/CompanyApplicationService.js","Survey/SurveyApplicationService.js","DatabaseServices.js","CompanyUser/CompanyUserService.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","Customer/CustomerService.js","Image/ImageService.js","Location/LocationService.js","Product/ProductService.js","Map/MapService.js","Question/QuestionService.js","Report/ReportService.js","Survey/SurveyService.js","Role/RoleService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","UserRole/UserRoleService.js","User/UserService.js","App.js","MainController.js","CompanyAddEditController.js","CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","CustomerLocation/MerchandiseCustomerLocationController.js","Survey/MerchandiseSurveyController.js","SurveyData/MerchandiseSurveyData.js","Main/ReportMainController.js","Map/MapController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","SelectedCompany","GetSelectedCompany","SetSelectedCompany","company","SelectedSurvey","SetSelectedSurvey","survey","$http","$q","breeze","breezeservice","_self","deferredRequest","Search","predicate","page","pageSize","cancelExistingSearch","reject","deferred","defer","query","EntityQuery","from","where","skip","take","executeQuery","then","data","resolve","httpResponse","msg","code","promise","Get","id","method","url","success","status","headers","config","error","Create","item","post","response","statusText","length","Update","put","Delete","delete","$timeout","manager","all","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","navigationProperty","relationship","fromRole","toRole","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","orderByDesc","SearchJson","orderBy","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","companyId","surveyHeaderId","customerId","locationId","productId","surveyId","userId","CreateBulk","UpdateBulk","DeleteBulk","GetCurrentUser","app","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","moment","controller","$scope","$state","CompanyApplicationService","SurveyApplicationService","Route","go","toastr","$stateParams","$routeParams","$location","CompanyService","Init","Id","Name","Save","$parent","alert","p1","Predicate","p2","and","items","Select","Edit","reload","CustomerService","CompanyId","LocationService","ProductService","SurveyCustomerLocationService","SearchCustomers","value","SelectCustomer","model","label","CustomerId","SearchLocations","SelectLocation","LocationId","SurveyId","SurveyService","SurveyProductQuestionService","QuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","UserRoleService","RoleService","Roles","Customers","Validate","RoleId","Role","Customer","UserService","RedirectState","redirectState","SelectedLocation","Location","SelectedCustomer","Survey","UserId","==","companies","map","e","in","Company","SelectCompany","CustomerSearch","LocationSearch","SurveySearch","p3","SelectSurvey","SurveyHeaderService","SurveyDetailService","ImageService","BeforeImage","AfterImage","Header","Latitude","Longitude","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","element","reader","FileReader","files","onload","event","target","result","$apply","readAsDataURL","setAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","document","querySelector","empty","uiGridConstants","grid","options","showGridFooter","enableFiltering","enableSorting","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","columnDefs","field","displayName","width","cellTemplate","ReportService","gridOptions","keys","obj","includes","cellTooltip","row","index","indexOf","splice","NgMap","MapService","p4","getMap"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('CompanyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedCompany = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedCompany;\r\n    };\r\n\r\n    this.SetSelectedCompany = function (company) {\r\n        this.SelectedCompany = company;\r\n        this.NotifyObservers();\r\n    }\r\n});","angular.module('ApplicationServices').service('SurveyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedSurvey = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedSurvey;\r\n    };\r\n\r\n    this.SetSelectedSurvey = function (survey) {\r\n        this.SelectedSurvey = survey;\r\n        this.NotifyObservers();\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        //meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"Company\");\r\n        //meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"AspNetUser\");\r\n        //meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"AspNetRole\");\r\n\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\r\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"CustomerViewModels\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModels\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\r\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: [\"Created desc\"],\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CustomerApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('LocationApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('ProductApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('MapApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n            \r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('QuestionApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, page,pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };            \r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyCustomerLocationApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyDetailApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('SurveyHeaderApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/SurveyHeaderApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyProductQuestionApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n        }]);\r\n})();","var app = angular.module('Main', ['ngRoute', 'ui.grid', 'ui.bootstrap', 'ngAnimate','ngTouch', 'ui.router', 'NgMap', 'ui.grid.exporter', 'blockUI', 'breeze.angular', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Main/Views/Main.html\"\r\n        })\r\n        .state('main.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('MainController', ['$scope', '$state', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, CompanyApplicationService, SurveyApplicationService) {      \r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        CompanyApplicationService.RegisterObserver(function () { \r\n            $scope.SelectedCompany = CompanyApplicationService.SelectedCompany;\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SurveyApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SurveyApplicationService.SelectedSurvey;\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.surveycustomerlocation.addedit\" || state == \"main.surveyproductquestion.addedit\") {\r\n                    if (SurveyApplicationService.SelectedSurvey == undefined || SurveyApplicationService.SelectedSurvey == null || SurveyApplicationService.SelectedSurvey == \"\") {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (CompanyApplicationService.SelectedCompany == undefined || CompanyApplicationService.SelectedCompany == null || CompanyApplicationService.SelectedCompany == \"\") {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('Quantity', '>', 1);\r\n            var p2 = new breeze.Predicate('Longitude', '<', 1);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            CompanyService.Search(null, 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                CompanyApplicationService.SetSelectedCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            CustomerService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.customer.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, CompanyApplicationService, SurveyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            LocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.location.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();        \r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                debugger;\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            ProductService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.product.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'CustomerService', 'LocationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CompanyApplicationService, SurveyApplicationService, CustomerService, LocationService) {\r\n\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return CustomerService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return LocationService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', { }, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.SurveyId = SurveyApplicationService.SelectedSurvey.Id;\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', {}, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService, CompanyApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('SurveyId', '==', SurveyApplicationService.SelectedSurvey.Id);\r\n            //var p2 = new breeze.Predicate('Longitude', '<', 1);\r\n            //var predicate = new breeze.Predicate.and([p1, p2]);\r\n            SurveyCustomerLocationService.Search(p1, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.surveycustomerlocation.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null, Name : \"\"}\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, CompanyApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            SurveyService.Search(predicate, 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SurveyApplicationService.SetSelectedSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'ProductService','QuestionService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        CompanyApplicationService, SurveyApplicationService, ProductService, QuestionService) {\r\n\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return ProductService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return QuestionService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.SurveyId = SurveyApplicationService.SelectedSurvey.Id;\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService, CompanyApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('SurveyId', '==', SurveyApplicationService.SelectedSurvey.Id);\r\n            //var p2 = new breeze.Predicate('Longitude', '<', 1);\r\n            //var predicate = new breeze.Predicate.and([p1, p2]);\r\n            SurveyProductQuestionService.Search(p1, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.surveyproductquestion.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();        \r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                 $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            QuestionService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.question.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            CustomerService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(\"The username does not exist.\");\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.userrole.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService', 'SurveyCustomerLocationService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService, SurveyCustomerLocationService, CompanyApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null };\r\n        $scope.Search = function () {\r\n            UserService.GetCurrentUser().then(function (data) {\r\n                //http://stackoverflow.com/questions/18918470/breezejs-where-value-in-array\r\n                var predicate = { \"UserId\": { \"==\": data } };\r\n                //var predicate = { \"UserId\": { eq: { value: data, dataType: \"Guid\", isProperty: true } } };\r\n                UserRoleService.SearchJson(predicate, 0, 100, false).then(function (data) {\r\n                    var companies = data.map(function (e) { return e.CompanyId; });\r\n                    CompanyService.SearchJson({ \"Id\": { in: companies } }, 0, 20, false).then(function (data) {\r\n                        if (data.length == 1) {\r\n                            $scope.Company = data;\r\n                            $scope.SelectedCompany = data[0];\r\n                            $scope.SelectCompany();\r\n                        }\r\n                        else {\r\n                            $scope.Company = data;\r\n                        }\r\n                    }, function (error) {\r\n                        debugger;\r\n                    });\r\n                }, function (error) {\r\n                    debugger;\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', companyId);\r\n            SurveyCustomerLocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.Customer = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Customer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var p1 = new breeze.Predicate('CompanyId', '==', companyId);\r\n            var p2 = new breeze.Predicate('CustomerId', '==', customerId);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            SurveyCustomerLocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.Location = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedLocation.Location.Id, $scope.SelectedCustomer.Customer.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, locationId, customerId) {\r\n            var p1 = new breeze.Predicate('CompanyId', '==', companyId);\r\n            var p2 = new breeze.Predicate('LocationId', '==', locationId);\r\n            var p3 = new breeze.Predicate('CustomerId', '==', customerId);\r\n            var predicate = new breeze.Predicate.and([p1, p2, p3]);\r\n            SurveyCustomerLocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            $state.go($stateParams.redirectState, {\r\n                companyId: $scope.SelectedCompany.Id, surveyId: $scope.SelectedSurvey.Survey.Id,\r\n                customerId: $scope.SelectedCustomer.Customer.Id, locationId: $scope.SelectedLocation.Location.Id\r\n            });\r\n\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('survey', {\r\n            url: \"/survey/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService, ImageService) {\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null,\r\n            CompanyId: $stateParams.companyId, SurveyId: $stateParams.surveyId,\r\n            CustomerId: $stateParams.customerId, LocationId: $stateParams.locationId\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                var predicate = new breeze.Predicate('Id', '==', $stateParams.surveyHeaderId);\r\n                SurveyHeaderService.Search(predicate, 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                predicate = new breeze.Predicate('SurveyHeaderId', '==', $stateParams.surveyHeaderId);\r\n                SurveyDetailService.Search(predicate, 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + $stateParams.surveyHeaderId;\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + $stateParams.surveyHeaderId;\r\n            }\r\n            else {\r\n                var predicate = new breeze.Predicate('SurveyId', '==', $stateParams.surveyId);\r\n                SurveyProductQuestionService.Search(predicate, 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: $stateParams.companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        $state.go('survey', {\r\n                            companyId: $stateParams.companyId, surveyId: $stateParams.surveyId,\r\n                            customerId: $stateParams.customerId, locationId: $stateParams.locationId, surveyHeaderId: data.data.Id\r\n                        });\r\n                    });\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                ImageService.DeleteBeforeImage($stateParams.surveyHeaderId).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            angular.element(document.querySelector('#AfterImage')).empty();\r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                ImageService.DeleteAfterImage($stateParams.surveyHeaderId).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('reportmain', {\r\n            url: \"/reportmain/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Main/ReportMain.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportMainController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService','SurveyHeaderService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService) {\r\n        $scope.Search = function () {\r\n            if ($stateParams.customerId == \"\") { $stateParams.customerId = null }\r\n            if ($stateParams.locationId == \"\") { $stateParams.locationId = null }\r\n            ReportService.Search($stateParams.companyId, null, $stateParams.customerId, $stateParams.locationId, null, null, null, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if (key != 'Created' && !key.includes(\"Id\")) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: [\r\n              //{ name: 'Id' },\r\n              //{ name: 'ProductName' },\r\n              //{ name: 'LocationName' },\r\n              //{ name: 'CustomerName' },\r\n              //{ name: 'Question' },\r\n              //{ name: 'Answer' },\r\n              //{ name: $scope.gridOptions.data[0] },\r\n              //{ name: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>' }\r\n              //{ name: 'cumulativeWidgets', field: 'widgets', cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{grid.appScope.cumulative(grid, row)}}</div>' }\r\n            ]\r\n        };\r\n\r\n        $scope.Edit = function (row) {\r\n            debugger;\r\n            $state.go('survey', {\r\n                companyId: row.CompanyId, surveyId: row.SurveyId,\r\n                customerId: row.CustomerId, locationId: row.LocationId, surveyHeaderId: row.Id\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function(id){\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var index = $scope.gridOptions.data.map(function (e) { return e.Id; }).indexOf(id);\r\n                debugger;\r\n                $scope.gridOptions.data.splice(index, 1);\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('map', {\r\n            url: \"/map/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Map/Map.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MapController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService','SurveyHeaderService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService) {\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('CompanyId', '==', companyId);\r\n            var p2 = new breeze.Predicate('CustomerId', '==', customerId);\r\n            var p3 = new breeze.Predicate('CustomerId', '==', customerId);\r\n            var p4 = new breeze.Predicate('CustomerId', '==', customerId);\r\n            var predicate = new breeze.Predicate.and([p1, p2, p3, p4]);\r\n            MapService.Search(predicate, 0, 1000, false).then(function (data) {\r\n                \r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n    }]);\r\n})(moment);"],"sourceRoot":"/source/"}