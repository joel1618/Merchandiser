{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Company/CompanyService.js","Breeze/breezeservice.js","Breeze/metadata.js","Customer/CustomerService.js","CompanyUser/CompanyUserService.js","Location/LocationService.js","Map/MapService.js","Product/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Image/ImageService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyHeader/SurveyHeaderService.js","SurveyDetail/SurveyDetailService.js","SurveyProductQuestion/SurveyProductQuestionService.js","User/UserService.js","UserRole/UserRoleService.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","CustomerLocation/MerchandiseCustomerLocationController.js","Survey/MerchandiseSurveyController.js","SurveyData/MerchandiseSurveyData.js","Main/ReportMainController.js","Map/MapController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Clear","$http","$q","breeze","breezeservice","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","query","EntityQuery","from","where","orderBy","skip","take","executeQuery","then","data","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","post","response","statusText","length","Update","put","Delete","delete","$timeout","manager","all","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","SelectionApplicationService","parameters","companyId","surveyHeaderId","customerId","locationId","productId","surveyId","userId","SearchJson","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","run","$rootScope","$state","UserService","Role","go","redirectState","moment","controller","$scope","$window","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","Save","$parent","alert","items","Select","Edit","CustomerService","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","SurveyService","QuestionService","SurveyCustomerLocationService","SearchCustomers","substringof","SelectCustomer","SearchLocations","SelectLocation","Roles","Customers","Validate","Customer","Predicate","Message","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","RedirectState","SelectedLocation","SelectedCustomer","SelectCompany","CustomerSearch","LocationSearch","SurveySearch","SelectSurvey","IsGoShown","SurveyHeaderService","SurveyDetailService","ImageService","BeforeImage","AfterImage","Header","Notes","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","element","reader","FileReader","files","onload","event","target","result","$apply","readAsDataURL","setAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","document","querySelector","empty","uiGridConstants","grid","options","showGridFooter","enableFiltering","enableSorting","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","columnDefs","field","displayName","width","cellTemplate","ReportService","gridOptions","splice","cellTooltip","keys","obj","includes","row","NgMap","MapService","SelectedPosition","positions","getMap","SelectPosition","panTo","SelectMarker","marker"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Company = null;\r\n    this.GetCompany = function () {\r\n        return this.Company;\r\n    };\r\n\r\n    this.SetCompany = function (item) {\r\n        this.Company = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Location = null;\r\n    this.GetLocation = function () {\r\n        return this.Location;\r\n    };\r\n\r\n    this.SetLocation = function (item) {\r\n        this.Location = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Survey = null;\r\n    this.GetSurvey = function () {\r\n        return this.Survey;\r\n    };\r\n\r\n    this.SetSurvey = function (item) {\r\n        this.Survey = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.CompanyId = null;\r\n        this.Company = null;\r\n\r\n        this.CustomerId = null;\r\n\r\n        this.Location = null;\r\n        this.LocationId = null;\r\n\r\n        this.SurveyId = null;\r\n        this.Survey = null;\r\n\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"MapApi/Search/\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, page,pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/SurveyHeaderApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            //this.IsCustomer = function (companyId, customerId) {\r\n            //    var deferred = $q.defer();\r\n            //    this.GetCurrentUser().then(function (data) {\r\n            //        var userId = data;\r\n            //        var predicate = { \"Name\": { '==': \"Customer\" } }\r\n            //        RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //            var roles = data.map(function (e) { return e.Id; });\r\n            //            var predicate = {\r\n            //                and: [\r\n            //                   { \"UserId\": { '==': userId } },\r\n            //                   { \"RoleId\": { '==': data[0].Id } },\r\n            //                   { \"CustomerId\": { '==': customerId } },\r\n            //                   { \"CompanyId\": { '==': companyId } }\r\n            //                ]\r\n            //            }\r\n            //            UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //                debugger;\r\n            //                if (data.length > 0) {\r\n            //                    deferred.resolve(true);\r\n            //                }\r\n            //                else {\r\n            //                    deferred.resolve(false);\r\n            //                }\r\n            //            });\r\n            //        });\r\n            //    });\r\n            //    return deferred.promise;\r\n            //}\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Main', ['ngRoute', 'ui.grid', 'ui.bootstrap', 'ngAnimate', 'ngTouch', 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', 'breeze.angular', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"/App/ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.survey'\r\n                });\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.reportmain'\r\n                });\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            SelectionApplicationService.SetSurveyHeaderId(null);\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (SelectionApplicationService.GetCompanyId() == null) {\r\n                    $state.go('main.merchandise', { redirectState: state });\r\n                }\r\n                else {\r\n                    if (state == 'main.survey') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //if (SelectionApplicationService.GetSurveyId() == null) {\r\n                        //    $state.go('main.merchandise', { redirectState: state });\r\n                        //}\r\n                        //else {\r\n                        //    $state.go(state);\r\n                        //}\r\n                    }\r\n                    else if (state == 'main.reportmain') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                    else if (state == 'main.map') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\r\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http,\r\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.customer.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('http://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.location.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                debugger;\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.product.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null, Name : \"\"}\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.question.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', { }, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', {}, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(\"The username does not exist.\");\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.userrole.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data.Message);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService','QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.IsAdministrator = false;\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null, SurveyId: null };\r\n        $scope.UserId = null;\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Company = data;\r\n                    $scope.SelectedCompany = data[0];\r\n                    $scope.SelectCompany();\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            SelectionApplicationService.SetCompanyId($scope.SelectedCompany.Id);\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            var predicate = { \"CompanyId\": { '==': companyId } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                $scope.Customer = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            SelectionApplicationService.SetCustomerId($scope.SelectedCustomer.Id);\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var predicate = { \"CompanyId\": { \"==\": companyId } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Location = data;\r\n                    $scope.SelectedLocation = data[0];\r\n                    $scope.SelectLocation();\r\n                }\r\n                else {\r\n                    $scope.Location = data;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {\r\n            debugger;\r\n            SelectionApplicationService.SetLocation($scope.SelectedLocation);\r\n            SelectionApplicationService.SetLocationId($scope.SelectedLocation.Id);\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id, $scope.SelectedLocation.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, customerId, locationId) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": companyId } },\r\n                   { \"CustomerId\": { '==': customerId } },\r\n                   { \"LocationId\": { \"==\": locationId } }\r\n                ]\r\n            }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            SelectionApplicationService.SetSurveyId($scope.SelectedSurvey.SurveyId);\r\n            $state.go($stateParams.redirectState);\r\n        }\r\n\r\n        $scope.IsGoShown = function () {\r\n            if ($stateParams.redirectState == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService, SelectionApplicationService) {\r\n        $scope.Location = SelectionApplicationService.GetLocation();\r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.survey'\r\n            });\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } };\r\n                SurveyProductQuestionService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        //SelectionApplicationService.SetSurveyHeaderId(data.data.Id);\r\n                        //$scope.Search();\r\n                        $state.go('main.merchandise', {\r\n                            redirectState: 'main.survey'\r\n                        });\r\n                    });\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            angular.element(document.querySelector('#AfterImage')).empty();\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.reportmain', {\r\n            url: \"/reportmain\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Main/ReportMain.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportMainController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService', 'LocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService, LocationService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.reportmain'\r\n            });\r\n        }\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(), SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0,0,{\r\n                            name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                    else {\r\n                        return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                    }\r\n                }).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }                    \r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: []\r\n        };\r\n\r\n        $scope.Edit = function (row) {\r\n            LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n                SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function(id){\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                //var index = $scope.gridOptions.data.map(function (e) { return e.Id; }).indexOf(id);\r\n                //$scope.gridOptions.data.splice(index, 1);\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.map', {\r\n            url: \"/map\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Map/Map.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MapController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            MapService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);"],"sourceRoot":"/source/"}