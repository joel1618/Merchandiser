{"version":3,"sources":["ApplicationServices.js","Company/CompanyApplicationService.js","Survey/SurveyApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Image/ImageService.js","Location/LocationService.js","Map/MapService.js","Product/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","User/UserService.js","UserRole/UserRoleService.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","CustomerLocation/MerchandiseCustomerLocationController.js","Survey/MerchandiseSurveyController.js","SurveyData/MerchandiseSurveyData.js","Main/ReportMainController.js","Map/MapController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","SelectedCompany","GetSelectedCompany","SetSelectedCompany","company","SelectedSurvey","SetSelectedSurvey","survey","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","orderByDesc","skip","take","resolve","httpResponse","msg","code","promise","SearchJson","orderBy","Get","id","method","url","success","status","headers","config","error","Create","item","post","response","statusText","length","Update","put","Delete","delete","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","companyId","surveyHeaderId","customerId","locationId","productId","surveyId","userId","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","CompanyId","IsCustomer","CustomerId","IsDataEntry","app","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","run","$rootScope","$state","UserService","go","redirectState","moment","controller","$scope","CompanyApplicationService","SurveyApplicationService","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","Save","$parent","alert","p1","Predicate","p2","items","Select","Edit","reload","CustomerService","LocationService","ProductService","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","value","SelectCustomer","model","label","SearchLocations","SelectLocation","LocationId","SurveyId","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","Roles","Customers","Validate","Role","Customer","RedirectState","SelectedLocation","Location","SelectedCustomer","Survey","companies","in","Company","SelectCompany","CustomerSearch","promise2","promise3","customers","LocationSearch","SurveySearch","p3","SelectSurvey","IsGoShown","IsGoDisabled","SurveyHeaderService","SurveyDetailService","ImageService","BeforeImage","AfterImage","Header","Latitude","Longitude","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","element","reader","FileReader","files","onload","event","target","result","$apply","readAsDataURL","setAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","document","querySelector","empty","uiGridConstants","grid","options","showGridFooter","enableFiltering","enableSorting","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","columnDefs","field","displayName","width","cellTemplate","ReportService","gridOptions","cellTooltip","keys","obj","includes","row","index","indexOf","splice","GoTo","NgMap","MapService","SelectedPosition","p4","positions","getMap","SelectPosition","panTo","lat","lng","SelectMarker","marker"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('CompanyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedCompany = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedCompany;\r\n    };\r\n\r\n    this.SetSelectedCompany = function (company) {\r\n        this.SelectedCompany = company;\r\n        this.NotifyObservers();\r\n    }\r\n});","angular.module('ApplicationServices').service('SurveyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedSurvey = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedSurvey;\r\n    };\r\n\r\n    this.SetSelectedSurvey = function (survey) {\r\n        this.SelectedSurvey = survey;\r\n        this.NotifyObservers();\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        //meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"Company\");\r\n        //meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"AspNetUser\");\r\n        //meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"AspNetRole\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\",\"nullable\":\"false\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\",\"nullable\":\"false\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: [\"Created desc\"],\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CustomerApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: [\"Created desc\"],\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('LocationApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('MapApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n            \r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('ProductApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('QuestionApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, page,pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyCustomerLocationApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                //orderBy: [\"Customer.Name desc\"],\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyDetailApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('SurveyHeaderApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/SurveyHeaderApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyProductQuestionApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId, customerId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CustomerId\": { '==': customerId } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Main', ['ngRoute', 'ui.grid', 'ui.bootstrap', 'ngAnimate','ngTouch', 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', 'breeze.angular', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"/App/ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService) {\r\n    UserService.GetCurrentUser().then(function (data) {\r\n        $rootScope.UserId = data;\r\n        var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n        RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {  \r\n                if (data.length > 0) {\r\n                    $state.go('main.admin.company.addedit');\r\n                }\r\n                else {\r\n                    var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                               { \"RoleId\": { '==': data[0].Id } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                $state.go('merchandise', {\r\n                                    redirectState: 'main.survey'\r\n                                });\r\n                            }\r\n                            else {\r\n                                $state.go('merchandise', {\r\n                                    redirectState: 'main.reportmain'\r\n                                });\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    });\r\n});","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('MainController', ['$scope', '$state', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, CompanyApplicationService, SurveyApplicationService) {      \r\n        \r\n\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, CompanyApplicationService, SurveyApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        CompanyApplicationService.RegisterObserver(function () { \r\n            $scope.SelectedCompany = CompanyApplicationService.SelectedCompany;\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SurveyApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SurveyApplicationService.SelectedSurvey;\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SurveyApplicationService.SelectedSurvey == undefined || SurveyApplicationService.SelectedSurvey == null || SurveyApplicationService.SelectedSurvey == \"\") {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (CompanyApplicationService.SelectedCompany == undefined || CompanyApplicationService.SelectedCompany == null || CompanyApplicationService.SelectedCompany == \"\") {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('Quantity', '>', 1);\r\n            var p2 = new breeze.Predicate('Longitude', '<', 1);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            CompanyService.Search(null, 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                CompanyApplicationService.SetSelectedCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            CustomerService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.customer.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, CompanyApplicationService, SurveyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            LocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.location.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();        \r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                debugger;\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            ProductService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.product.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();        \r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                 $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            QuestionService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.question.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null, Name : \"\"}\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, CompanyApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            SurveyService.Search(predicate, 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SurveyApplicationService.SetSelectedSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'CustomerService', 'LocationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CompanyApplicationService, SurveyApplicationService, CustomerService, LocationService) {\r\n\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return CustomerService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return LocationService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', { }, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.SurveyId = SurveyApplicationService.SelectedSurvey.Id;\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', {}, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService, CompanyApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('SurveyId', '==', SurveyApplicationService.SelectedSurvey.Id);\r\n            //var p2 = new breeze.Predicate('Longitude', '<', 1);\r\n            //var predicate = new breeze.Predicate.and([p1, p2]);\r\n            SurveyCustomerLocationService.Search(p1, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.surveycustomerlocation.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'ProductService','QuestionService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        CompanyApplicationService, SurveyApplicationService, ProductService, QuestionService) {\r\n\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return ProductService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var p1 = new breeze.Predicate('Name', \"substringof\", value);\r\n            var p2 = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            return QuestionService.Search(predicate, 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.SurveyId = SurveyApplicationService.SelectedSurvey.Id;\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService, CompanyApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('SurveyId', '==', SurveyApplicationService.SelectedSurvey.Id);\r\n            //var p2 = new breeze.Predicate('Longitude', '<', 1);\r\n            //var predicate = new breeze.Predicate.and([p1, p2]);\r\n            SurveyProductQuestionService.Search(p1, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.surveyproductquestion.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            CustomerService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(\"The username does not exist.\");\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, CompanyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', CompanyApplicationService.SelectedCompany.Id);\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.userrole.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, CompanyApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.IsAdministrator = false;\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null };\r\n        $scope.UserId = null;\r\n        $scope.Search = function () {\r\n            UserService.GetCurrentUser().then(function (data) {\r\n                $scope.UserId = data;\r\n                var predicate = { \"UserId\": { \"==\": data } };\r\n                UserRoleService.SearchJson(predicate, 0, 100, false).then(function (data) {\r\n                    var companies = data.map(function (e) { return e.CompanyId; });\r\n                    CompanyService.SearchJson({ \"Id\": { in: companies } }, 0, 20, false).then(function (data) {\r\n                        if (data.length == 1) {\r\n                            $scope.Company = data;\r\n                            $scope.SelectedCompany = data[0];\r\n                            $scope.SelectCompany();\r\n                        }\r\n                        else {\r\n                            $scope.Company = data;\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            //Admin for the selected company show all customers\r\n            var promise = UserService.IsAdministrator(companyId);\r\n            promise.then(function (data) {\r\n                if (data == true) {\r\n                    $scope.IsAdministrator = true;\r\n                    var predicate = new breeze.Predicate('CompanyId', '==', companyId);\r\n                    SurveyCustomerLocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                        $scope.Customer = data;\r\n                    });\r\n                }\r\n            });\r\n            var promise2 = UserService.IsDataEntry(companyId);\r\n            promise2.then(function (data) {\r\n                if (data == true) {\r\n                    $scope.IsAdministrator = true;\r\n                    var predicate = new breeze.Predicate('CompanyId', '==', companyId);\r\n                    SurveyCustomerLocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                        $scope.Customer = data;\r\n                    });\r\n                }\r\n            });\r\n            var promise3 = UserService.IsCustomer(companyId);\r\n            promise3.then(function (data) {\r\n                if (data == true) {\r\n                    var predicate = {\r\n                        and: [\r\n                           { \"UserId\": { \"==\": $scope.UserId } },\r\n                           { \"CompanyId\": { '==': companyId } }\r\n                        ]\r\n                    }\r\n                    UserRoleService.SearchJson(predicate, 0, 100, false).then(function (data) {\r\n                        var customers = data.map(function (e) { return e.CustomerId; });\r\n                        SurveyCustomerLocationService.SearchJson({ \"CustomerId\": { in: customers } }, 0, 20, false).then(function (data) {\r\n                            if (data.length == 1) {\r\n                                $scope.Customer = data;\r\n                                $scope.SelectedCustomer = data[0];\r\n                                $scope.SelectCustomer();\r\n                            }\r\n                            else {\r\n                                $scope.Customer = data;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Customer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var p1 = new breeze.Predicate('CompanyId', '==', companyId);\r\n            var p2 = new breeze.Predicate('CustomerId', '==', customerId);\r\n            var predicate = new breeze.Predicate.and([p1, p2]);\r\n            SurveyCustomerLocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Location = data;\r\n                    $scope.SelectedLocation = data[0];\r\n                    $scope.SelectLocation();\r\n                }\r\n                else {\r\n                    $scope.Location = data;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedLocation.Location.Id, $scope.SelectedCustomer.Customer.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, locationId, customerId) {\r\n            var p1 = new breeze.Predicate('CompanyId', '==', companyId);\r\n            var p2 = new breeze.Predicate('LocationId', '==', locationId);\r\n            var p3 = new breeze.Predicate('CustomerId', '==', customerId);\r\n            var predicate = new breeze.Predicate.and([p1, p2, p3]);\r\n            SurveyCustomerLocationService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            $state.go($stateParams.redirectState, {\r\n                companyId: $scope.SelectedCompany.Id, surveyId: $scope.SelectedSurvey.Survey.Id,\r\n                customerId: $scope.SelectedCustomer.Customer.Id, locationId: $scope.SelectedLocation.Location.Id\r\n            });\r\n        }\r\n\r\n        $scope.IsGoShown = function () {\r\n            if ($stateParams.redirectState == 'main.reportmain' || $stateParams.redirectState == 'main.map') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        $scope.IsGoDisabled = function () {\r\n            if ($scope.SelectedCompany.Id != null) {\r\n                if ($scope.IsAdministrator == true) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    if ($scope.SelectedCustomer.Id != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService, ImageService) {\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null,\r\n            CompanyId: $stateParams.companyId, SurveyId: $stateParams.surveyId,\r\n            CustomerId: $stateParams.customerId, LocationId: $stateParams.locationId\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                var predicate = new breeze.Predicate('Id', '==', $stateParams.surveyHeaderId);\r\n                SurveyHeaderService.Search(predicate, 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                predicate = new breeze.Predicate('SurveyHeaderId', '==', $stateParams.surveyHeaderId);\r\n                SurveyDetailService.Search(predicate, 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + $stateParams.surveyHeaderId;\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + $stateParams.surveyHeaderId;\r\n            }\r\n            else {\r\n                var predicate = new breeze.Predicate('SurveyId', '==', $stateParams.surveyId);\r\n                SurveyProductQuestionService.Search(predicate, 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: $stateParams.companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        $state.go('main.survey', {\r\n                            companyId: $stateParams.companyId, surveyId: $stateParams.surveyId,\r\n                            customerId: $stateParams.customerId, locationId: $stateParams.locationId, surveyHeaderId: data.data.Id\r\n                        });\r\n                    });\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                ImageService.DeleteBeforeImage($stateParams.surveyHeaderId).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            angular.element(document.querySelector('#AfterImage')).empty();\r\n            if ($stateParams.surveyHeaderId != undefined && $stateParams.surveyHeaderId != null && $stateParams.surveyHeaderId != \"\") {\r\n                ImageService.DeleteAfterImage($stateParams.surveyHeaderId).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.reportmain', {\r\n            url: \"/reportmain/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Main/ReportMain.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportMainController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService','SurveyHeaderService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService) {\r\n        $scope.Search = function () {\r\n            if ($stateParams.customerId == \"\") { $stateParams.customerId = null }\r\n            if ($stateParams.locationId == \"\") { $stateParams.locationId = null }\r\n            ReportService.Search($stateParams.companyId, null, $stateParams.customerId, $stateParams.locationId, null, null, null, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: [\r\n              //{ name: 'Id' },\r\n              //{ name: 'ProductName' },\r\n              //{ name: 'LocationName' },\r\n              //{ name: 'CustomerName' },\r\n              //{ name: 'Question' },\r\n              //{ name: 'Answer' },\r\n              //{ name: $scope.gridOptions.data[0] },\r\n              //{ name: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>' }\r\n              //{ name: 'cumulativeWidgets', field: 'widgets', cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{grid.appScope.cumulative(grid, row)}}</div>' }\r\n            ]\r\n        };\r\n\r\n        $scope.Edit = function (row) {\r\n            debugger;\r\n            $state.go('survey', {\r\n                companyId: row.CompanyId, surveyId: row.SurveyId,\r\n                customerId: row.CustomerId, locationId: row.LocationId, surveyHeaderId: row.Id\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function(id){\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var index = $scope.gridOptions.data.map(function (e) { return e.Id; }).indexOf(id);\r\n                debugger;\r\n                $scope.gridOptions.data.splice(index, 1);\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.GoTo = function (state) {\r\n            $state.go(state, {\r\n                companyId: $stateParams.companyId, surveyId: $stateParams.surveyId,\r\n                customerId: $stateParams.customerId, locationId: $stateParams.locationId\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.map', {\r\n            url: \"/map/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Map/Map.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MapController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService','SurveyHeaderService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var p1 = new breeze.Predicate('CompanyId', '==', $stateParams.companyId);\r\n            var p2 = new breeze.Predicate('CustomerId', '==', $stateParams.customerId);\r\n            var p3 = new breeze.Predicate('LocationId', '==', $stateParams.locationId);\r\n            var p4 = new breeze.Predicate('SurveyId', '==', $stateParams.surveyId);\r\n            var predicate = new breeze.Predicate.and([p1, p2, p3, p4]);\r\n            MapService.Search(predicate, 0, 1000, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n\r\n        $scope.GoTo = function (state) {\r\n            $state.go(state, {\r\n                companyId: $stateParams.companyId, surveyId: $stateParams.surveyId,\r\n                customerId: $stateParams.customerId, locationId: $stateParams.locationId\r\n            });\r\n        }\r\n    }]);\r\n})(moment);"],"sourceRoot":"/source/"}