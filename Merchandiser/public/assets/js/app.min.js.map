{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Download/DownloadService.js","Image/ImageService.js","Location/LocationService.js","Map/MapService.js","Product/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","UserRole/UserRoleService.js","User/UserService.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","CustomerLocation/MerchandiseCustomerLocationController.js","Survey/MerchandiseSurveyController.js","SurveyData/MerchandiseSurveyData.js","ReportController.js","SurveyReportController.js","WeeklyReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Clear","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","orderBy","skip","take","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","post","response","Message","length","Update","put","statusText","Delete","delete","SelectionApplicationService","parameters","companyId","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","run","$rootScope","$state","UserService","Role","go","redirectState","moment","controller","$scope","$window","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","Save","$parent","items","Select","Edit","CustomerService","gridOptions","enableFiltering","enableSorting","columnDefs","cellTemplate","field","cellTooltip","row","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","substringof","SelectCustomer","SearchLocations","SelectLocation","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","Roles","Customers","Validate","Predicate","RedirectState","SelectedLocation","SelectedCustomer","SelectCompany","CustomerSearch","LocationSearch","SurveySearch","SelectSurvey","IsGoShown","SurveyHeaderService","SurveyDetailService","ImageService","BeforeImage","AfterImage","Header","Notes","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","element","reader","FileReader","IsBeforeImage","files","onload","event","target","result","$apply","readAsDataURL","setAfterImage","IsAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","alert","uiGridConstants","grid","options","showGridFooter","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","displayName","width","$uibModal","ReportService","MapService","DownloadService","StartDate","Date","format","startOf","EndDate","add","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","Page","PageSize","splice","exclude","keys","obj","includes","GetDataDown","infiniteScroll","saveScrollPercentage","concat","infiniteScrollRowsFromEnd","on","needLoadMoreData","index","ViewNote","modalInstance","open","animation","note","ViewImage","title","Download","NgMap","SelectedPosition","positions","getMap","SelectPosition","panTo","SelectMarker","marker","$uibModalInstance","ok","close","cancel","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Company = null;\r\n    this.GetCompany = function () {\r\n        return this.Company;\r\n    };\r\n\r\n    this.SetCompany = function (item) {\r\n        this.Company = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Customer = null;\r\n    this.GetCustomer = function () {\r\n        return this.Customer;\r\n    };\r\n\r\n    this.SetCustomer = function (item) {\r\n        this.Customer = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Location = null;\r\n    this.GetLocation = function () {\r\n        return this.Location;\r\n    };\r\n\r\n    this.SetLocation = function (item) {\r\n        this.Location = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Survey = null;\r\n    this.GetSurvey = function () {\r\n        return this.Survey;\r\n    };\r\n\r\n    this.SetSurvey = function (item) {\r\n        this.Survey = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.CompanyId = null;\r\n        this.Company = null;\r\n\r\n        this.CustomerId = null;\r\n        this.Customer = null;\r\n\r\n        this.LocationId = null;\r\n        this.Location = null;\r\n\r\n        this.SurveyId = null;\r\n        this.Survey = null;\r\n\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/Get/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"MapApi/Search/\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/MapApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.infiniteScroll', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMaterial', 'focus-if', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\n\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.survey'\r\n                });\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.report.surveyreport'\r\n                });\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            SelectionApplicationService.SetSurveyHeaderId(null);\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (SelectionApplicationService.GetCompanyId() == null) {\r\n                    $state.go('main.merchandise', { redirectState: state });\r\n                }\r\n                else {\r\n                    if (state == 'main.survey') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //if (SelectionApplicationService.GetSurveyId() == null) {\r\n                        //    $state.go('main.merchandise', { redirectState: state });\r\n                        //}\r\n                        //else {\r\n                        //    $state.go(state);\r\n                        //}\r\n                    }\r\n                    else if (state == 'main.report.surveyreport') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                    else if (state == 'main.map') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\r\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http,\r\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('http://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            debugger;\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                debugger;\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null, Name : \"\"}\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', { }, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', {}, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService','QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\r\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\r\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data.Message);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.IsAdministrator = false;\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null, SurveyId: null };\r\n        $scope.UserId = null;\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Company = data;\r\n                    $scope.SelectedCompany = data[0];\r\n                    $scope.SelectCompany();\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            SelectionApplicationService.SetCompanyId($scope.SelectedCompany.Id);\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            var predicate = { \"CompanyId\": { '==': companyId } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                $scope.Customer = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            SelectionApplicationService.SetCustomer($scope.SelectedCustomer);\r\n            SelectionApplicationService.SetCustomerId($scope.SelectedCustomer.Id);\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var predicate = { \"CompanyId\": { \"==\": companyId } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Location = data;\r\n                    $scope.SelectedLocation = data[0];\r\n                    $scope.SelectLocation();\r\n                }\r\n                else {\r\n                    $scope.Location = data;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {            \r\n            SelectionApplicationService.SetLocation($scope.SelectedLocation);\r\n            SelectionApplicationService.SetLocationId($scope.SelectedLocation.Id);\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id, $scope.SelectedLocation.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, customerId, locationId) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": companyId } },\r\n                   { \"CustomerId\": { '==': customerId } },\r\n                   { \"LocationId\": { \"==\": locationId } }\r\n                ]\r\n            }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            SelectionApplicationService.SetSurvey($scope.SelectedSurvey.Survey);\r\n            SelectionApplicationService.SetSurveyId($scope.SelectedSurvey.SurveyId);\r\n            $state.go($stateParams.redirectState);\r\n        }\r\n\r\n        $scope.IsGoShown = function () {\r\n            if ($stateParams.redirectState == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService, SelectionApplicationService) {\r\n        \r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.survey'\r\n            });\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } };\r\n                SurveyProductQuestionService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.IsBeforeImage = true;\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.IsAfterImage = true;\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error updating the survey.\");\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        $state.go('main.merchandise', {\r\n                            redirectState: 'main.survey'\r\n                        });\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(\"There was an error creating the survey.\");\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report', {\r\n            url: \"/report\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n    }]);\r\n\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'MapService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, MapService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n\r\n        $scope.StartDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().startOf('isoWeek').format(\"DD\"));\r\n        $scope.EndDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().add(2, \"days\").format(\"DD\"));\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {                    \r\n                    $scope.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Before', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeImage.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(2, 0, {\r\n                        name: 'After', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/AfterImage.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(3, 0, {\r\n                        name: 'Notes', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/Notes.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error getting all the data.\");\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.data = $scope.data.concat(data);\r\n                    //$scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData());\r\n                });\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: 'data',\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.data[index].Id == id) {\r\n                        $scope.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            MapService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n\r\n        $scope.Download = function () {\r\n            window.open('/DownloadApi/Get?startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.weeklyreport', {\r\n            url: \"/weeklyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Weekly/WeeklyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('WeeklyReportController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService', 'LocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService, LocationService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n        $scope.StartDate = moment().startOf('isoWeek').format(\"YYYY-MM-DD\");\r\n        $scope.EndDate = moment().add(1, \"days\").format(\"YYYY-MM-DD\");\r\n\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(), SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null, $scope.StartDate, $scope.EndDate, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                    else {\r\n                        return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                    }\r\n                }).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'CustomerName', name: 'Customer Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'LocationName', name: 'Location Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: []\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n                SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.gridOptions.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.gridOptions.data[index].Id == id) {\r\n                        $scope.gridOptions.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            MapService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\r\n    $scope.image = image;\r\n    $scope.title = title;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\r\n    $scope.note = note;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});"],"sourceRoot":"/source/"}