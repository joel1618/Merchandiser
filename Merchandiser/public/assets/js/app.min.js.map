{"version":3,"sources":["ApplicationServices.js","Company/CompanyApplicationService.js","Survey/SurveyApplicationService.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","Customer/CustomerService.js","CompanyUser/CompanyUserService.js","Image/ImageService.js","Location/LocationService.js","Map/MapService.js","Product/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","User/UserService.js","UserRole/UserRoleService.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","CustomerLocation/MerchandiseCustomerLocationController.js","Survey/MerchandiseSurveyController.js","SurveyData/MerchandiseSurveyData.js","Main/ReportMainController.js","Map/MapController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","SelectedCompany","GetSelectedCompany","SetSelectedCompany","company","SelectedSurvey","SetSelectedSurvey","survey","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","LocationId","GetLocationId","SetLocationId","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Clear","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","orderBy","skip","take","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","post","response","statusText","length","Update","put","Delete","delete","SelectionApplicationService","parameters","companyId","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","SearchJson","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","run","$rootScope","$state","UserService","Role","go","redirectState","moment","controller","$scope","$window","CompanyApplicationService","SurveyApplicationService","Username","GoTo","Logout","location","reload","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","Save","$parent","alert","items","Select","Edit","CustomerService","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","substringof","SelectCustomer","SearchLocations","SelectLocation","Roles","Customers","Validate","Customer","Predicate","Message","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","RedirectState","SelectedLocation","Location","SelectedCustomer","SelectCompany","CustomerSearch","LocationSearch","SurveySearch","SelectSurvey","IsGoShown","SurveyHeaderService","SurveyDetailService","ImageService","BeforeImage","AfterImage","Header","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","element","reader","FileReader","files","onload","event","target","result","$apply","readAsDataURL","setAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","document","querySelector","empty","uiGridConstants","grid","options","showGridFooter","enableFiltering","enableSorting","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","columnDefs","field","displayName","width","cellTemplate","ReportService","gridOptions","splice","cellTooltip","keys","obj","includes","row","NgMap","MapService","SelectedPosition","positions","getMap","SelectPosition","panTo","SelectMarker","marker"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('CompanyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedCompany = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedCompany;\r\n    };\r\n\r\n    this.SetSelectedCompany = function (company) {\r\n        this.SelectedCompany = company;\r\n        this.NotifyObservers();\r\n    }\r\n});","angular.module('ApplicationServices').service('SurveyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedSurvey = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedSurvey;\r\n    };\r\n\r\n    this.SetSelectedSurvey = function (survey) {\r\n        this.SelectedSurvey = survey;\r\n        this.NotifyObservers();\r\n    }\r\n});","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Company = null;\r\n    this.GetCompany = function () {\r\n        return this.Company;\r\n    };\r\n\r\n    this.SetCompany = function (item) {\r\n        this.Company = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Survey = null;\r\n    this.GetSurvey = function () {\r\n        return this.Survey;\r\n    };\r\n\r\n    this.SetSurvey = function (item) {\r\n        this.Survey = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.CompanyId = null;\r\n        this.Company = null;\r\n        this.CustomerId = null;\r\n        this.LocationId = null;\r\n        this.SurveyId = null;\r\n        this.Survey = null;\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\r\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\",\"nullable\":\"false\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\",\"nullable\":\"false\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\r\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"MapApi/Search/\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, page,pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/SurveyHeaderApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            //this.IsCustomer = function (companyId, customerId) {\r\n            //    var deferred = $q.defer();\r\n            //    this.GetCurrentUser().then(function (data) {\r\n            //        var userId = data;\r\n            //        var predicate = { \"Name\": { '==': \"Customer\" } }\r\n            //        RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //            var roles = data.map(function (e) { return e.Id; });\r\n            //            var predicate = {\r\n            //                and: [\r\n            //                   { \"UserId\": { '==': userId } },\r\n            //                   { \"RoleId\": { '==': data[0].Id } },\r\n            //                   { \"CustomerId\": { '==': customerId } },\r\n            //                   { \"CompanyId\": { '==': companyId } }\r\n            //                ]\r\n            //            }\r\n            //            UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //                debugger;\r\n            //                if (data.length > 0) {\r\n            //                    deferred.resolve(true);\r\n            //                }\r\n            //                else {\r\n            //                    deferred.resolve(false);\r\n            //                }\r\n            //            });\r\n            //        });\r\n            //    });\r\n            //    return deferred.promise;\r\n            //}\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Main', ['ngRoute', 'ui.grid', 'ui.bootstrap', 'ngAnimate', 'ngTouch', 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', 'breeze.angular', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"/App/ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.survey'\r\n                });\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.reportmain'\r\n                });\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'CompanyApplicationService', 'SurveyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, CompanyApplicationService, SurveyApplicationService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            SelectionApplicationService.SetSurveyHeaderId(null);\r\n            if (state == 'main.admin.company.addedit') {\r\n                //SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (SelectionApplicationService.GetCompanyId() == null) {\r\n                    $state.go('main.merchandise', { redirectState: state });\r\n                }\r\n                else {\r\n                    if (state == 'main.survey') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //if (SelectionApplicationService.GetSurveyId() == null) {\r\n                        //    $state.go('main.merchandise', { redirectState: state });\r\n                        //}\r\n                        //else {\r\n                        //    $state.go(state);\r\n                        //}\r\n                    }\r\n                    else if (state == 'main.reportmain') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                    else if (state == 'main.map') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'CompanyApplicationService', 'SurveyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, CompanyApplicationService, SurveyApplicationService, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService', 'CompanyApplicationService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService, CompanyApplicationService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                //CompanyApplicationService.SetSelectedCompany(data);\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, CompanyApplicationService) {\r\n        //CompanyApplicationService.NotifyObservers();\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.customer.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('http://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.location.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                debugger;\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'CompanyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        CompanyApplicationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.product.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.question.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null, Name : \"\"}\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                //SurveyApplicationService.SetSelectedSurvey(data);\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', { }, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', {}, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CompanyApplicationService, SurveyApplicationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(\"The username does not exist.\");\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.userrole.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data.Message);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService','QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'CompanyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, CompanyApplicationService, SelectionApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.IsAdministrator = false;\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null, SurveyId: null };\r\n        $scope.UserId = null;\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Company = data;\r\n                    $scope.SelectedCompany = data[0];\r\n                    $scope.SelectCompany();\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            SelectionApplicationService.SetCompanyId($scope.SelectedCompany.Id);\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            var predicate = { \"CompanyId\": { '==': companyId } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                $scope.Customer = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            SelectionApplicationService.SetCustomerId($scope.SelectedCustomer.Id);\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var predicate = { \"CompanyId\": { \"==\": companyId } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Location = data;\r\n                    $scope.SelectedLocation = data[0];\r\n                    $scope.SelectLocation();\r\n                }\r\n                else {\r\n                    $scope.Location = data;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {\r\n            SelectionApplicationService.SetLocationId($scope.SelectedLocation.Id);\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id, $scope.SelectedLocation.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, customerId, locationId) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": companyId } },\r\n                   { \"CustomerId\": { '==': customerId } },\r\n                   { \"LocationId\": { \"==\": locationId } }\r\n                ]\r\n            }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            SelectionApplicationService.SetSurveyId($scope.SelectedSurvey.SurveyId);\r\n            $state.go($stateParams.redirectState);\r\n        }\r\n\r\n        $scope.IsGoShown = function () {\r\n            if ($stateParams.redirectState == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService, ImageService,\r\n        SelectionApplicationService) {\r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.survey'\r\n            });\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } };\r\n                SurveyProductQuestionService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.SetSurveyHeaderId(data.data.Id);\r\n                        //$scope.Search();\r\n                        $state.go('main.merchandise', {\r\n                            redirectState: 'main.survey'\r\n                        });\r\n                    });\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            angular.element(document.querySelector('#AfterImage')).empty();\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.reportmain', {\r\n            url: \"/reportmain\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Main/ReportMain.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportMainController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.reportmain'\r\n            });\r\n        }\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(), SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0,0,{\r\n                            name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                    else {\r\n                        return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                    }\r\n                }).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }                    \r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: []\r\n        };\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            $state.go('main.survey');\r\n        }\r\n\r\n        $scope.Delete = function(id){\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                //var index = $scope.gridOptions.data.map(function (e) { return e.Id; }).indexOf(id);\r\n                //$scope.gridOptions.data.splice(index, 1);\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.map', {\r\n            url: \"/map\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Map/Map.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MapController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            MapService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);"],"sourceRoot":"/source/"}