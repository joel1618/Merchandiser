{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Question/QuestionService.js","Breeze/breezeservice.js","Breeze/metadata.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Download/DownloadService.js","Image/ImageService.js","Location/LocationService.js","Product/ProductService.js","ProductCategory/ProductService.js","Company/CompanyService.js","Report/ReportService.js","Role/RoleService.js","SelectLocation/SelectLocationService.js","SelectSurvey/SelectSurveyService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyCustomerLocationProductQuestion/SurveyCustomerLocationProductQuestionService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","UserRole/UserRoleService.js","User/UserService.js","Directives.js","AffixResizer.js","AfterImage.js","BeforeImage.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","ProductCategory/Controllers/ProductCategoryAddEditController.js","ProductCategory/Controllers/ProductCategoryController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionAddEditController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","SelectCompany/SelectCompanyController.js","SelectCustomer/SelectCustomerController.js","SelectLocation/SelectLocationController.js","SelectSurvey/SelectSurveyController.js","Survey/MerchandiseSurveyController.js","ReportController.js","SurveyReportController.js","SurveyHeaderReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","moment","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","RedirectState","GetRedirectState","SetRedirectState","state","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Role","GetRole","SetRole","role","StartDate","Date","startOf","format","GetStartDate","SetStartDate","date","EndDate","add","GetEndDate","SetEndDate","Clear","$http","$q","breeze","breezeservice","SelectionApplicationService","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","query","EntityQuery","from","where","orderBy","skip","take","parameters","companyId","executeQuery","then","data","resolve","httpResponse","msg","code","promise","Get","method","url","success","status","headers","config","error","Create","post","response","length","Update","put","Delete","delete","$timeout","manager","all","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","DownloadSurveyData","DownloadNoteData","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","statusText","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","AdminSearch","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","Message","inlineCount","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","directive","$window","restrict","link","scope","elem","attrs","element","on","innerWidth","addClass","removeClass","$scope","reader","FileReader","onload","AfterImage","target","result","$apply","Header","IsAfterImage","files","readAsDataURL","BeforeImage","IsBeforeImage","blockUIConfig","delay","filter","utcDate","dt","getTime","$stateProvider","$urlRouterProvider","otherwise","templateUrl","run","$rootScope","$state","UserService","go","controller","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","focus","Save","$parent","items","Select","Edit","LocationService","Latitude","Longitude","index","gridOptions","indexOf","splice","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","enableFiltering","enableSorting","columnDefs","width","cellTemplate","field","cellTooltip","row","CustomerService","ProductService","ProductCategoryService","SearchProductCategories","substringof","SelectProductCategory","ProductCategoryId","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","SelectCustomer","SearchLocations","SelectLocation","SurveyCustomerLocationProductQuestionService","Question","Product","ProductId","itemCopy","SelectCustomerCopy","SelectLocationCopy","SearchProducts","SelectProduct","ProductName","SelectProductCopy","SearchQuestions","SelectQuestion","QuestionId","Copy","promises","i","Results","RowOrder","rowOrder","Page","showGridFooter","onRegisterApi","gridApi","draggableRows","rowDropped","info","dropTarget","core","filterChanged","column","grid","isDefined","filterTimeout","cancel","columns","infiniteScroll","needLoadMoreData","GetDataDown","rowTemplate","gridColumns","equalsColumns","filters","term","trim","operandName","fieldName","termName","contains","saveScrollPercentage","concat","dataLoaded","isMoreData","InlineCount","count","Reorder","ValidateForOrdering","ReorderAll","j","customer","SurveyProductQuestionService","copyItem","SelectCopyProduct","CopyQuestion","Product.Id","scrollTo","Roles","Customers","Validate","Predicate","Continue","IsContinueShown","SelectLocationService","LocationServicesDisabled",">=","<=","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","SelectSurveyService","SurveyHeaderService","SurveyDetailService","ImageService","Notes","Detail","sort","descending","changeSorting","details","Answer","Details","fileSizeBeforeImage","fileSizeAfterImage","size","alert","SelectedCustomer","SelectedLocation","$uibModal","ReportService","DownloadService","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","PageSize","headerTooltip","exclude","keys","obj","includes","enableGridMenu","infiniteScrollRowsFromEnd","ViewNote","modalInstance","open","animation","note","ViewImage","title","Company.Id","Created","Customer.Id","Location.Id","Survey.Id","ViewDetail","NgMap","SelectedPosition","getMap","SelectPosition","panTo","SelectMarker","event","marker","$uibModalInstance","ok","close","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n        var observers = [];\r\n        this.RegisterObserver = function (callback) {\r\n            observers.push(callback);\r\n        }\r\n\r\n        this.NotifyObservers = function () {\r\n            angular.forEach(observers, function (callback) {\r\n                callback();\r\n            });\r\n        };\r\n\r\n        this.RedirectState = null;\r\n        this.GetRedirectState = function () {\r\n            return this.RedirectState;\r\n        }\r\n\r\n        this.SetRedirectState = function (state) {\r\n            this.RedirectState = state;\r\n        }\r\n\r\n        this.CompanyId = null;\r\n        this.GetCompanyId = function () {\r\n            return this.CompanyId;\r\n        };\r\n\r\n        this.SetCompanyId = function (id) {\r\n            this.CompanyId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Company = null;\r\n        this.GetCompany = function () {\r\n            return this.Company;\r\n        };\r\n\r\n        this.SetCompany = function (item) {\r\n            this.Company = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.CustomerId = null;\r\n        this.GetCustomerId = function () {\r\n            return this.CustomerId;\r\n        };\r\n\r\n        this.SetCustomerId = function (id) {\r\n            this.CustomerId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Customer = null;\r\n        this.GetCustomer = function () {\r\n            return this.Customer;\r\n        };\r\n\r\n        this.SetCustomer = function (item) {\r\n            this.Customer = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.LocationId = null;\r\n        this.GetLocationId = function () {\r\n            return this.LocationId;\r\n        };\r\n\r\n        this.SetLocationId = function (id) {\r\n            this.LocationId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Location = null;\r\n        this.GetLocation = function () {\r\n            return this.Location;\r\n        };\r\n\r\n        this.SetLocation = function (item) {\r\n            this.Location = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.SurveyId = null;\r\n        this.GetSurveyId = function () {\r\n            return this.SurveyId;\r\n        };\r\n\r\n        this.SetSurveyId = function (id) {\r\n            this.SurveyId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Survey = null;\r\n        this.GetSurvey = function () {\r\n            return this.Survey;\r\n        };\r\n\r\n        this.SetSurvey = function (item) {\r\n            this.Survey = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.SurveyHeaderId = null;\r\n        this.GetSurveyHeaderId = function () {\r\n            return this.SurveyHeaderId;\r\n        };\r\n\r\n        this.SetSurveyHeaderId = function (id) {\r\n            this.SurveyHeaderId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Role = null;\r\n        this.GetRole = function () {\r\n            return this.Role;\r\n        }\r\n\r\n        this.SetRole = function (role) {\r\n            this.Role = role;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.StartDate = new Date(moment().startOf('isoWeek').format(\"YYYY-MM-DD 00:00:00\"));\r\n        this.GetStartDate = function () {\r\n            return this.GetStartDate;\r\n        }\r\n\r\n        this.SetStartDate = function (date) {\r\n            this.StartDate = date;\r\n        }\r\n\r\n        this.EndDate = new Date(moment().add(2, \"days\").format(\"YYYY-MM-DD : 23:59:59\"));\r\n        this.GetEndDate = function () {\r\n            return this.GetEndDate;\r\n        }\r\n\r\n        this.SetEndDate = function (date) {\r\n            this.EndDate = date;\r\n        }\r\n\r\n        this.Clear = function () {\r\n            this.RedirectState = null;\r\n\r\n            this.CompanyId = null;\r\n            this.Company = null;\r\n\r\n            this.CustomerId = null;\r\n            this.Customer = null;\r\n\r\n            this.LocationId = null;\r\n            this.Location = null;\r\n\r\n            this.SurveyId = null;\r\n            this.Survey = null;\r\n\r\n            this.SurveyHeaderId = null;\r\n        }\r\n    });\r\n})(moment);","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"LocationApi/Search\", \"LocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationProductQuestionApi/Search\", \"SurveyCustomerLocationProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductCategoryApi/Search\", \"ProductCategoryViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyHeaderApi/Search\", \"SurveyHeaderViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SelectLocationApi/Search\", \"SelectLocationViewModel\");        \r\n        meta.setEntityTypeForResourceName(\"SelectSurveyApi/Search\", \"SelectSurveyViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.ProductCategoryViewModel\\\",\\\"Merchandiser.Models.ProductCategoryViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SelectLocationViewModel\\\",\\\"Merchandiser.Models.SelectLocationViewModel\\\"],[\\\"Merchandiser.SelectSurveyViewModel\\\",\\\"Merchandiser.Models.SelectSurveyViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationProductQuestionViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.SurveyHeaderViewModel\\\",\\\"Merchandiser.Models.SurveyHeaderViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"],[\\\"Merchandiser.UserInfoViewModel\\\",\\\"Merchandiser.Models.UserInfoViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsSendReport\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"SendReport\",\"type\":\"Edm.DateTime\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CustomerName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LocationName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductCategoryViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductCategoryViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SelectLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyCreated\",\"type\":\"Edm.DateTime\"}]},{\"name\":\"SelectSurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectSurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyCreated\",\"type\":\"Edm.DateTime\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Company\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\"},{\"name\":\"Product\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Product\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Question\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductCategoryId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"ProductCategory\",\"relationship\":\"Self.ProductViewModel_ProductCategory\",\"fromRole\":\"ProductViewModel_ProductCategory_Source\",\"toRole\":\"ProductViewModel_ProductCategory_Target\"}},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsTrueFalse\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsNoteRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsEdit\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsEditDays\",\"type\":\"Edm.Int32\"},{\"name\":\"IsDelete\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsDeleteDays\",\"type\":\"Edm.Int32\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"SurveyHeaderViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyHeaderViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"IsBeforeImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsAfterImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyHeaderViewModel_Company\",\"fromRole\":\"SurveyHeaderViewModel_Company_Source\",\"toRole\":\"SurveyHeaderViewModel_Company_Target\"},{\"name\":\"CreatedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"fromRole\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_CreatedUser_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyHeaderViewModel_Customer\",\"fromRole\":\"SurveyHeaderViewModel_Customer_Source\",\"toRole\":\"SurveyHeaderViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyHeaderViewModel_Location\",\"fromRole\":\"SurveyHeaderViewModel_Location_Source\",\"toRole\":\"SurveyHeaderViewModel_Location_Target\"},{\"name\":\"ModifiedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"fromRole\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_ModifiedUser_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyHeaderViewModel_Survey\",\"fromRole\":\"SurveyHeaderViewModel_Survey_Source\",\"toRole\":\"SurveyHeaderViewModel_Survey_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.SurveyHeaderViewModel_UserInfo\",\"fromRole\":\"SurveyHeaderViewModel_UserInfo_Source\",\"toRole\":\"SurveyHeaderViewModel_UserInfo_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserInfoViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserInfoViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Survey\",\"fromRole\":\"SurveyProductQuestionViewModel_Survey_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Survey_Target\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.UserRoleViewModel_UserInfo\",\"fromRole\":\"UserRoleViewModel_UserInfo_Source\",\"toRole\":\"UserRoleViewModel_UserInfo_Target\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"type\":\"Edm.Self.ProductCategoryViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"ProductViewModel_ProductCategory_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"ProductViewModel_ProductCategory_Source\",\"propertyRef\":{\"name\":\"ProductCategoryId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}},{\"name\":\"UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"ProductCategoryViewModel\",\"entityType\":\"Self.ProductCategoryViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SelectLocationViewModel\",\"entityType\":\"Self.SelectLocationViewModel\"},{\"name\":\"SelectSurveyViewModel\",\"entityType\":\"Self.SelectSurveyViewModel\"},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel\",\"entityType\":\"Self.SurveyCustomerLocationProductQuestionViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"SurveyHeaderViewModel\",\"entityType\":\"Self.SurveyHeaderViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"},{\"name\":\"UserInfoViewModels\",\"entityType\":\"Self.UserInfoViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Company\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"ProductViewModel_ProductCategory\",\"association\":\"Self.ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"entitySet\":\"ProductCategoryViewModel\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Product\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Question\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Company\",\"association\":\"Self.SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"association\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"association\":\"Self.SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_Location\",\"association\":\"Self.SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"association\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"association\":\"Self.SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"association\":\"Self.SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Survey\",\"association\":\"Self.SurveyProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Survey_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"UserRoleViewModel_UserInfo\",\"association\":\"Self.UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.DownloadSurveyData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadSurveyData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DownloadNoteData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadNoteData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.data.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.data.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductCategoryService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductCategoryApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductCategoryApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductCategoryApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductCategoryApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductCategoryApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectLocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectLocationApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectSurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectSurveyApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                inlineCount: true\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    inlineCount: true,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                inlineCount: true\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","var app = angular.module('Directives',[]);\r\n","var app = angular.module('Directives');\r\n\r\napp.directive('affixResizer', ['$window', '$timeout', function ($window, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attrs) {\r\n\r\n            angular.element($window).on('resize', function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n\r\n            $timeout(function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\r\nvar app = angular.module('Directives');\r\n\r\napp.directive('afterImage', [function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function ($scope, elem, attrs) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function (e) {\r\n                $scope.AfterImage = e.target.result;\r\n                $scope.$apply();\r\n            }\r\n\r\n            elem.on('change', function () {\r\n                $scope.Header.IsAfterImage = true;\r\n                $scope.Header.AfterImage = elem[0].files[0];\r\n                reader.readAsDataURL(elem[0].files[0]);\r\n            });\r\n        }\r\n    }\r\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\r\nvar app = angular.module('Directives');\r\n\r\napp.directive('beforeImage', [function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function ($scope, elem, attrs) {\r\n            var reader = new FileReader();\r\n            \r\n            reader.onload = function (e) {\r\n                $scope.BeforeImage = e.target.result;\r\n                $scope.$apply();\r\n            }\r\n\r\n            elem.on('change', function () {\r\n                $scope.Header.IsBeforeImage = true;\r\n                $scope.Header.BeforeImage = elem[0].files[0];\r\n                reader.readAsDataURL(elem[0].files[0]);\r\n            });\r\n        }\r\n    }\r\n}]);","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.draggable-rows', 'ui.grid.infiniteScroll', 'ui.grid.cellNav', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMessages', 'ngMaterial', 'focus-if', 'mgcrea.bootstrap.affix', 'Directives', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.filter('dateLocalize', function () {\r\n    return function (utcDate) {\r\n        if (utcDate == null)\r\n            return \"\";\r\n        else {\r\n            var dt = new Date(utcDate + 'Z').getTime();\r\n            return dt;\r\n        }        \r\n    }\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Administrator\");\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Data Entry\");\r\n                SelectionApplicationService.SetRedirectState('main.survey');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Customer\");\r\n                SelectionApplicationService.SetRedirectState('main.report.surveyheaderreport');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                SelectionApplicationService.Clear();\r\n                \r\n            SelectionApplicationService.SetRedirectState(state);\r\n                $state.go('main.selectcompany');\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.Role = SelectionApplicationService.GetRole();\r\n        })\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocationproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\r\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http,\r\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductService', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductService, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProductCategories = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductCategory = function (item, model, label) {\r\n            $scope.item.ProductCategoryId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'ProductCategory.Name', name: 'Category Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategoryAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductCategoryService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductCategoryService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductCategoryService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory', {\r\n            url: \"/productcategory\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategory.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.productcategory.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductCategoryService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" };\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'IsRequired', name: 'Required', cellTooltip: true},\r\n                { field: 'IsTrueFalse', name: 'True False', cellTooltip: true}\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            else {\r\n                $scope.Init();\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestionAddEdit.html\",\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams',\r\n    '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'CustomerService', 'LocationService', 'ProductService', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams,\r\n        $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        CustomerService, LocationService, ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = {\r\n                Question: { Name: null },\r\n                Location: { Name: null },\r\n                Customer: { Name: null },\r\n                Product: { Name: null },\r\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\r\n            $scope.itemCopy = {\r\n                Question: { Name: null },\r\n                Location: { Name: null },\r\n                Customer: { Name: null },\r\n                Product: { Name: null },\r\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SelectCustomerCopy = function (item, model, label) {\r\n            $scope.itemCopy.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.SelectLocationCopy = function (item, model, label) {\r\n            $scope.itemCopy.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n            $scope.item.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SelectProductCopy = function (item, model, label) {\r\n            $scope.itemCopy.ProductId = item.Id;\r\n            $scope.itemCopy.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.data.splice(0, 0, data.data);\r\n                    $scope.item.QuestionId = null; $scope.item.Question.Name = null;\r\n                    //$scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Copy = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } },\r\n                   { \"SurveyId\": { '==': SelectionApplicationService.GetSurveyId() } },\r\n                   { \"CustomerId\": { '==': $scope.item.CustomerId } }\r\n                ]\r\n            }\r\n            if ($scope.item.LocationId != null) { predicate.and.push({ \"LocationId\": { '==': $scope.item.LocationId } }) }\r\n            if ($scope.item.ProductId != null) { predicate.and.push({ \"ProductId\": { '==': $scope.item.ProductId } }) }\r\n            if ($scope.item.QuestionId != null) { predicate.and.push({ \"QuestionId\": { '==': $scope.item.QuestionId } }) }\r\n            var promise = {}, promises = [];\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                for (var i = 0; i < data.Results.length; i++) {\r\n                    var item = {\r\n                        CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                        SurveyId: SelectionApplicationService.GetSurveyId(),\r\n                        RowOrder: data.Results[i].rowOrder,\r\n                        CustomerId: $scope.itemCopy.CustomerId,\r\n                        LocationId: $scope.itemCopy.LocationId,\r\n                        ProductId: $scope.itemCopy.ProductId,\r\n                        QuestionId: $scope.itemCopy.QuestionId,\r\n                    }\r\n                    if ($scope.itemCopy.LocationId == null) {\r\n                        item.LocationId = data.Results[i].Location.Id;\r\n                    }\r\n                    if ($scope.itemCopy.ProductId == null) {\r\n                        item.ProductId = data.Results[i].Product.Id;\r\n                    }\r\n                    if ($scope.itemCopy.QuestionId == null) {\r\n                        item.QuestionId = data.Results[i].Question.Id;\r\n                    }\r\n                    promise = SurveyCustomerLocationProductQuestionService.Create(item).then(function (data) {\r\n\r\n                    });\r\n                    //$scope.$parent.gridOptions.data.push(data);\r\n                    promises.push(promise);                   \r\n                }\r\n                $q.all(promises).then(function () {\r\n                    toastr.success(\"The specified survey data has been copied over.\");\r\n                    $scope.itemCopy = { Id: null }\r\n                    $scope.$parent.Search();\r\n                });\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion', {\r\n            url: \"/survey/customerlocationproductquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestion.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionController', ['$scope', '$state', '$routeParams',\r\n        '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams,\r\n    $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Page = 0;\r\n        var predicate = {\r\n            and: [\r\n                { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            ]\r\n        }\r\n        $scope.Search = function () {\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: 'data',\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    //$scope.Reorder();\r\n                });\r\n                gridApi.core.on.filterChanged($scope, function (column) {\r\n                    var grid = this.grid;\r\n                    if (angular.isDefined($scope.filterTimeout)) {\r\n                        $timeout.cancel($scope.filterTimeout);\r\n                    }\r\n                    $scope.filterTimeout = $timeout(function () {\r\n                        $scope.filterChanged(grid.columns);\r\n                    }, 1000);\r\n                });\r\n\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.filterChanged = function (gridColumns) {\r\n            var equalsColumns = [\"RowOrder\"];\r\n            predicate.and.length = 1;\r\n            angular.forEach(gridColumns, function (column) {\r\n                if (typeof column.filters !== 'undefined' && column.filters !== null &&\r\n                        column.filters.length > 0 && column.filters[0].term != null && column.filters[0].term.trim().length > 0) {\r\n\r\n                    var operandName = \"contains\"; var fieldName = column.field; var termName = column.filters[0].term;\r\n                    if (equalsColumns.contains(column.field)) {\r\n                        operandName = \"==\";\r\n                    }\r\n                    var filter = {};\r\n                    var field = {}\r\n                    field[operandName] = termName;\r\n                    filter[fieldName] = field;\r\n                    predicate.and.push(filter);\r\n                }\r\n            });\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function (count) {\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocationproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        //TODO: Reorder button.  Don't do on drop.  \r\n        $scope.Reorder = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            //reorder\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                var row = $scope.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        //TODO: Button and group by customer location and filter based on current selection.  Need validation as well in there.\r\n        $scope.ReorderAll = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            var promise = {}, promises = [];\r\n            angular.forEach($scope.data, function (item, index) {\r\n                var predicate = {\r\n                    and: [\r\n                        { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                        { \"ProductId\": { \"==\": item.ProductId } },\r\n                        { \"QuestionId\": { \"==\": item.QuestionId } }\r\n                    ]\r\n                }\r\n                promise = SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    for (var j = 0; j < data.Results.length; j++) {\r\n                        var row = data.Results[j];\r\n                        row.RowOrder = index;\r\n                        SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n\r\n                        });\r\n                    }\r\n                });\r\n                promises.push(promise);\r\n                $q.all(promises).then(function () {\r\n                    $scope.Search();\r\n                })\r\n            });\r\n        }\r\n\r\n        $scope.ValidateForOrdering = function () {\r\n            var customer = $scope.data[0].CustomerId;\r\n            var location = $scope.data[0].LocationId;\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                if (customer != $scope.data[i].CustomerId) {\r\n                    toastr.error(\"The grouping does not contain just one customer.  Please filter down to just one customer first before ordering.\");\r\n                    return false;\r\n                }\r\n                if (location != $scope.data[i].LocationId) {\r\n                    toastr.error(\"The grouping does not contain just one location.  Please filter down to just one location first before ordering.\");\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n            $scope.copyItem = { Id: null }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n            $scope.item.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SelectCopyProduct = function (item, model, label) {\r\n            $scope.copyItem.ProductId = item.Id;\r\n            $scope.copyItem.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.CopyQuestion = function () {\r\n            var promise = {}, promises = [];\r\n            var predicate = {\r\n                and: [\r\n                   { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            SurveyProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 1, false).then(function (data) {\r\n                var rowOrder = data.InlineCount;\r\n                predicate = {\r\n                    and: [\r\n                       { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"Product.Id\": { \"==\": $scope.item.ProductId } }\r\n                    ]\r\n                }\r\n                SurveyProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                    for (var i = 0; i < data.Results.length; i++) {\r\n                        var item = {\r\n                            ProductId: $scope.copyItem.ProductId,\r\n                            QuestionId: data.Results[i].Question.Id,\r\n                            RowOrder: rowOrder,\r\n                            CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                            SurveyId: SelectionApplicationService.GetSurveyId()\r\n                        }\r\n                        var promise = SurveyProductQuestionService.Create(item).then(function (data) {\r\n\r\n                        });\r\n                        rowOrder++;\r\n                        promises.push(promise);\r\n                    }\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success($scope.item.ProductName + \" questions have been copied to product \" + $scope.copyItem.ProductName);\r\n                        $scope.copyItem = { Id: null }\r\n                        $scope.$parent.Search();\r\n                    });\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                $scope.item.RowOrder = $scope.$parent.gridOptions.data.length;\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.$parent.gridOptions.gridApi.core.scrollTo($scope.gridOptions.data[$scope.gridOptions.data.length - 1], $scope.gridOptions.columnDefs[0]);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$q', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $q, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data.Results;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: false,\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridOptions.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    $scope.Reorder();\r\n                });\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Reorder = function () {\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.gridOptions.data.length; i++) {\r\n                var row = $scope.gridOptions.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name != \"Customer\") {\r\n                $scope.item.Customer = null;\r\n            }\r\n\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\r\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\r\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcompany', {\r\n            url: \"/selectcompany/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCompany/SelectCompany.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCompanyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCompany(item);\r\n            SelectionApplicationService.SetCompanyId(item.Id);\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcustomer', {\r\n            url: \"/selectcustomer/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCustomer/SelectCustomer.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCustomerController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Customer = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCustomer(item);\r\n            SelectionApplicationService.SetCustomerId(item.Id);\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectlocation', {\r\n            url: \"/selectlocation/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectLocation/SelectLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectLocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectLocationService) {\r\n        \r\n        $scope.LocationServicesDisabled = false;\r\n        $scope.Location = [];\r\n        $scope.predicate = {\r\n            and: [\r\n               { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ]\r\n        }\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                $scope.predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },                       \r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"Latitude\": { '>=': $scope.Latitude - .0725 } },\r\n                       { \"Latitude\": { '<=': $scope.Latitude + .0725 } },\r\n                       { \"Longitude\": { '>=': $scope.Longitude - .0725 } },\r\n                       { \"Longitude\": { '<=': $scope.Longitude + .0725 } }\r\n                    ]\r\n                }\r\n                SelectLocationService.Search($scope.predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            else {\r\n                LocationService.Search($scope.predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go('main.selectsurvey');\r\n                    }\r\n                    if (data.length < 1) {\r\n                        $scope.LocationServicesDisabled = true;\r\n                    }\r\n                    else if (data.length == 1) {\r\n                        $scope.Select(data[0]);\r\n                    }\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            \r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Latitude = position.coords.latitude;\r\n            $scope.Longitude = position.coords.longitude;\r\n            $scope.Search();\r\n        }, function (error) {\r\n            toastr.error(\"User has denied geolocation for this site.  Please allow location services to get your location to find locations near you.\");\r\n            $scope.LocationServicesDisabled = true;\r\n        });\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.Latitude = item.geometry.location.lat;\r\n            $scope.Longitude = item.geometry.location.lng;\r\n            $scope.LocationServicesDisabled = false;\r\n            if (SelectionApplicationService.GetRedirectState() != 'main.survey') {\r\n                $scope.predicate.and = [];\r\n                $scope.predicate.and.push({ \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } });\r\n                $scope.predicate.and.push({ \"Latitude\": { '>=': $scope.Latitude - .0725 } });\r\n                $scope.predicate.and.push({ \"Latitude\": { '<=': $scope.Latitude + .0725 } });\r\n                $scope.predicate.and.push({ \"Longitude\": { '>=': $scope.Longitude - .0725 } });\r\n                $scope.predicate.and.push({ \"Longitude\": { '<=': $scope.Longitude + .0725 } });\r\n            }\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetLocation(item);\r\n            SelectionApplicationService.SetLocationId(item.Id);\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectsurvey', {\r\n            url: \"/selectsurvey/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectSurvey/SelectSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectSurveyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectSurveyService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectSurveyService) {\r\n        \r\n        $scope.Survey = [];\r\n        $scope.Search = function () {\r\n            if(SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SelectSurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                    ]\r\n                }\r\n                SurveyService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go(SelectionApplicationService.GetRedirectState());\r\n                    }\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SurveyService.Get(item.Id).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                $state.go(SelectionApplicationService.GetRedirectState());\r\n            });\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go(SelectionApplicationService.GetRedirectState());\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyCustomerLocationProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyCustomerLocationProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService, SelectionApplicationService) {\r\n        \r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Survey = data.Results[0].Survey;\r\n                    $scope.Header = data.Results[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SurveyCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data.Results[0].Survey;\r\n                    $scope.Detail = data.Results;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.sort = {\r\n            column: ['RowOrder', 'Product.Name'],\r\n            descending: false\r\n        };\r\n        $scope.changeSorting = function (column) {\r\n            var sort = $scope.sort;\r\n\r\n            if (sort.column[0] == column) {\r\n                sort.descending = !sort.descending;\r\n            } else {\r\n                sort.column[0] = column;\r\n                sort.descending = false;\r\n            }\r\n        };\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        SelectionApplicationService.SetRedirectState('main.survey');\r\n                        $state.go('main.selectcompany');\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(error);\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null ) {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsBeforeImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsAfterImage = false;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report', {\r\n            url: \"/report\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        $scope.SelectedCustomer = SelectionApplicationService.GetCustomer();\r\n        $scope.SelectedLocation = SelectionApplicationService.GetLocation();\r\n        $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n    }]);\r\n\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate;\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), SelectionApplicationService.GetSurveyHeaderId(), SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {                    \r\n                    $scope.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, \r\n                                cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Images/Notes', width: 65,  cellTooltip: true, headerTooltip: true, \r\n                        cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true, headerTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, headerTooltip: true,\r\n                        cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error getting all the data.\");\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.data = $scope.data.concat(data);\r\n                    $scope.gridApi.infiniteScroll.dataLoaded(false, true);\r\n                });\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: 'data',\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.data[index].Id == id) {\r\n                        $scope.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n\r\n        $scope.DownloadSurveyData = function () {\r\n            window.open('/DownloadApi/DownloadSurveyData?startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n\r\n        $scope.DownloadNoteData = function () {\r\n            window.open('/DownloadApi/DownloadNoteData?companyId=' + SelectionApplicationService.GetCompanyId() + '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyheaderreport', {\r\n            url: \"/surveyheaderreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/SurveyHeader/SurveyHeaderReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyHeaderReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate;\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\" : moment($scope.StartDate).format('YYYY-MM-DD')}},\r\n                   { \"Created\": { \"<=\" : moment($scope.EndDate).format('YYYY-MM-DD')}}\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } },\r\n                   { \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function(count){\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 50,\r\n            data: 'data',\r\n            columnDefs: [\r\n                {\r\n                    name: 'Detail', width: 65, cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<button class=\"btn btn-primary btn-sm\" ng-click=\"grid.appScope.ViewDetail(row.entity)\">Detail</button>'\r\n                },\r\n                { name: 'Images/Notes', width: 65, cellTooltip: true, headerTooltip: true, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html' },\r\n                { field: 'Survey.Name', name: 'Survey Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true, headerTooltip: true },\r\n                {\r\n                    name: 'Created', cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                //gridApi.options.loadTimeout = true;\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.ViewDetail = function (item) {\r\n            SelectionApplicationService.SetSurveyHeaderId(item.Id);\r\n            $state.go('main.report.surveyreport')\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n\r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate;\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            //$scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                    { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                    { \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } },\r\n                    { \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\r\n    $scope.image = image;\r\n    $scope.title = title;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\r\n    $scope.note = note;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});"],"sourceRoot":"/source/"}