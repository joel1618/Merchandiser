{"version":3,"sources":["ApplicationServices.js","Company/CompanyApplicationService.js","Selection/SelectionApplicationService.js","Survey/SurveyApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Image/ImageService.js","Map/MapService.js","Location/LocationService.js","Product/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","UserRole/UserRoleService.js","User/UserService.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","Survey/MerchandiseSurveyController.js","SurveyData/MerchandiseSurveyData.js","CustomerLocation/MerchandiseCustomerLocationController.js","Main/ReportMainController.js","Map/MapController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","SelectedCompany","GetSelectedCompany","SetSelectedCompany","company","CompanyId","GetCompanyId","SetCompanyId","id","CustomerId","GetCustomerId","SetCustomerId","LocationId","GetLocationId","SetLocationId","SurveyId","GetSurveyId","SetSurveyId","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Clear","SelectedSurvey","SetSelectedSurvey","survey","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","orderBy","skip","take","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","item","post","response","statusText","length","Update","put","Delete","delete","SelectionApplicationService","order","parameters","companyId","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","SearchJson","orderByDesc","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","run","$rootScope","$state","UserService","Role","go","redirectState","moment","controller","$scope","$window","CompanyApplicationService","SurveyApplicationService","Username","GoTo","Logout","location","reload","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","Save","$parent","alert","items","Select","Edit","CustomerService","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","substringof","SelectCustomer","SearchLocations","SelectLocation","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","Roles","Customers","Validate","Customer","Predicate","Message","SurveyHeaderService","SurveyDetailService","ImageService","BeforeImage","AfterImage","Header","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","element","reader","FileReader","files","onload","event","target","result","$apply","readAsDataURL","setAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","document","querySelector","empty","uiGridConstants","grid","options","showGridFooter","enableFiltering","enableSorting","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","columnDefs","field","displayName","width","cellTemplate","RedirectState","SelectedLocation","Location","SelectedCustomer","Survey","companies","in","Company","SelectCompany","CustomerSearch","LocationSearch","SurveySearch","SelectSurvey","IsGoShown","IsGoDisabled","ReportService","gridOptions","splice","cellTooltip","keys","obj","includes","row","NgMap","MapService","SelectedPosition","positions","getMap","SelectPosition","panTo","SelectMarker","marker"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('CompanyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedCompany = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedCompany;\r\n    };\r\n\r\n    this.SetSelectedCompany = function (company) {\r\n        this.SelectedCompany = company;\r\n        this.NotifyObservers();\r\n    }\r\n});","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.CompanyId = null;\r\n        this.CustomerId = null;\r\n        this.LocationId = null;\r\n        this.SurveyId = null;\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","angular.module('ApplicationServices').service('SurveyApplicationService', function () {\r\n    \r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.SelectedSurvey = null;\r\n    this.GetSelectedCompany = function () {\r\n        return SelectedSurvey;\r\n    };\r\n\r\n    this.SetSelectedSurvey = function (survey) {\r\n        this.SelectedSurvey = survey;\r\n        this.NotifyObservers();\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\",\"nullable\":\"false\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\",\"nullable\":\"false\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: [\"Created desc\"],\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: [\"Created desc\"],\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"MapApi/Search/\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, page,pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('SurveyDetailApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('SurveyHeaderApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.orderByDesc('Created').skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/SurveyHeaderApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            //this.IsCustomer = function (companyId, customerId) {\r\n            //    var deferred = $q.defer();\r\n            //    this.GetCurrentUser().then(function (data) {\r\n            //        var userId = data;\r\n            //        var predicate = { \"Name\": { '==': \"Customer\" } }\r\n            //        RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //            var roles = data.map(function (e) { return e.Id; });\r\n            //            var predicate = {\r\n            //                and: [\r\n            //                   { \"UserId\": { '==': userId } },\r\n            //                   { \"RoleId\": { '==': data[0].Id } },\r\n            //                   { \"CustomerId\": { '==': customerId } },\r\n            //                   { \"CompanyId\": { '==': companyId } }\r\n            //                ]\r\n            //            }\r\n            //            UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //                debugger;\r\n            //                if (data.length > 0) {\r\n            //                    deferred.resolve(true);\r\n            //                }\r\n            //                else {\r\n            //                    deferred.resolve(false);\r\n            //                }\r\n            //            });\r\n            //        });\r\n            //    });\r\n            //    return deferred.promise;\r\n            //}\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","var app = angular.module('Main', ['ngRoute', 'ui.grid', 'ui.bootstrap', 'ngAnimate', 'ngTouch', 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', 'breeze.angular', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"/App/ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"/App/ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('merchandise', {\r\n                    redirectState: 'main.survey'\r\n                });\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('merchandise', {\r\n                    redirectState: 'main.reportmain'\r\n                });\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'CompanyApplicationService', 'SurveyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, CompanyApplicationService, SurveyApplicationService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            SelectionApplicationService.SetSurveyHeaderId(null);\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (SelectionApplicationService.GetCompanyId() == null) {\r\n                    $state.go('merchandise', { redirectState: state });\r\n                }\r\n                else {\r\n                    if (state == 'main.survey') {\r\n                        if (SelectionApplicationService.GetSurveyId() == null) {\r\n                            $state.go('merchandise', { redirectState: state });\r\n                        }\r\n                        else {\r\n                            $state.go(state);\r\n                        }\r\n                    }\r\n                    else if (state == 'main.reportmain') {\r\n                        $state.go(state);\r\n                    }\r\n                    else if (state == 'main.map') {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, CompanyApplicationService, SurveyApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        CompanyApplicationService.RegisterObserver(function () { \r\n            $scope.SelectedCompany = CompanyApplicationService.SelectedCompany;\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SurveyApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SurveyApplicationService.SelectedSurvey;\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SurveyApplicationService.SelectedSurvey == undefined || SurveyApplicationService.SelectedSurvey == null || SurveyApplicationService.SelectedSurvey == \"\") {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (CompanyApplicationService.SelectedCompany == undefined || CompanyApplicationService.SelectedCompany == null || CompanyApplicationService.SelectedCompany == \"\") {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService', 'CompanyApplicationService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService, CompanyApplicationService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                CompanyApplicationService.SetSelectedCompany(data);\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.customer.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'CompanyApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, CompanyApplicationService, SurveyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('http://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.location.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();        \r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                debugger;\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'CompanyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        CompanyApplicationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.product.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();        \r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                 $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.question.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'CompanyApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, CompanyApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null, Name : \"\"}\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SurveyApplicationService.SetSelectedSurvey(data);\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CompanyApplicationService, SurveyApplicationService, CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', { }, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.SurveyId = SurveyApplicationService.SelectedSurvey.Id;\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', {}, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CompanyApplicationService, SurveyApplicationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'CompanyApplicationService', 'SurveyApplicationService', 'ProductService','QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        CompanyApplicationService, SurveyApplicationService, ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        CompanyApplicationService.NotifyObservers();\r\n        SurveyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.SurveyId = SurveyApplicationService.SelectedSurvey.Id;\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService', 'SurveyApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService, SurveyApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'CompanyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, CompanyApplicationService, SelectionApplicationService) {\r\n        CompanyApplicationService.NotifyObservers();\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = CompanyApplicationService.SelectedCompany.Id;\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(\"The username does not exist.\");\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.userrole.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data.Message);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey/:companyId/:surveyId/:customerId/:locationId/:surveyHeaderId\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService, ImageService,\r\n        SelectionApplicationService) {\r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('merchandise', {\r\n                redirectState: 'main.survey'\r\n            });\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n\r\n                var predicate = new breeze.Predicate('Id', '==', SelectionApplicationService.GetSurveyHeaderId());\r\n                SurveyHeaderService.Search(predicate, 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                predicate = new breeze.Predicate('SurveyHeaderId', '==', SelectionApplicationService.GetSurveyHeaderId());\r\n                SurveyDetailService.Search(predicate, 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = new breeze.Predicate('SurveyId', '==', SelectionApplicationService.GetSurveyId());\r\n                SurveyProductQuestionService.Search(predicate, 0, 100, false).then(function (data) {\r\n                    \r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    })\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all([promises]).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.SetSurveyHeaderId(data.data.Id);\r\n                        //$scope.Search();\r\n                        $state.go('merchandise', {\r\n                            redirectState: 'main.survey'\r\n                        });\r\n                    });\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            angular.element(document.querySelector('#AfterImage')).empty();\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'CompanyApplicationService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, CompanyApplicationService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"/App/ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'CompanyApplicationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, CompanyApplicationService, SelectionApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.IsAdministrator = false;\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null, SurveyId: null };\r\n        $scope.UserId = null;\r\n        $scope.Search = function () {\r\n            UserService.GetCurrentUser().then(function (data) {\r\n                $scope.UserId = data;\r\n                var predicate = { \"UserId\": { \"==\": data } };\r\n                UserRoleService.SearchJson(predicate, 0, 100, false).then(function (data) {\r\n                    var companies = data.map(function (e) { return e.CompanyId; });\r\n                    CompanyService.Search({ \"Id\": { in: companies } }, 0, 20, false).then(function (data) {\r\n                        if (data.length == 1) {\r\n                            $scope.Company = data;\r\n                            $scope.SelectedCompany = data[0];\r\n                            $scope.SelectCompany();\r\n                        }\r\n                        else {\r\n                            $scope.Company = data;\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            SelectionApplicationService.SetCompanyId($scope.SelectedCompany.Id);\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            //Admin for the selected company show all customers\r\n            var predicate = { \"CompanyId\": { '==': companyId } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                $scope.Customer = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            SelectionApplicationService.SetCustomerId($scope.SelectedCustomer.Id);\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var predicate = { \"CompanyId\": { \"==\": companyId } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Location = data;\r\n                    $scope.SelectedLocation = data[0];\r\n                    $scope.SelectLocation();\r\n                }\r\n                else {\r\n                    $scope.Location = data;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {\r\n            SelectionApplicationService.SetLocationId($scope.SelectedLocation.Id);\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id, $scope.SelectedLocation.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, customerId, locationId) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": companyId } },\r\n                   { \"CustomerId\": { '==': customerId } },\r\n                   { \"LocationId\": { \"==\": locationId } }\r\n                ]\r\n            }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            SelectionApplicationService.SetSurveyId($scope.SelectedSurvey.SurveyId);\r\n            $state.go($stateParams.redirectState);\r\n        }\r\n\r\n        $scope.IsGoShown = function () {\r\n            if ($stateParams.redirectState == 'main.reportmain' || $stateParams.redirectState == 'main.map') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        $scope.IsGoDisabled = function () {\r\n            if ($scope.SelectedCompany.Id != null) {\r\n                if ($scope.IsAdministrator == true) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    if ($scope.SelectedCustomer.Id != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.reportmain', {\r\n            url: \"/reportmain\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Main/ReportMain.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportMainController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService) {\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(), SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0,0,{\r\n                            name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                    else {\r\n                        return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                    }\r\n                }).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', cellTemplate: '/App/ApplicationComponents/Report/Main/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }                    \r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: []\r\n        };\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            $state.go('main.survey');\r\n        }\r\n\r\n        $scope.Delete = function(id){\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                //var index = $scope.gridOptions.data.map(function (e) { return e.Id; }).indexOf(id);\r\n                //$scope.gridOptions.data.splice(index, 1);\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.map', {\r\n            url: \"/map\",\r\n            templateUrl: \"/App/ApplicationComponents/Report/Map/Map.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MapController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            MapService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);"],"sourceRoot":"/source/"}