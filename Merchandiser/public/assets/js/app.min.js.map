{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","CompanyUser/CompanyUserService.js","Company/CompanyService.js","Customer/CustomerService.js","Download/DownloadService.js","Image/ImageService.js","Location/LocationService.js","Map/MapService.js","Product/ProductService.js","ProductCategory/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","User/UserService.js","UserRole/UserRoleService.js","Directives.js","AffixResizer.js","AfterImage.js","BeforeImage.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","ProductCategory/Controllers/ProductCategoryAddEditController.js","ProductCategory/Controllers/ProductCategoryController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","SelectCompany/SelectCompanyController.js","SelectCustomer/SelectCustomerController.js","SelectLocation/SelectLocationController.js","SelectSurvey/SelectSurveyController.js","Survey/MerchandiseSurveyController.js","ReportController.js","SurveyReportController.js","WeeklyReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","RedirectState","GetRedirectState","SetRedirectState","state","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Role","GetRole","SetRole","role","Clear","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","skip","take","resolve","httpResponse","msg","code","promise","Get","method","url","success","status","headers","config","error","Create","post","response","length","Update","put","Delete","delete","order","orderBy","AdminSearch","SelectionApplicationService","parameters","companyId","DownloadSurveyData","DownloadNoteData","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","statusText","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","Message","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","directive","$window","restrict","link","scope","elem","attrs","element","on","innerWidth","addClass","removeClass","$scope","reader","FileReader","onload","AfterImage","target","result","$apply","Header","IsAfterImage","files","readAsDataURL","BeforeImage","IsBeforeImage","blockUIConfig","delay","filter","utcDate","dt","Date","getTime","$stateProvider","$urlRouterProvider","otherwise","templateUrl","run","$rootScope","$state","UserService","go","moment","controller","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","focus","Save","$parent","items","Select","Edit","CustomerService","index","gridOptions","indexOf","splice","enableFiltering","enableSorting","columnDefs","width","cellTemplate","field","cellTooltip","row","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","ProductCategoryService","SearchProductCategories","substringof","SelectProductCategory","ProductCategoryId","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","SelectCustomer","SearchLocations","SelectLocation","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","RowOrder","gridApi","core","scrollTo","onRegisterApi","draggableRows","rowDropped","info","dropTarget","Reorder","rowTemplate","promises","i","Roles","Customers","Validate","Predicate","Continue","IsContinueShown","LocationServicesDisabled",">=","<=","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","SurveyHeaderService","SurveyDetailService","ImageService","Notes","Detail","sort","column","descending","changeSorting","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","alert","SelectedCustomer","SelectedLocation","$uibModal","ReportService","MapService","DownloadService","redirectState","StartDate","format","startOf","EndDate","add","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","Page","PageSize","headerTooltip","exclude","keys","obj","includes","GetDataDown","infiniteScroll","saveScrollPercentage","concat","showGridFooter","enableGridMenu","infiniteScrollRowsFromEnd","needLoadMoreData","ViewNote","modalInstance","open","animation","note","ViewImage","title","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","NgMap","SelectedPosition","positions","getMap","SelectPosition","panTo","SelectMarker","event","marker","$uibModalInstance","ok","close","cancel","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.RedirectState = null;\r\n    this.GetRedirectState = function () {\r\n        return this.RedirectState;\r\n    }\r\n\r\n    this.SetRedirectState = function (state) {\r\n        this.RedirectState = state;\r\n    }\r\n\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Company = null;\r\n    this.GetCompany = function () {\r\n        return this.Company;\r\n    };\r\n\r\n    this.SetCompany = function (item) {\r\n        this.Company = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Customer = null;\r\n    this.GetCustomer = function () {\r\n        return this.Customer;\r\n    };\r\n\r\n    this.SetCustomer = function (item) {\r\n        this.Customer = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Location = null;\r\n    this.GetLocation = function () {\r\n        return this.Location;\r\n    };\r\n\r\n    this.SetLocation = function (item) {\r\n        this.Location = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Survey = null;\r\n    this.GetSurvey = function () {\r\n        return this.Survey;\r\n    };\r\n\r\n    this.SetSurvey = function (item) {\r\n        this.Survey = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Role = null;\r\n    this.GetRole = function () {\r\n        return this.Role;\r\n    }\r\n\r\n    this.SetRole = function (role) {\r\n        this.Role = role;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.RedirectState = null;\r\n\r\n        this.CompanyId = null;\r\n        this.Company = null;\r\n\r\n        this.CustomerId = null;\r\n        this.Customer = null;\r\n\r\n        this.LocationId = null;\r\n        this.Location = null;\r\n\r\n        this.SurveyId = null;\r\n        this.Survey = null;\r\n\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"LocationApi/Search\", \"LocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductCategoryApi/Search\", \"ProductCategoryViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.ProductCategoryViewModel\\\",\\\"Merchandiser.Models.ProductCategoryViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsSendReport\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"SendReport\",\"type\":\"Edm.DateTime\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CustomerName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LocationName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductCategoryViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductCategoryViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsNoteRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductCategoryId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"ProductCategory\",\"relationship\":\"Self.ProductViewModel_ProductCategory\",\"fromRole\":\"ProductViewModel_ProductCategory_Source\",\"toRole\":\"ProductViewModel_ProductCategory_Target\"}},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsTrueFalse\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"type\":\"Edm.Self.ProductCategoryViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"ProductViewModel_ProductCategory_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"ProductViewModel_ProductCategory_Source\",\"propertyRef\":{\"name\":\"ProductCategoryId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"ProductCategoryViewModel\",\"entityType\":\"Self.ProductCategoryViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"ProductViewModel_ProductCategory\",\"association\":\"Self.ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"entitySet\":\"ProductCategoryViewModel\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.DownloadSurveyData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadSurveyData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DownloadNoteData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadNoteData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.data.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.data.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"MapApi/Search/\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/MapApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductCategoryService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductCategoryApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductCategoryApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductCategoryApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductCategoryApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductCategoryApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Directives',[]);\r\n","var app = angular.module('Directives');\r\n\r\napp.directive('affixResizer', ['$window', '$timeout', function ($window, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attrs) {\r\n\r\n            angular.element($window).on('resize', function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n\r\n            $timeout(function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\r\nvar app = angular.module('Directives');\r\n\r\napp.directive('afterImage', [function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function ($scope, elem, attrs) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function (e) {\r\n                $scope.AfterImage = e.target.result;\r\n                $scope.$apply();\r\n            }\r\n\r\n            elem.on('change', function () {\r\n                $scope.Header.IsAfterImage = true;\r\n                $scope.Header.AfterImage = elem[0].files[0];\r\n                reader.readAsDataURL(elem[0].files[0]);\r\n            });\r\n        }\r\n    }\r\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\r\nvar app = angular.module('Directives');\r\n\r\napp.directive('beforeImage', [function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function ($scope, elem, attrs) {\r\n            var reader = new FileReader();\r\n            \r\n            reader.onload = function (e) {\r\n                $scope.BeforeImage = e.target.result;\r\n                $scope.$apply();\r\n            }\r\n\r\n            elem.on('change', function () {\r\n                $scope.Header.IsBeforeImage = true;\r\n                $scope.Header.BeforeImage = elem[0].files[0];\r\n                reader.readAsDataURL(elem[0].files[0]);\r\n            });\r\n        }\r\n    }\r\n}]);","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.draggable-rows', 'ui.grid.infiniteScroll', 'ui.grid.cellNav', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMessages', 'ngMaterial', 'focus-if', 'mgcrea.bootstrap.affix', 'Directives', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.filter('dateLocalize', function () {\r\n    return function (utcDate) {\r\n    var dt = new Date(utcDate + 'Z').getTime();\r\n    return dt;\r\n    }\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Administrator\");\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Data Entry\");\r\n                SelectionApplicationService.SetRedirectState('main.survey');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Customer\");\r\n                SelectionApplicationService.SetRedirectState('main.report.surveyreport');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                SelectionApplicationService.Clear();\r\n                \r\n            SelectionApplicationService.SetRedirectState(state);\r\n                $state.go('main.selectcompany');\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.Role = SelectionApplicationService.GetRole();\r\n        })\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\r\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http,\r\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductService', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductService, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProductCategories = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductCategory = function (item, model, label) {\r\n            $scope.item.ProductCategoryId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'ProductCategory.Name', name: 'Category Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategoryAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductCategoryService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductCategoryService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductCategoryService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory', {\r\n            url: \"/productcategory\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategory.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.productcategory.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductCategoryService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" };\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'IsRequired', name: 'Required', cellTooltip: true},\r\n                { field: 'IsTrueFalse', name: 'True False', cellTooltip: true}\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService','QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                $scope.item.RowOrder = $scope.$parent.gridOptions.data.length;\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.$parent.gridOptions.gridApi.core.scrollTo($scope.gridOptions.data[$scope.gridOptions.data.length - 1], $scope.gridOptions.columnDefs[0]);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$q', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $q, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: false,\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridOptions.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    $scope.Reorder();\r\n                });\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Reorder = function () {\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.gridOptions.data.length; i++) {\r\n                var row = $scope.gridOptions.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name != \"Customer\") {\r\n                $scope.item.Customer = null;\r\n            }\r\n\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\r\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\r\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcompany', {\r\n            url: \"/selectcompany/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCompany/SelectCompany.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCompanyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCompany(item);\r\n            SelectionApplicationService.SetCompanyId(item.Id);\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcustomer', {\r\n            url: \"/selectcustomer/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCustomer/SelectCustomer.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCustomerController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Customer = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCustomer(item);\r\n            SelectionApplicationService.SetCustomerId(item.Id);\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectlocation', {\r\n            url: \"/selectlocation/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectLocation/SelectLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n        \r\n        $scope.LocationServicesDisabled = false;\r\n        $scope.Location = [];\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } }\r\n                    ]\r\n                }\r\n                SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    angular.forEach(data, function (value, key) {\r\n                        $scope.Location.push({\r\n                            Id: value.Location.Id,\r\n                            Name: value.Location.Name,\r\n                            Address: value.Location.Address\r\n                        })\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"Latitude\": { '>=': $scope.Latitude - .0725 } },\r\n                       { \"Latitude\": { '<=': $scope.Latitude + .0725 } },\r\n                       { \"Longitude\": { '>=': $scope.Longitude - .0725 } },\r\n                       { \"Longitude\": { '<=': $scope.Longitude + .0725 } }\r\n                    ]\r\n                }\r\n                LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go('main.selectsurvey');\r\n                    }\r\n                    if (data.length < 1) {\r\n                        $scope.LocationServicesDisabled = true;\r\n                    }\r\n                    else if (data.length == 1) {\r\n                        $scope.Select(data[0]);\r\n                    }\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            \r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Latitude = position.coords.latitude;\r\n            $scope.Longitude = position.coords.longitude;\r\n            $scope.Search();\r\n        }, function (error) {\r\n            toastr.error(\"User has denied geolocation for this site.  Please allow location services to get your location to find locations near you.\");\r\n            $scope.LocationServicesDisabled = true;\r\n        });\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.Latitude = item.geometry.location.lat;\r\n            $scope.Longitude = item.geometry.location.lng;\r\n            $scope.LocationServicesDisabled = false;\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetLocation(item);\r\n            SelectionApplicationService.SetLocationId(item.Id);\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectsurvey', {\r\n            url: \"/selectsurvey/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectSurvey/SelectSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectSurveyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Survey = [];\r\n        $scope.Search = function () {\r\n            if(SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    angular.forEach(data, function (value, key) {\r\n                        $scope.Survey.push({\r\n                            Id: value.Survey.Id,\r\n                            Name: value.Survey.Name\r\n                        })\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                    ]\r\n                }\r\n                SurveyService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go(SelectionApplicationService.GetRedirectState());\r\n                    }\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SurveyService.Get(item.Id).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                $state.go(SelectionApplicationService.GetRedirectState());\r\n            });\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go(SelectionApplicationService.GetRedirectState());\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService, SelectionApplicationService) {\r\n        \r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Survey = data[0].Survey;\r\n                    $scope.Header = data[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } };\r\n                SurveyProductQuestionService.Search(predicate, [\"RowOrder desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data[0].Survey;\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.sort = {\r\n            column: ['RowOrder', 'Product.Name'],\r\n            descending: false\r\n        };\r\n        $scope.changeSorting = function (column) {\r\n            var sort = $scope.sort;\r\n\r\n            if (sort.column[0] == column) {\r\n                sort.descending = !sort.descending;\r\n            } else {\r\n                sort.column[0] = column;\r\n                sort.descending = false;\r\n            }\r\n        };\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error updating the survey.\");\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        SelectionApplicationService.SetRedirectState('main.survey');\r\n                        $state.go('main.selectcompany');\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(\"There was an error creating the survey.\");\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null ) {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsBeforeImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsAfterImage = false;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report', {\r\n            url: \"/report\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        $scope.SelectedCustomer = SelectionApplicationService.GetCustomer();\r\n        $scope.SelectedLocation = SelectionApplicationService.GetLocation();\r\n        $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n    }]);\r\n\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'MapService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, MapService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n\r\n        $scope.StartDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().startOf('isoWeek').format(\"DD\"));\r\n        $scope.EndDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().add(2, \"days\").format(\"DD\"));\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {                    \r\n                    $scope.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Images/Notes', width: 65,  cellTooltip: true, headerTooltip: true, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html'\r\n                    });\r\n                    //$scope.gridOptions.columnDefs.splice(1, 0, {\r\n                    //    name: 'Before', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeImage.html'\r\n                    //});\r\n                    //$scope.gridOptions.columnDefs.splice(2, 0, {\r\n                    //    name: 'After', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/AfterImage.html'\r\n                    //});\r\n                    //$scope.gridOptions.columnDefs.splice(3, 0, {\r\n                    //    name: 'Notes', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/Notes.html'\r\n                    //});\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true, headerTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, headerTooltip:true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error getting all the data.\");\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.data = $scope.data.concat(data);\r\n                    //$scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData());\r\n                });\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: 'data',\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.data[index].Id == id) {\r\n                        $scope.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            MapService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n\r\n        $scope.DownloadSurveyData = function () {\r\n            window.open('/DownloadApi/DownloadSurveyData?startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n\r\n        $scope.DownloadNoteData = function () {\r\n            window.open('/DownloadApi/DownloadNoteData?companyId=' + SelectionApplicationService.GetCompanyId() + '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.weeklyreport', {\r\n            url: \"/weeklyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Weekly/WeeklyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('WeeklyReportController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService', 'LocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService, LocationService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n        $scope.StartDate = moment().startOf('isoWeek').format(\"YYYY-MM-DD\");\r\n        $scope.EndDate = moment().add(1, \"days\").format(\"YYYY-MM-DD\");\r\n\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(), SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null, $scope.StartDate, $scope.EndDate, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                    else {\r\n                        return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                    }\r\n                }).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'CustomerName', name: 'Customer Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'LocationName', name: 'Location Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: []\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n                SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.gridOptions.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.gridOptions.data[index].Id == id) {\r\n                        $scope.gridOptions.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            MapService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\r\n    $scope.image = image;\r\n    $scope.title = title;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\r\n    $scope.note = note;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});"],"sourceRoot":"/source/"}