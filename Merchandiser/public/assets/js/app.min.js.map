{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Company/CompanyService.js","Breeze/breezeservice.js","Breeze/metadata.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Download/DownloadService.js","Image/ImageService.js","Location/LocationService.js","Map/MapService.js","Product/ProductService.js","ProductCategory/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Survey/SurveyService.js","SurveyDetail/SurveyDetailService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","User/UserService.js","UserRole/UserRoleService.js","Directives.js","AffixResizer.js","App.js","MainController.js","AdminController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","ProductCategory/Controllers/ProductCategoryAddEditController.js","ProductCategory/Controllers/ProductCategoryController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","CustomerLocation/MerchandiseCustomerLocationController.js","SurveyData/MerchandiseSurveyData.js","Survey/MerchandiseSurveyController.js","ReportController.js","SurveyReportController.js","WeeklyReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Clear","$http","$q","breeze","breezeservice","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","query","EntityQuery","from","where","orderBy","skip","take","executeQuery","then","data","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","post","response","Message","length","Update","put","Delete","delete","$timeout","manager","all","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","annotation:StoreGeneratedPattern","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","statusText","SelectionApplicationService","parameters","companyId","DownloadSurveyData","DownloadNoteData","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","directive","$window","restrict","link","scope","elem","attrs","element","on","innerWidth","addClass","removeClass","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","run","$rootScope","$state","UserService","Role","go","redirectState","moment","controller","$scope","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","Route","toastr","$stateParams","$routeParams","$location","CustomerService","Init","focus","Save","index","$parent","gridOptions","indexOf","splice","items","enableFiltering","enableSorting","columnDefs","width","cellTemplate","field","cellTooltip","Edit","row","CompanyService","Select","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","ProductCategoryService","SearchProductCategories","substringof","SelectProductCategory","ProductCategoryId","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","SelectCustomer","SearchLocations","SelectLocation","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","Roles","Customers","Validate","Predicate","RedirectState","SelectedLocation","SelectedCustomer","SelectCompany","CustomerSearch","LocationSearch","SurveySearch","SelectSurvey","IsGoShown","uiGridConstants","SurveyHeaderService","SurveyDetailService","grid","options","showGridFooter","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","displayName","ImageService","BeforeImage","AfterImage","Header","Notes","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","reader","FileReader","IsBeforeImage","files","onload","event","target","result","$apply","readAsDataURL","sort","column","descending","changeSorting","setAfterImage","IsAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","alert","$uibModal","ReportService","MapService","DownloadService","StartDate","Date","format","startOf","EndDate","add","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","Page","PageSize","exclude","keys","obj","includes","GetDataDown","infiniteScroll","saveScrollPercentage","concat","infiniteScrollRowsFromEnd","needLoadMoreData","ViewNote","modalInstance","open","animation","note","ViewImage","title","NgMap","SelectedPosition","positions","getMap","SelectPosition","panTo","SelectMarker","marker","$uibModalInstance","ok","close","cancel","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Company = null;\r\n    this.GetCompany = function () {\r\n        return this.Company;\r\n    };\r\n\r\n    this.SetCompany = function (item) {\r\n        this.Company = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Customer = null;\r\n    this.GetCustomer = function () {\r\n        return this.Customer;\r\n    };\r\n\r\n    this.SetCustomer = function (item) {\r\n        this.Customer = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Location = null;\r\n    this.GetLocation = function () {\r\n        return this.Location;\r\n    };\r\n\r\n    this.SetLocation = function (item) {\r\n        this.Location = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Survey = null;\r\n    this.GetSurvey = function () {\r\n        return this.Survey;\r\n    };\r\n\r\n    this.SetSurvey = function (item) {\r\n        this.Survey = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.CompanyId = null;\r\n        this.Company = null;\r\n\r\n        this.CustomerId = null;\r\n        this.Customer = null;\r\n\r\n        this.LocationId = null;\r\n        this.Location = null;\r\n\r\n        this.SurveyId = null;\r\n        this.Survey = null;\r\n\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductCategoryApi/Search\", \"ProductCategoryViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\r\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.ProductCategoryViewModel\\\",\\\"Merchandiser.Models.ProductCategoryViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.ProductCategory\\\",\\\"Merchandiser.ProductCategory\\\"],[\\\"Merchandiser.Company\\\",\\\"Merchandiser.Company\\\"],[\\\"Merchandiser.AspNetUserRole\\\",\\\"Merchandiser.AspNetUserRole\\\"],[\\\"Merchandiser.AspNetRole\\\",\\\"Merchandiser.AspNetRole\\\"],[\\\"Merchandiser.AspNetUser\\\",\\\"Merchandiser.AspNetUser\\\"],[\\\"Merchandiser.AspNetUserClaim\\\",\\\"Merchandiser.AspNetUserClaim\\\"],[\\\"Merchandiser.AspNetUserLogin\\\",\\\"Merchandiser.AspNetUserLogin\\\"],[\\\"Merchandiser.AspNetUsersInfo\\\",\\\"Merchandiser.AspNetUsersInfo\\\"],[\\\"Merchandiser.Customer\\\",\\\"Merchandiser.Customer\\\"],[\\\"Merchandiser.SurveyCustomerLocation\\\",\\\"Merchandiser.SurveyCustomerLocation\\\"],[\\\"Merchandiser.Location\\\",\\\"Merchandiser.Location\\\"],[\\\"Merchandiser.SurveyHeader\\\",\\\"Merchandiser.SurveyHeader\\\"],[\\\"Merchandiser.Survey\\\",\\\"Merchandiser.Survey\\\"],[\\\"Merchandiser.SurveyProductQuestion\\\",\\\"Merchandiser.SurveyProductQuestion\\\"],[\\\"Merchandiser.Product\\\",\\\"Merchandiser.Product\\\"],[\\\"Merchandiser.SurveyDetail\\\",\\\"Merchandiser.SurveyDetail\\\"],[\\\"Merchandiser.Question\\\",\\\"Merchandiser.Question\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsSendReport\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"SendReport\",\"type\":\"Edm.DateTime\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"}]},{\"name\":\"ProductCategoryViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductCategoryViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductCategoryId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"ProductCategory\",\"relationship\":\"Self.ProductViewModel_ProductCategory\",\"fromRole\":\"ProductViewModel_ProductCategory_Source\",\"toRole\":\"ProductViewModel_ProductCategory_Target\"}},{\"name\":\"ProductCategory\",\"customannotation:ClrType\":\"Merchandiser.ProductCategory, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.Company_ProductCategories\",\"fromRole\":\"Company_ProductCategories_Target\",\"toRole\":\"Company_ProductCategories_Source\"},{\"name\":\"Products\",\"relationship\":\"Self.Product_ProductCategory\",\"fromRole\":\"Product_ProductCategory_Target\",\"toRole\":\"Product_ProductCategory_Source\"}]},{\"name\":\"Company\",\"customannotation:ClrType\":\"Merchandiser.Company, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"AspNetUserRoles\",\"relationship\":\"Self.AspNetUserRole_Company\",\"fromRole\":\"AspNetUserRole_Company_Target\",\"toRole\":\"AspNetUserRole_Company_Source\"},{\"name\":\"Customers\",\"relationship\":\"Self.Customer_Company\",\"fromRole\":\"Customer_Company_Target\",\"toRole\":\"Customer_Company_Source\"},{\"name\":\"Locations\",\"relationship\":\"Self.Location_Company\",\"fromRole\":\"Location_Company_Target\",\"toRole\":\"Location_Company_Source\"},{\"name\":\"ProductCategories\",\"relationship\":\"Self.Company_ProductCategories\",\"fromRole\":\"Company_ProductCategories_Source\",\"toRole\":\"Company_ProductCategories_Target\"},{\"name\":\"Products\",\"relationship\":\"Self.Product_Company\",\"fromRole\":\"Product_Company_Target\",\"toRole\":\"Product_Company_Source\"},{\"name\":\"Questions\",\"relationship\":\"Self.Question_Company\",\"fromRole\":\"Question_Company_Target\",\"toRole\":\"Question_Company_Source\"},{\"name\":\"SurveyCustomerLocations\",\"relationship\":\"Self.SurveyCustomerLocation_Company\",\"fromRole\":\"SurveyCustomerLocation_Company_Target\",\"toRole\":\"SurveyCustomerLocation_Company_Source\"},{\"name\":\"SurveyDetails\",\"relationship\":\"Self.SurveyDetail_Company\",\"fromRole\":\"SurveyDetail_Company_Target\",\"toRole\":\"SurveyDetail_Company_Source\"},{\"name\":\"SurveyHeaders\",\"relationship\":\"Self.SurveyHeader_Company\",\"fromRole\":\"SurveyHeader_Company_Target\",\"toRole\":\"SurveyHeader_Company_Source\"},{\"name\":\"SurveyProductQuestions\",\"relationship\":\"Self.SurveyProductQuestion_Company\",\"fromRole\":\"SurveyProductQuestion_Company_Target\",\"toRole\":\"SurveyProductQuestion_Company_Source\"},{\"name\":\"Surveys\",\"relationship\":\"Self.Survey_Company\",\"fromRole\":\"Survey_Company_Target\",\"toRole\":\"Survey_Company_Source\"}]},{\"name\":\"AspNetUserRole\",\"customannotation:ClrType\":\"Merchandiser.AspNetUserRole, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"AspNetRole\",\"relationship\":\"Self.AspNetRole_AspNetUserRoles\",\"fromRole\":\"AspNetRole_AspNetUserRoles_Target\",\"toRole\":\"AspNetRole_AspNetUserRoles_Source\"},{\"name\":\"AspNetUser\",\"relationship\":\"Self.AspNetUser_AspNetUserRoles\",\"fromRole\":\"AspNetUser_AspNetUserRoles_Target\",\"toRole\":\"AspNetUser_AspNetUserRoles_Source\"},{\"name\":\"Company\",\"relationship\":\"Self.AspNetUserRole_Company\",\"fromRole\":\"AspNetUserRole_Company_Source\",\"toRole\":\"AspNetUserRole_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.Customer_AspNetUserRoles\",\"fromRole\":\"Customer_AspNetUserRoles_Target\",\"toRole\":\"Customer_AspNetUserRoles_Source\"}]},{\"name\":\"AspNetRole\",\"customannotation:ClrType\":\"Merchandiser.AspNetRole, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"AspNetUserRoles\",\"relationship\":\"Self.AspNetRole_AspNetUserRoles\",\"fromRole\":\"AspNetRole_AspNetUserRoles_Source\",\"toRole\":\"AspNetRole_AspNetUserRoles_Target\"}},{\"name\":\"AspNetUser\",\"customannotation:ClrType\":\"Merchandiser.AspNetUser, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Email\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"EmailConfirmed\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"PasswordHash\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SecurityStamp\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"PhoneNumber\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"PhoneNumberConfirmed\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"TwoFactorEnabled\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"LockoutEndDateUtc\",\"type\":\"Edm.DateTime\"},{\"name\":\"LockoutEnabled\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"AccessFailedCount\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"AspNetUserClaims\",\"relationship\":\"Self.AspNetUserClaim_AspNetUser\",\"fromRole\":\"AspNetUserClaim_AspNetUser_Target\",\"toRole\":\"AspNetUserClaim_AspNetUser_Source\"},{\"name\":\"AspNetUserLogins\",\"relationship\":\"Self.AspNetUserLogin_AspNetUser\",\"fromRole\":\"AspNetUserLogin_AspNetUser_Target\",\"toRole\":\"AspNetUserLogin_AspNetUser_Source\"},{\"name\":\"AspNetUserRoles\",\"relationship\":\"Self.AspNetUser_AspNetUserRoles\",\"fromRole\":\"AspNetUser_AspNetUserRoles_Source\",\"toRole\":\"AspNetUser_AspNetUserRoles_Target\"},{\"name\":\"AspNetUsersInfoes\",\"relationship\":\"Self.AspNetUsersInfo_AspNetUser\",\"fromRole\":\"AspNetUsersInfo_AspNetUser_Target\",\"toRole\":\"AspNetUsersInfo_AspNetUser_Source\"}]},{\"name\":\"AspNetUserClaim\",\"customannotation:ClrType\":\"Merchandiser.AspNetUserClaim, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ClaimType\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ClaimValue\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"AspNetUser\",\"relationship\":\"Self.AspNetUserClaim_AspNetUser\",\"fromRole\":\"AspNetUserClaim_AspNetUser_Source\",\"toRole\":\"AspNetUserClaim_AspNetUser_Target\"}},{\"name\":\"AspNetUserLogin\",\"customannotation:ClrType\":\"Merchandiser.AspNetUserLogin, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"UserId\"}},\"property\":[{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"LoginProvider\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ProviderKey\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"AspNetUser\",\"relationship\":\"Self.AspNetUserLogin_AspNetUser\",\"fromRole\":\"AspNetUserLogin_AspNetUser_Source\",\"toRole\":\"AspNetUserLogin_AspNetUser_Target\"}},{\"name\":\"AspNetUsersInfo\",\"customannotation:ClrType\":\"Merchandiser.AspNetUsersInfo, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"AspNetUser\",\"relationship\":\"Self.AspNetUsersInfo_AspNetUser\",\"fromRole\":\"AspNetUsersInfo_AspNetUser_Source\",\"toRole\":\"AspNetUsersInfo_AspNetUser_Target\"}},{\"name\":\"Customer\",\"customannotation:ClrType\":\"Merchandiser.Customer, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsSendReport\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"SendReport\",\"type\":\"Edm.DateTime\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"AspNetUserRoles\",\"relationship\":\"Self.Customer_AspNetUserRoles\",\"fromRole\":\"Customer_AspNetUserRoles_Source\",\"toRole\":\"Customer_AspNetUserRoles_Target\"},{\"name\":\"Company\",\"relationship\":\"Self.Customer_Company\",\"fromRole\":\"Customer_Company_Source\",\"toRole\":\"Customer_Company_Target\"},{\"name\":\"SurveyCustomerLocations\",\"relationship\":\"Self.SurveyCustomerLocation_Customer\",\"fromRole\":\"SurveyCustomerLocation_Customer_Target\",\"toRole\":\"SurveyCustomerLocation_Customer_Source\"},{\"name\":\"SurveyHeaders\",\"relationship\":\"Self.SurveyHeader_Customer\",\"fromRole\":\"SurveyHeader_Customer_Target\",\"toRole\":\"SurveyHeader_Customer_Source\"}]},{\"name\":\"SurveyCustomerLocation\",\"customannotation:ClrType\":\"Merchandiser.SurveyCustomerLocation, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyCustomerLocation_Company\",\"fromRole\":\"SurveyCustomerLocation_Company_Source\",\"toRole\":\"SurveyCustomerLocation_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocation_Customer\",\"fromRole\":\"SurveyCustomerLocation_Customer_Source\",\"toRole\":\"SurveyCustomerLocation_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.Location_SurveyCustomerLocations\",\"fromRole\":\"Location_SurveyCustomerLocations_Target\",\"toRole\":\"Location_SurveyCustomerLocations_Source\"},{\"name\":\"Survey\",\"relationship\":\"Self.Survey_SurveyCustomerLocations\",\"fromRole\":\"Survey_SurveyCustomerLocations_Target\",\"toRole\":\"Survey_SurveyCustomerLocations_Source\"}]},{\"name\":\"Location\",\"customannotation:ClrType\":\"Merchandiser.Location, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.Location_Company\",\"fromRole\":\"Location_Company_Source\",\"toRole\":\"Location_Company_Target\"},{\"name\":\"SurveyCustomerLocations\",\"relationship\":\"Self.Location_SurveyCustomerLocations\",\"fromRole\":\"Location_SurveyCustomerLocations_Source\",\"toRole\":\"Location_SurveyCustomerLocations_Target\"},{\"name\":\"SurveyHeaders\",\"relationship\":\"Self.SurveyHeader_Location\",\"fromRole\":\"SurveyHeader_Location_Target\",\"toRole\":\"SurveyHeader_Location_Source\"}]},{\"name\":\"SurveyHeader\",\"customannotation:ClrType\":\"Merchandiser.SurveyHeader, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsBeforeImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsAfterImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyHeader_Company\",\"fromRole\":\"SurveyHeader_Company_Source\",\"toRole\":\"SurveyHeader_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyHeader_Customer\",\"fromRole\":\"SurveyHeader_Customer_Source\",\"toRole\":\"SurveyHeader_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyHeader_Location\",\"fromRole\":\"SurveyHeader_Location_Source\",\"toRole\":\"SurveyHeader_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.Survey_SurveyHeaders\",\"fromRole\":\"Survey_SurveyHeaders_Target\",\"toRole\":\"Survey_SurveyHeaders_Source\"},{\"name\":\"SurveyDetails\",\"relationship\":\"Self.SurveyDetail_SurveyHeader\",\"fromRole\":\"SurveyDetail_SurveyHeader_Target\",\"toRole\":\"SurveyDetail_SurveyHeader_Source\"}]},{\"name\":\"Survey\",\"customannotation:ClrType\":\"Merchandiser.Survey, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.Survey_Company\",\"fromRole\":\"Survey_Company_Source\",\"toRole\":\"Survey_Company_Target\"},{\"name\":\"SurveyCustomerLocations\",\"relationship\":\"Self.Survey_SurveyCustomerLocations\",\"fromRole\":\"Survey_SurveyCustomerLocations_Source\",\"toRole\":\"Survey_SurveyCustomerLocations_Target\"},{\"name\":\"SurveyHeaders\",\"relationship\":\"Self.Survey_SurveyHeaders\",\"fromRole\":\"Survey_SurveyHeaders_Source\",\"toRole\":\"Survey_SurveyHeaders_Target\"},{\"name\":\"SurveyProductQuestions\",\"relationship\":\"Self.SurveyProductQuestion_Survey\",\"fromRole\":\"SurveyProductQuestion_Survey_Target\",\"toRole\":\"SurveyProductQuestion_Survey_Source\"}]},{\"name\":\"SurveyProductQuestion\",\"customannotation:ClrType\":\"Merchandiser.SurveyProductQuestion, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyProductQuestion_Company\",\"fromRole\":\"SurveyProductQuestion_Company_Source\",\"toRole\":\"SurveyProductQuestion_Company_Target\"},{\"name\":\"Product\",\"relationship\":\"Self.Product_SurveyProductQuestions\",\"fromRole\":\"Product_SurveyProductQuestions_Target\",\"toRole\":\"Product_SurveyProductQuestions_Source\"},{\"name\":\"Question\",\"relationship\":\"Self.Question_SurveyProductQuestions\",\"fromRole\":\"Question_SurveyProductQuestions_Target\",\"toRole\":\"Question_SurveyProductQuestions_Source\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyProductQuestion_Survey\",\"fromRole\":\"SurveyProductQuestion_Survey_Source\",\"toRole\":\"SurveyProductQuestion_Survey_Target\"}]},{\"name\":\"Product\",\"customannotation:ClrType\":\"Merchandiser.Product, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductCategoryId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.Product_Company\",\"fromRole\":\"Product_Company_Source\",\"toRole\":\"Product_Company_Target\"},{\"name\":\"ProductCategory\",\"relationship\":\"Self.Product_ProductCategory\",\"fromRole\":\"Product_ProductCategory_Source\",\"toRole\":\"Product_ProductCategory_Target\"},{\"name\":\"SurveyDetails\",\"relationship\":\"Self.SurveyDetail_Product\",\"fromRole\":\"SurveyDetail_Product_Target\",\"toRole\":\"SurveyDetail_Product_Source\"},{\"name\":\"SurveyProductQuestions\",\"relationship\":\"Self.Product_SurveyProductQuestions\",\"fromRole\":\"Product_SurveyProductQuestions_Source\",\"toRole\":\"Product_SurveyProductQuestions_Target\"}]},{\"name\":\"SurveyDetail\",\"customannotation:ClrType\":\"Merchandiser.SurveyDetail, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyHeaderId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Answer\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyDetail_Company\",\"fromRole\":\"SurveyDetail_Company_Source\",\"toRole\":\"SurveyDetail_Company_Target\"},{\"name\":\"Product\",\"relationship\":\"Self.SurveyDetail_Product\",\"fromRole\":\"SurveyDetail_Product_Source\",\"toRole\":\"SurveyDetail_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.Question_SurveyDetails\",\"fromRole\":\"Question_SurveyDetails_Target\",\"toRole\":\"Question_SurveyDetails_Source\"},{\"name\":\"SurveyHeader\",\"relationship\":\"Self.SurveyDetail_SurveyHeader\",\"fromRole\":\"SurveyDetail_SurveyHeader_Source\",\"toRole\":\"SurveyDetail_SurveyHeader_Target\"}]},{\"name\":\"Question\",\"customannotation:ClrType\":\"Merchandiser.Question, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.Question_Company\",\"fromRole\":\"Question_Company_Source\",\"toRole\":\"Question_Company_Target\"},{\"name\":\"SurveyDetails\",\"relationship\":\"Self.Question_SurveyDetails\",\"fromRole\":\"Question_SurveyDetails_Source\",\"toRole\":\"Question_SurveyDetails_Target\"},{\"name\":\"SurveyProductQuestions\",\"relationship\":\"Self.Question_SurveyProductQuestions\",\"fromRole\":\"Question_SurveyProductQuestions_Source\",\"toRole\":\"Question_SurveyProductQuestions_Target\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"AspNetRole_AspNetUserRoles\",\"end\":[{\"role\":\"AspNetRole_AspNetUserRoles_Source\",\"type\":\"Edm.Self.AspNetRole\",\"multiplicity\":\"0..1\"},{\"role\":\"AspNetRole_AspNetUserRoles_Target\",\"type\":\"Edm.Self.AspNetUserRole\",\"multiplicity\":\"*\"}]},{\"name\":\"AspNetUserClaim_AspNetUser\",\"end\":[{\"role\":\"AspNetUserClaim_AspNetUser_Source\",\"type\":\"Edm.Self.AspNetUserClaim\",\"multiplicity\":\"*\"},{\"role\":\"AspNetUserClaim_AspNetUser_Target\",\"type\":\"Edm.Self.AspNetUser\",\"multiplicity\":\"0..1\"}]},{\"name\":\"AspNetUserLogin_AspNetUser\",\"end\":[{\"role\":\"AspNetUserLogin_AspNetUser_Source\",\"type\":\"Edm.Self.AspNetUserLogin\",\"multiplicity\":\"*\"},{\"role\":\"AspNetUserLogin_AspNetUser_Target\",\"type\":\"Edm.Self.AspNetUser\",\"multiplicity\":\"0..1\"}]},{\"name\":\"AspNetUser_AspNetUserRoles\",\"end\":[{\"role\":\"AspNetUser_AspNetUserRoles_Source\",\"type\":\"Edm.Self.AspNetUser\",\"multiplicity\":\"0..1\"},{\"role\":\"AspNetUser_AspNetUserRoles_Target\",\"type\":\"Edm.Self.AspNetUserRole\",\"multiplicity\":\"*\"}]},{\"name\":\"AspNetUsersInfo_AspNetUser\",\"end\":[{\"role\":\"AspNetUsersInfo_AspNetUser_Source\",\"type\":\"Edm.Self.AspNetUsersInfo\",\"multiplicity\":\"*\"},{\"role\":\"AspNetUsersInfo_AspNetUser_Target\",\"type\":\"Edm.Self.AspNetUser\",\"multiplicity\":\"0..1\"}]},{\"name\":\"AspNetUserRole_Company\",\"end\":[{\"role\":\"AspNetUserRole_Company_Source\",\"type\":\"Edm.Self.AspNetUserRole\",\"multiplicity\":\"*\"},{\"role\":\"AspNetUserRole_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"AspNetUserRole_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"AspNetUserRole_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"Customer_AspNetUserRoles\",\"end\":[{\"role\":\"Customer_AspNetUserRoles_Source\",\"type\":\"Edm.Self.Customer\",\"multiplicity\":\"0..1\"},{\"role\":\"Customer_AspNetUserRoles_Target\",\"type\":\"Edm.Self.AspNetUserRole\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Customer_AspNetUserRoles_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Customer_AspNetUserRoles_Target\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"Customer_Company\",\"end\":[{\"role\":\"Customer_Company_Source\",\"type\":\"Edm.Self.Customer\",\"multiplicity\":\"*\"},{\"role\":\"Customer_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"Customer_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Customer_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyCustomerLocation_Company\",\"end\":[{\"role\":\"SurveyCustomerLocation_Company_Source\",\"type\":\"Edm.Self.SurveyCustomerLocation\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocation_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocation_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocation_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyCustomerLocation_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocation_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocation\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocation_Customer_Target\",\"type\":\"Edm.Self.Customer\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocation_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocation_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"Location_Company\",\"end\":[{\"role\":\"Location_Company_Source\",\"type\":\"Edm.Self.Location\",\"multiplicity\":\"*\"},{\"role\":\"Location_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"Location_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Location_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"Location_SurveyCustomerLocations\",\"end\":[{\"role\":\"Location_SurveyCustomerLocations_Source\",\"type\":\"Edm.Self.Location\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}},{\"role\":\"Location_SurveyCustomerLocations_Target\",\"type\":\"Edm.Self.SurveyCustomerLocation\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Location_SurveyCustomerLocations_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Location_SurveyCustomerLocations_Target\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyHeader_Company\",\"end\":[{\"role\":\"SurveyHeader_Company_Source\",\"type\":\"Edm.Self.SurveyHeader\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeader_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeader_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeader_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyHeader_Customer\",\"end\":[{\"role\":\"SurveyHeader_Customer_Source\",\"type\":\"Edm.Self.SurveyHeader\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeader_Customer_Target\",\"type\":\"Edm.Self.Customer\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeader_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeader_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyHeader_Location\",\"end\":[{\"role\":\"SurveyHeader_Location_Source\",\"type\":\"Edm.Self.SurveyHeader\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeader_Location_Target\",\"type\":\"Edm.Self.Location\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeader_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeader_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"Survey_Company\",\"end\":[{\"role\":\"Survey_Company_Source\",\"type\":\"Edm.Self.Survey\",\"multiplicity\":\"*\"},{\"role\":\"Survey_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"Survey_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Survey_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"Survey_SurveyCustomerLocations\",\"end\":[{\"role\":\"Survey_SurveyCustomerLocations_Source\",\"type\":\"Edm.Self.Survey\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}},{\"role\":\"Survey_SurveyCustomerLocations_Target\",\"type\":\"Edm.Self.SurveyCustomerLocation\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Survey_SurveyCustomerLocations_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Survey_SurveyCustomerLocations_Target\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"Survey_SurveyHeaders\",\"end\":[{\"role\":\"Survey_SurveyHeaders_Source\",\"type\":\"Edm.Self.Survey\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}},{\"role\":\"Survey_SurveyHeaders_Target\",\"type\":\"Edm.Self.SurveyHeader\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Survey_SurveyHeaders_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Survey_SurveyHeaders_Target\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyProductQuestion_Company\",\"end\":[{\"role\":\"SurveyProductQuestion_Company_Source\",\"type\":\"Edm.Self.SurveyProductQuestion\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestion_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestion_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestion_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"Product_Company\",\"end\":[{\"role\":\"Product_Company_Source\",\"type\":\"Edm.Self.Product\",\"multiplicity\":\"*\"},{\"role\":\"Product_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"Product_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Product_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"Product_ProductCategory\",\"end\":[{\"role\":\"Product_ProductCategory_Source\",\"type\":\"Edm.Self.Product\",\"multiplicity\":\"*\"},{\"role\":\"Product_ProductCategory_Target\",\"type\":\"Edm.Self.ProductCategory\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Product_ProductCategory_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Product_ProductCategory_Source\",\"propertyRef\":{\"name\":\"ProductCategoryId\"}}}},{\"name\":\"SurveyDetail_Company\",\"end\":[{\"role\":\"SurveyDetail_Company_Source\",\"type\":\"Edm.Self.SurveyDetail\",\"multiplicity\":\"*\"},{\"role\":\"SurveyDetail_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyDetail_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyDetail_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyDetail_Product\",\"end\":[{\"role\":\"SurveyDetail_Product_Source\",\"type\":\"Edm.Self.SurveyDetail\",\"multiplicity\":\"*\"},{\"role\":\"SurveyDetail_Product_Target\",\"type\":\"Edm.Self.Product\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyDetail_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyDetail_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"Question_Company\",\"end\":[{\"role\":\"Question_Company_Source\",\"type\":\"Edm.Self.Question\",\"multiplicity\":\"*\"},{\"role\":\"Question_Company_Target\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"Question_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Question_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"Question_SurveyDetails\",\"end\":[{\"role\":\"Question_SurveyDetails_Source\",\"type\":\"Edm.Self.Question\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}},{\"role\":\"Question_SurveyDetails_Target\",\"type\":\"Edm.Self.SurveyDetail\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Question_SurveyDetails_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Question_SurveyDetails_Target\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"Question_SurveyProductQuestions\",\"end\":[{\"role\":\"Question_SurveyProductQuestions_Source\",\"type\":\"Edm.Self.Question\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}},{\"role\":\"Question_SurveyProductQuestions_Target\",\"type\":\"Edm.Self.SurveyProductQuestion\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Question_SurveyProductQuestions_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Question_SurveyProductQuestions_Target\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SurveyDetail_SurveyHeader\",\"end\":[{\"role\":\"SurveyDetail_SurveyHeader_Source\",\"type\":\"Edm.Self.SurveyDetail\",\"multiplicity\":\"*\"},{\"role\":\"SurveyDetail_SurveyHeader_Target\",\"type\":\"Edm.Self.SurveyHeader\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyDetail_SurveyHeader_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyDetail_SurveyHeader_Source\",\"propertyRef\":{\"name\":\"SurveyHeaderId\"}}}},{\"name\":\"Product_SurveyProductQuestions\",\"end\":[{\"role\":\"Product_SurveyProductQuestions_Source\",\"type\":\"Edm.Self.Product\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}},{\"role\":\"Product_SurveyProductQuestions_Target\",\"type\":\"Edm.Self.SurveyProductQuestion\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Product_SurveyProductQuestions_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Product_SurveyProductQuestions_Target\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestion_Survey\",\"end\":[{\"role\":\"SurveyProductQuestion_Survey_Source\",\"type\":\"Edm.Self.SurveyProductQuestion\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestion_Survey_Target\",\"type\":\"Edm.Self.Survey\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestion_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestion_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"Company_ProductCategories\",\"end\":[{\"role\":\"Company_ProductCategories_Source\",\"type\":\"Edm.Self.Company\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}},{\"role\":\"Company_ProductCategories_Target\",\"type\":\"Edm.Self.ProductCategory\",\"multiplicity\":\"*\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"Company_ProductCategories_Source\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"Company_ProductCategories_Target\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"type\":\"Edm.Self.ProductCategory\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"ProductViewModel_ProductCategory_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"ProductViewModel_ProductCategory_Source\",\"propertyRef\":{\"name\":\"ProductCategoryId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"ProductCategoryViewModel\",\"entityType\":\"Self.ProductCategoryViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"ProductCategories\",\"entityType\":\"Self.ProductCategory\"},{\"name\":\"Companies\",\"entityType\":\"Self.Company\"},{\"name\":\"AspNetUserRoles\",\"entityType\":\"Self.AspNetUserRole\"},{\"name\":\"AspNetRoles\",\"entityType\":\"Self.AspNetRole\"},{\"name\":\"AspNetUsers\",\"entityType\":\"Self.AspNetUser\"},{\"name\":\"AspNetUserClaims\",\"entityType\":\"Self.AspNetUserClaim\"},{\"name\":\"AspNetUserLogins\",\"entityType\":\"Self.AspNetUserLogin\"},{\"name\":\"AspNetUsersInfoes\",\"entityType\":\"Self.AspNetUsersInfo\"},{\"name\":\"Customers\",\"entityType\":\"Self.Customer\"},{\"name\":\"SurveyCustomerLocations\",\"entityType\":\"Self.SurveyCustomerLocation\"},{\"name\":\"Locations\",\"entityType\":\"Self.Location\"},{\"name\":\"SurveyHeaders\",\"entityType\":\"Self.SurveyHeader\"},{\"name\":\"Surveys\",\"entityType\":\"Self.Survey\"},{\"name\":\"SurveyProductQuestions\",\"entityType\":\"Self.SurveyProductQuestion\"},{\"name\":\"Products\",\"entityType\":\"Self.Product\"},{\"name\":\"SurveyDetails\",\"entityType\":\"Self.SurveyDetail\"},{\"name\":\"Questions\",\"entityType\":\"Self.Question\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"AspNetRole_AspNetUserRoles\",\"association\":\"Self.AspNetRole_AspNetUserRoles\",\"end\":[{\"role\":\"AspNetRole_AspNetUserRoles_Source\",\"entitySet\":\"AspNetRoles\"},{\"role\":\"AspNetRole_AspNetUserRoles_Target\",\"entitySet\":\"AspNetUserRoles\"}]},{\"name\":\"AspNetUserClaim_AspNetUser\",\"association\":\"Self.AspNetUserClaim_AspNetUser\",\"end\":[{\"role\":\"AspNetUserClaim_AspNetUser_Source\",\"entitySet\":\"AspNetUserClaims\"},{\"role\":\"AspNetUserClaim_AspNetUser_Target\",\"entitySet\":\"AspNetUsers\"}]},{\"name\":\"AspNetUserLogin_AspNetUser\",\"association\":\"Self.AspNetUserLogin_AspNetUser\",\"end\":[{\"role\":\"AspNetUserLogin_AspNetUser_Source\",\"entitySet\":\"AspNetUserLogins\"},{\"role\":\"AspNetUserLogin_AspNetUser_Target\",\"entitySet\":\"AspNetUsers\"}]},{\"name\":\"AspNetUser_AspNetUserRoles\",\"association\":\"Self.AspNetUser_AspNetUserRoles\",\"end\":[{\"role\":\"AspNetUser_AspNetUserRoles_Source\",\"entitySet\":\"AspNetUsers\"},{\"role\":\"AspNetUser_AspNetUserRoles_Target\",\"entitySet\":\"AspNetUserRoles\"}]},{\"name\":\"AspNetUsersInfo_AspNetUser\",\"association\":\"Self.AspNetUsersInfo_AspNetUser\",\"end\":[{\"role\":\"AspNetUsersInfo_AspNetUser_Source\",\"entitySet\":\"AspNetUsersInfoes\"},{\"role\":\"AspNetUsersInfo_AspNetUser_Target\",\"entitySet\":\"AspNetUsers\"}]},{\"name\":\"AspNetUserRole_Company\",\"association\":\"Self.AspNetUserRole_Company\",\"end\":[{\"role\":\"AspNetUserRole_Company_Source\",\"entitySet\":\"AspNetUserRoles\"},{\"role\":\"AspNetUserRole_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"Customer_AspNetUserRoles\",\"association\":\"Self.Customer_AspNetUserRoles\",\"end\":[{\"role\":\"Customer_AspNetUserRoles_Source\",\"entitySet\":\"Customers\"},{\"role\":\"Customer_AspNetUserRoles_Target\",\"entitySet\":\"AspNetUserRoles\"}]},{\"name\":\"Customer_Company\",\"association\":\"Self.Customer_Company\",\"end\":[{\"role\":\"Customer_Company_Source\",\"entitySet\":\"Customers\"},{\"role\":\"Customer_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"SurveyCustomerLocation_Company\",\"association\":\"Self.SurveyCustomerLocation_Company\",\"end\":[{\"role\":\"SurveyCustomerLocation_Company_Source\",\"entitySet\":\"SurveyCustomerLocations\"},{\"role\":\"SurveyCustomerLocation_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"SurveyCustomerLocation_Customer\",\"association\":\"Self.SurveyCustomerLocation_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocation_Customer_Source\",\"entitySet\":\"SurveyCustomerLocations\"},{\"role\":\"SurveyCustomerLocation_Customer_Target\",\"entitySet\":\"Customers\"}]},{\"name\":\"Location_Company\",\"association\":\"Self.Location_Company\",\"end\":[{\"role\":\"Location_Company_Source\",\"entitySet\":\"Locations\"},{\"role\":\"Location_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"Location_SurveyCustomerLocations\",\"association\":\"Self.Location_SurveyCustomerLocations\",\"end\":[{\"role\":\"Location_SurveyCustomerLocations_Source\",\"entitySet\":\"Locations\"},{\"role\":\"Location_SurveyCustomerLocations_Target\",\"entitySet\":\"SurveyCustomerLocations\"}]},{\"name\":\"SurveyHeader_Company\",\"association\":\"Self.SurveyHeader_Company\",\"end\":[{\"role\":\"SurveyHeader_Company_Source\",\"entitySet\":\"SurveyHeaders\"},{\"role\":\"SurveyHeader_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"SurveyHeader_Customer\",\"association\":\"Self.SurveyHeader_Customer\",\"end\":[{\"role\":\"SurveyHeader_Customer_Source\",\"entitySet\":\"SurveyHeaders\"},{\"role\":\"SurveyHeader_Customer_Target\",\"entitySet\":\"Customers\"}]},{\"name\":\"SurveyHeader_Location\",\"association\":\"Self.SurveyHeader_Location\",\"end\":[{\"role\":\"SurveyHeader_Location_Source\",\"entitySet\":\"SurveyHeaders\"},{\"role\":\"SurveyHeader_Location_Target\",\"entitySet\":\"Locations\"}]},{\"name\":\"Survey_Company\",\"association\":\"Self.Survey_Company\",\"end\":[{\"role\":\"Survey_Company_Source\",\"entitySet\":\"Surveys\"},{\"role\":\"Survey_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"Survey_SurveyCustomerLocations\",\"association\":\"Self.Survey_SurveyCustomerLocations\",\"end\":[{\"role\":\"Survey_SurveyCustomerLocations_Source\",\"entitySet\":\"Surveys\"},{\"role\":\"Survey_SurveyCustomerLocations_Target\",\"entitySet\":\"SurveyCustomerLocations\"}]},{\"name\":\"Survey_SurveyHeaders\",\"association\":\"Self.Survey_SurveyHeaders\",\"end\":[{\"role\":\"Survey_SurveyHeaders_Source\",\"entitySet\":\"Surveys\"},{\"role\":\"Survey_SurveyHeaders_Target\",\"entitySet\":\"SurveyHeaders\"}]},{\"name\":\"SurveyProductQuestion_Company\",\"association\":\"Self.SurveyProductQuestion_Company\",\"end\":[{\"role\":\"SurveyProductQuestion_Company_Source\",\"entitySet\":\"SurveyProductQuestions\"},{\"role\":\"SurveyProductQuestion_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"Product_Company\",\"association\":\"Self.Product_Company\",\"end\":[{\"role\":\"Product_Company_Source\",\"entitySet\":\"Products\"},{\"role\":\"Product_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"Product_ProductCategory\",\"association\":\"Self.Product_ProductCategory\",\"end\":[{\"role\":\"Product_ProductCategory_Source\",\"entitySet\":\"Products\"},{\"role\":\"Product_ProductCategory_Target\",\"entitySet\":\"ProductCategories\"}]},{\"name\":\"SurveyDetail_Company\",\"association\":\"Self.SurveyDetail_Company\",\"end\":[{\"role\":\"SurveyDetail_Company_Source\",\"entitySet\":\"SurveyDetails\"},{\"role\":\"SurveyDetail_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"SurveyDetail_Product\",\"association\":\"Self.SurveyDetail_Product\",\"end\":[{\"role\":\"SurveyDetail_Product_Source\",\"entitySet\":\"SurveyDetails\"},{\"role\":\"SurveyDetail_Product_Target\",\"entitySet\":\"Products\"}]},{\"name\":\"Question_Company\",\"association\":\"Self.Question_Company\",\"end\":[{\"role\":\"Question_Company_Source\",\"entitySet\":\"Questions\"},{\"role\":\"Question_Company_Target\",\"entitySet\":\"Companies\"}]},{\"name\":\"Question_SurveyDetails\",\"association\":\"Self.Question_SurveyDetails\",\"end\":[{\"role\":\"Question_SurveyDetails_Source\",\"entitySet\":\"Questions\"},{\"role\":\"Question_SurveyDetails_Target\",\"entitySet\":\"SurveyDetails\"}]},{\"name\":\"Question_SurveyProductQuestions\",\"association\":\"Self.Question_SurveyProductQuestions\",\"end\":[{\"role\":\"Question_SurveyProductQuestions_Source\",\"entitySet\":\"Questions\"},{\"role\":\"Question_SurveyProductQuestions_Target\",\"entitySet\":\"SurveyProductQuestions\"}]},{\"name\":\"SurveyDetail_SurveyHeader\",\"association\":\"Self.SurveyDetail_SurveyHeader\",\"end\":[{\"role\":\"SurveyDetail_SurveyHeader_Source\",\"entitySet\":\"SurveyDetails\"},{\"role\":\"SurveyDetail_SurveyHeader_Target\",\"entitySet\":\"SurveyHeaders\"}]},{\"name\":\"Product_SurveyProductQuestions\",\"association\":\"Self.Product_SurveyProductQuestions\",\"end\":[{\"role\":\"Product_SurveyProductQuestions_Source\",\"entitySet\":\"Products\"},{\"role\":\"Product_SurveyProductQuestions_Target\",\"entitySet\":\"SurveyProductQuestions\"}]},{\"name\":\"SurveyProductQuestion_Survey\",\"association\":\"Self.SurveyProductQuestion_Survey\",\"end\":[{\"role\":\"SurveyProductQuestion_Survey_Source\",\"entitySet\":\"SurveyProductQuestions\"},{\"role\":\"SurveyProductQuestion_Survey_Target\",\"entitySet\":\"Surveys\"}]},{\"name\":\"Company_ProductCategories\",\"association\":\"Self.Company_ProductCategories\",\"end\":[{\"role\":\"Company_ProductCategories_Source\",\"entitySet\":\"Companies\"},{\"role\":\"Company_ProductCategories_Target\",\"entitySet\":\"ProductCategories\"}]},{\"name\":\"ProductViewModel_ProductCategory\",\"association\":\"Self.ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"entitySet\":\"ProductCategories\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\r\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.DownloadSurveyData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadSurveyData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DownloadNoteData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadNoteData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"MapApi/Search/\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/MapApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductCategoryService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductCategoryApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductCategoryApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductCategoryApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductCategoryApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductCategoryApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Directives',[]);\r\n","var app = angular.module('Directives');\r\n\r\napp.directive('affixResizer', ['$window', '$timeout', function ($window, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attrs) {\r\n\r\n            angular.element($window).on('resize', function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n\r\n            $timeout(function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.infiniteScroll', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMessages', 'ngMaterial', 'focus-if', 'mgcrea.bootstrap.affix', 'Directives', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\n\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.survey'\r\n                });\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.report.surveyreport'\r\n                });\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            SelectionApplicationService.SetSurveyHeaderId(null);\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (SelectionApplicationService.GetCompanyId() == null) {\r\n                    $state.go('main.merchandise', { redirectState: state });\r\n                }\r\n                else {\r\n                    if (state == 'main.survey') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //if (SelectionApplicationService.GetSurveyId() == null) {\r\n                        //    $state.go('main.merchandise', { redirectState: state });\r\n                        //}\r\n                        //else {\r\n                        //    $state.go(state);\r\n                        //}\r\n                    }\r\n                    else if (state == 'main.report.surveyreport') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                    else if (state == 'main.map') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\r\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http,\r\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('http://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            debugger;\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductService', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductService, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProductCategories = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductCategory = function (item, model, label) {\r\n            $scope.item.ProductCategoryId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'ProductCategory.Name', name: 'Category Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory.addedit', {\r\n            url: \"/addedit\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategoryAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductCategoryService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductCategoryService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductCategoryService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory', {\r\n            url: \"/productcategory\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategory.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Product Category Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.productcategory.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductCategoryService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" };\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'IsRequired', name: 'Required', cellTooltip: true}\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService','QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\r\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\r\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.IsAdministrator = false;\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null, SurveyId: null };\r\n        $scope.UserId = null;\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Company = data;\r\n                    $scope.SelectedCompany = data[0];\r\n                    $scope.SelectCompany();\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            SelectionApplicationService.SetCompanyId($scope.SelectedCompany.Id);\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            var predicate = { \"CompanyId\": { '==': companyId } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                $scope.Customer = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            SelectionApplicationService.SetCustomer($scope.SelectedCustomer);\r\n            SelectionApplicationService.SetCustomerId($scope.SelectedCustomer.Id);\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var predicate = { \"CompanyId\": { \"==\": companyId } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Location = data;\r\n                    $scope.SelectedLocation = data[0];\r\n                    $scope.SelectLocation();\r\n                }\r\n                else {\r\n                    $scope.Location = data;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {            \r\n            SelectionApplicationService.SetLocation($scope.SelectedLocation);\r\n            SelectionApplicationService.SetLocationId($scope.SelectedLocation.Id);\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id, $scope.SelectedLocation.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, customerId, locationId) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": companyId } },\r\n                   { \"CustomerId\": { '==': customerId } },\r\n                   { \"LocationId\": { \"==\": locationId } }\r\n                ]\r\n            }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            SelectionApplicationService.SetSurvey($scope.SelectedSurvey.Survey);\r\n            SelectionApplicationService.SetSurveyId($scope.SelectedSurvey.SurveyId);\r\n            $state.go($stateParams.redirectState);\r\n        }\r\n\r\n        $scope.IsGoShown = function () {\r\n            if ($stateParams.redirectState == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService, SelectionApplicationService) {\r\n        \r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.survey'\r\n            });\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } };\r\n                SurveyProductQuestionService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.IsBeforeImage = true;\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.sort = {\r\n            column: ['Product.Name', 'Product.Name'],\r\n            descending: false\r\n        };\r\n        $scope.changeSorting = function (column) {\r\n            var sort = $scope.sort;\r\n\r\n            if (sort.column[0] == column) {\r\n                sort.descending = !sort.descending;\r\n            } else {\r\n                sort.column[0] = column;\r\n                sort.descending = false;\r\n            }\r\n        };\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.IsAfterImage = true;\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error updating the survey.\");\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        $state.go('main.merchandise', {\r\n                            redirectState: 'main.survey'\r\n                        });\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(\"There was an error creating the survey.\");\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null ) {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsBeforeImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsAfterImage = false;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report', {\r\n            url: \"/report\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n    }]);\r\n\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'MapService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, MapService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n\r\n        $scope.StartDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().startOf('isoWeek').format(\"DD\"));\r\n        $scope.EndDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().add(2, \"days\").format(\"DD\"));\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {                    \r\n                    $scope.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Before', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeImage.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(2, 0, {\r\n                        name: 'After', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/AfterImage.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(3, 0, {\r\n                        name: 'Notes', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/Notes.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error getting all the data.\");\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.data = $scope.data.concat(data);\r\n                    //$scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData());\r\n                });\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: 'data',\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.data[index].Id == id) {\r\n                        $scope.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            MapService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n\r\n        $scope.DownloadSurveyData = function () {\r\n            window.open('/DownloadApi/DownloadSurveyData?startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n\r\n        $scope.DownloadNoteData = function () {\r\n            window.open('/DownloadApi/DownloadNoteData?companyId=' + SelectionApplicationService.GetCompanyId() + '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.weeklyreport', {\r\n            url: \"/weeklyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Weekly/WeeklyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('WeeklyReportController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService', 'LocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService, LocationService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n        $scope.StartDate = moment().startOf('isoWeek').format(\"YYYY-MM-DD\");\r\n        $scope.EndDate = moment().add(1, \"days\").format(\"YYYY-MM-DD\");\r\n\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(), SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null, $scope.StartDate, $scope.EndDate, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                    else {\r\n                        return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                    }\r\n                }).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'CustomerName', name: 'Customer Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'LocationName', name: 'Location Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: []\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n                SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.gridOptions.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.gridOptions.data[index].Id == id) {\r\n                        $scope.gridOptions.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            MapService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\r\n    $scope.image = image;\r\n    $scope.title = title;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\r\n    $scope.note = note;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});"],"sourceRoot":"/source/"}