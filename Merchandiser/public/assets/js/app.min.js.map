{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","BuildSurvey/BuildSurveyService.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Image/ImageService.js","Download/DownloadService.js","Location/LocationService.js","ProductCategory/ProductService.js","Product/ProductService.js","ProductTypeDetail/ProductTypeDetailService.js","ProductTypeHeader/ProductTypeHeaderService.js","Report/ReportService.js","Role/RoleService.js","Question/QuestionService.js","SelectCustomerLocationProductQuestion/SelectCustomerLocationProductQuestionService.js","SelectLocation/SelectLocationService.js","SelectSurvey/SelectSurveyService.js","SelectUser/SelectUserService.js","Survey/SurveyService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","User/UserService.js","UserRole/UserRoleService.js","SurveyCustomerLocationProductQuestion/SurveyCustomerLocationProductQuestionService.js","Directives.js","AffixResizer.js","AfterImage.js","BeforeImage.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","ProductCategory/Controllers/ProductCategoryAddEditController.js","ProductCategory/Controllers/ProductCategoryController.js","ProductTypeDetail/Controllers/ProductTypeDetailAddEditController.js","ProductTypeDetail/Controllers/ProductTypeDetailController.js","ProductTypeHeader/Controllers/ProductTypeHeaderAddEditController.js","ProductTypeHeader/Controllers/ProductTypeHeaderController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionAddEditController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionController.js","SurveyCustomerLocationProductQuestion2/Controllers/SurveyCustomerLocationProductQuestionAddEditController2.js","SurveyCustomerLocationProductQuestion2/Controllers/SurveyCustomerLocationProductQuestionController2.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","SelectCompany/SelectCompanyController.js","SelectCustomer/SelectCustomerController.js","SelectLocation/SelectLocationController.js","SelectSurvey/SelectSurveyController.js","Survey/MerchandiseSurveyController.js","ReportController.js","SurveyReportController.js","SurveyHeaderReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","moment","service","localStorageService","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","RedirectState","GetRedirectState","SetRedirectState","state","CompanyId","GetCompanyId","localStorage","get","SetCompanyId","id","set","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Role","GetRole","SetRole","role","momentStartDate","startOf","StartDate","Date","GetStartDate","date","SetStartDate","EndDate","add","GetEndDate","SetEndDate","ProductTypeHeader","GetProductTypeHeader","SetProductTypeHeader","Clear","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","annotation:StoreGeneratedPattern","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","orderBy","skip","take","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","post","response","length","Update","put","Delete","delete","SelectionApplicationService","parameters","companyId","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","statusText","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","DownloadSurveyData","DownloadNoteData","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","inlineCount","CreateBulk","Message","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","directive","$window","restrict","link","scope","elem","attrs","element","on","innerWidth","addClass","removeClass","$scope","reader","FileReader","onload","AfterImage","target","result","$apply","Header","IsAfterImage","files","readAsDataURL","BeforeImage","IsBeforeImage","blockUIConfig","delay","filter","utcDate","dt","getTime","localStorageServiceProvider","setPrefix","$stateProvider","$urlRouterProvider","otherwise","templateUrl","run","$rootScope","$state","UserService","go","controller","Username","GoTo","Logout","location","SurveyCustomerLocationProductQuestionService","SelectedCompany","SelectedSurvey","SelectedProductTypeHeader","Route","toastr","PreviewSurvey","selectedSurveyId","Results","$stateParams","$routeParams","$location","CompanyService","Init","focus","Save","$parent","items","Select","Edit","reload","CustomerService","index","gridOptions","indexOf","splice","enableFiltering","enableSorting","columnDefs","width","cellTemplate","field","cellTooltip","row","LocationService","Latitude","Longitude","ChangeAddress","value","autoBlock","address","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","City","address_components","long_name","State","Zip","cellTolltip","ProductService","ProductCategoryService","ProductTypeHeaderService","SearchProductCategories","substringof","SelectProductCategory","ProductCategoryId","SearchProductTypes","SelectProductType","ProductTypeHeaderId","ProductTypeDetailService","QuestionService","SurveyService","Question","Product","ProductId","itemCopy","SearchCustomers","SelectCustomer","SelectCustomerCopy","SearchLocations","SelectLocation","SelectLocationCopy","SearchProducts","SelectProduct","ProductName","SelectProductCopy","SearchQuestions","SelectQuestion","QuestionId","Copy","promises","i","RowOrder","rowOrder","uiGridConstants","Page","sort","gridApi","infiniteScroll","dataLoaded","InlineCount","useExternalSorting","useExternalFiltering","showGridFooter","onRegisterApi","draggableRows","rowDropped","info","dropTarget","core","filterChanged","column","grid","isDefined","filterTimeout","cancel","columns","sortChanged","sortColumns","needLoadMoreData","GetDataDown","rowTemplate","gridColumns","equalsColumns","filters","term","trim","operandName","fieldName","termName","direction","DESC","saveScrollPercentage","concat","isMoreData","count","Reorder","ValidateForOrdering","ReorderAll","j","customer","$resource","BuildSurveyViewModel","Customers","Locations","Products","Questions","PopulateExisting","SearchCustomer","SearchLocation","SearchProduct","SearchQuestion","AddCustomer","$id","$$hashKey","$type","AddLocation","AddProduct","AddQuestion","Roles","Validate","Predicate","Continue","IsContinueShown","SelectLocationService","LocationServicesDisabled",">=","<=","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","message","SelectSurveyService","SurveyHeaderService","SurveyDetailService","ImageService","SelectCustomerLocationProductQuestionService","previousElementId","Notes","Detail","AreaManager","Phone","LocationName","CustomerName","descending","changeSorting","details","Answer","Details","ProductTypeDetailId","ProductTypeDetail","fileSizeBeforeImage","fileSizeAfterImage","size","alert","OnBlur","event","currentTarget","includes","NextInput","Number","parseInt","substring","document","getElementById","PrevInput","SelectedCustomer","SelectedLocation","SelectedSurveyHeaderId","ClearSelectedSurveyHeaderId","$uibModal","ReportService","DownloadService","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","PageSize","format","headerTooltip","exclude","keys","obj","enableGridMenu","infiniteScrollRowsFromEnd","enableHorizontalScrollbar","scrollbars","WHEN_NEEDED","ViewNote","modalInstance","open","animation","note","ViewImage","title","Company.Id","Created","Customer.Id","Location.Id","Survey.Id","NEVER","ViewDetail","NgMap","SelectUserService","SelectedPosition","User","CreatedBy","SearchUsers","predicateUser","users","getMap","SelectPosition","panTo","SelectMarker","marker","$uibModalInstance","ok","close","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\n(function() {\n    'use strict';\n    var services = angular.module('ApplicationServices', []);\n})();","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('ApplicationServices').service('SelectionApplicationService', function (localStorageService) {\r\n        var observers = [];\r\n        this.RegisterObserver = function (callback) {\r\n            observers.push(callback);\r\n        }\r\n\r\n        this.NotifyObservers = function () {\r\n            angular.forEach(observers, function (callback) {\r\n                callback();\r\n            });\r\n        };\r\n\r\n        this.RedirectState = null;\r\n        this.GetRedirectState = function () {\r\n            return this.RedirectState;\r\n        }\r\n\r\n        this.SetRedirectState = function (state) {\r\n            this.RedirectState = state;\r\n        }\r\n\r\n        this.CompanyId = null;\r\n        this.GetCompanyId = function () {\r\n            var localStorage = localStorageService.get('CompanyId');\r\n            if (localStorage != null)\r\n                return localStorage;\r\n            return this.CompanyId;\r\n        };\r\n\r\n        this.SetCompanyId = function (id) {\r\n            localStorageService.set('CompanyId', id);\r\n            this.CompanyId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Company = null;\r\n        this.GetCompany = function () {\r\n            var localStorage = localStorageService.get('Company');\r\n            if (localStorage != null)\r\n                return localStorage;\r\n            return this.Company;\r\n        };\r\n\r\n        this.SetCompany = function (item) {\r\n            localStorageService.set('Company', item);\r\n            this.Company = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.CustomerId = null;\r\n        this.GetCustomerId = function () {\r\n            return this.CustomerId;\r\n        };\r\n\r\n        this.SetCustomerId = function (id) {\r\n            this.CustomerId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Customer = null;\r\n        this.GetCustomer = function () {\r\n            return this.Customer;\r\n        };\r\n\r\n        this.SetCustomer = function (item) {\r\n            this.Customer = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.LocationId = null;\r\n        this.GetLocationId = function () {\r\n            return this.LocationId;\r\n        };\r\n\r\n        this.SetLocationId = function (id) {\r\n            this.LocationId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Location = null;\r\n        this.GetLocation = function () {\r\n            return this.Location;\r\n        };\r\n\r\n        this.SetLocation = function (item) {\r\n            this.Location = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.SurveyId = null;\r\n        this.GetSurveyId = function () {\r\n            var localStorage = localStorageService.get('SurveyId');\r\n            if (localStorage != null)\r\n                return localStorage;\r\n            return this.SurveyId;\r\n        };\r\n\r\n        this.SetSurveyId = function (id) {\r\n            localStorageService.set('SurveyId', id);\r\n            this.SurveyId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Survey = null;\r\n        this.GetSurvey = function () {\r\n            var localStorage = localStorageService.get('Survey');\r\n            if (localStorage != null)\r\n                return localStorage;\r\n            return this.Survey;\r\n        };\r\n\r\n        this.SetSurvey = function (item) { \r\n            localStorageService.set('Survey', item);\r\n            this.Survey = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.SurveyHeaderId = null;\r\n        this.GetSurveyHeaderId = function () {\r\n            return this.SurveyHeaderId;\r\n        };\r\n\r\n        this.SetSurveyHeaderId = function (id) {\r\n            this.SurveyHeaderId = id;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Role = null;\r\n        this.GetRole = function () {\r\n            return this.Role;\r\n        }\r\n\r\n        this.SetRole = function (role) {\r\n            this.Role = role;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.momentStartDate = moment().startOf('isoWeek');\r\n        this.StartDate = new Date(this.momentStartDate);\r\n        this.GetStartDate = function () {\r\n            var date = this.StartDate;\r\n            return date;\r\n        }\r\n\r\n        this.SetStartDate = function (date) {\r\n            this.StartDate = date;\r\n        }\r\n\r\n        this.EndDate = new Date(moment().add(2, \"days\"));\r\n        this.GetEndDate = function () {\r\n            var date = this.EndDate;\r\n            return date;\r\n        }\r\n\r\n        this.SetEndDate = function (date) {\r\n            this.EndDate = date;\r\n        }\r\n\r\n        this.ProductTypeHeader = null;\r\n        this.GetProductTypeHeader = function () {\r\n            var localStorage = localStorageService.get('ProductTypeHeader');\r\n            if (localStorage != null)\r\n                return localStorage;\r\n            return this.ProductTypeHeader;\r\n        }\r\n\r\n        this.SetProductTypeHeader = function (item) {\r\n            localStorageService.set('ProductTypeHeader', item);\r\n            this.ProductTypeHeader = item;\r\n            this.NotifyObservers();\r\n        }\r\n\r\n        this.Clear = function () {\r\n            this.RedirectState = null;\r\n\r\n            this.CompanyId = null;\r\n            this.Company = null;\r\n\r\n            this.CustomerId = null;\r\n            this.Customer = null;\r\n\r\n            this.LocationId = null;\r\n            this.Location = null;\r\n\r\n            this.SurveyId = null;\r\n            this.Survey = null;\r\n\r\n            this.SurveyHeaderId = null;\r\n        }\r\n    });\r\n})(moment);","\n(function() {\n    'use strict';\n    var services = angular.module('DatabaseServices', []);\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"LocationApi/Search\", \"LocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationProductQuestionApi/Search\", \"SurveyCustomerLocationProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductCategoryApi/Search\", \"ProductCategoryViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyHeaderApi/Search\", \"SurveyHeaderViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SelectLocationApi/Search\", \"SelectLocationViewModel\");        \r\n        meta.setEntityTypeForResourceName(\"SelectSurveyApi/Search\", \"SelectSurveyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SelectUserApi/Search\", \"SelectUserViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SelectCustomerLocationProductQuestionApi/Search\", \"SelectCustomerLocationProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductTypeHeaderApi/Search\", \"ProductTypeHeaderViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductTypeDetailApi/Search\", \"ProductTypeDetailViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.ProductCategoryViewModel\\\",\\\"Merchandiser.Models.ProductCategoryViewModel\\\"],[\\\"Merchandiser.ProductTypeDetailViewModel\\\",\\\"Merchandiser.Models.ProductTypeDetailViewModel\\\"],[\\\"Merchandiser.ProductTypeHeaderViewModel\\\",\\\"Merchandiser.Models.ProductTypeHeaderViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SelectCustomerLocationProductQuestionViewModel\\\",\\\"Merchandiser.Models.SelectCustomerLocationProductQuestionViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SelectLocationViewModel\\\",\\\"Merchandiser.Models.SelectLocationViewModel\\\"],[\\\"Merchandiser.SelectSurveyViewModel\\\",\\\"Merchandiser.Models.SelectSurveyViewModel\\\"],[\\\"Merchandiser.SelectUserViewModel\\\",\\\"Merchandiser.Models.SelectUserViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationProductQuestionViewModel\\\"],[\\\"Merchandiser.SurveyHeaderViewModel\\\",\\\"Merchandiser.Models.SurveyHeaderViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"],[\\\"Merchandiser.UserInfoViewModel\\\",\\\"Merchandiser.Models.UserInfoViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsSendReport\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"SendReport\",\"type\":\"Edm.DateTime\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"CompanyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CustomerName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LocationName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductCategoryViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductCategoryViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductTypeDetailViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductTypeDetailViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"ProductTypeHeaderId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"}]},{\"name\":\"ProductTypeHeaderViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductTypeHeaderViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"Details\",\"relationship\":\"Self.ProductTypeHeaderViewModel_Details\",\"fromRole\":\"ProductTypeHeaderViewModel_Details_Source\",\"toRole\":\"ProductTypeHeaderViewModel_Details_Target\"}},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectCustomerLocationProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"ProductTypeDetailId\",\"type\":\"Edm.Int32\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Company\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Customer\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Location\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\"},{\"name\":\"Product\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Product\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\"},{\"name\":\"ProductTypeDetail\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Question\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SelectCustomerLocationProductQuestionViewModel_Survey\",\"fromRole\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"toRole\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Phone\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"City\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"State\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Zip\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"ProductCategoryId\",\"type\":\"Edm.Int32\"},{\"name\":\"ProductTypeHeaderId\",\"type\":\"Edm.Int32\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"ProductCategory\",\"relationship\":\"Self.ProductViewModel_ProductCategory\",\"fromRole\":\"ProductViewModel_ProductCategory_Source\",\"toRole\":\"ProductViewModel_ProductCategory_Target\"},{\"name\":\"ProductTypeHeader\",\"relationship\":\"Self.ProductViewModel_ProductTypeHeader\",\"fromRole\":\"ProductViewModel_ProductTypeHeader_Source\",\"toRole\":\"ProductViewModel_ProductTypeHeader_Target\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsTrueFalse\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsNoteRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsCreate\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsCreateDays\",\"type\":\"Edm.Int32\"},{\"name\":\"IsEdit\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsEditDays\",\"type\":\"Edm.Int32\"},{\"name\":\"IsDelete\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsDeleteDays\",\"type\":\"Edm.Int32\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SelectLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Int32\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyCreated\",\"type\":\"Edm.DateTime\"}]},{\"name\":\"SelectSurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectSurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Int32\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\"},{\"name\":\"LocationId\",\"type\":\"Edm.Int32\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyCreated\",\"type\":\"Edm.DateTime\"}]},{\"name\":\"SelectUserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SelectUserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Email\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Company\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\"},{\"name\":\"Product\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Product\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Question\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\"}]},{\"name\":\"SurveyHeaderViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyHeaderViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"IsBeforeImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsAfterImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Phone\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"City\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"State\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Zip\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CustomerName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LocationName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsReviewed\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Reviewed\",\"type\":\"Edm.DateTime\"},{\"name\":\"ReviewedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyHeaderViewModel_Company\",\"fromRole\":\"SurveyHeaderViewModel_Company_Source\",\"toRole\":\"SurveyHeaderViewModel_Company_Target\"},{\"name\":\"CreatedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"fromRole\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_CreatedUser_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyHeaderViewModel_Customer\",\"fromRole\":\"SurveyHeaderViewModel_Customer_Source\",\"toRole\":\"SurveyHeaderViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyHeaderViewModel_Location\",\"fromRole\":\"SurveyHeaderViewModel_Location_Source\",\"toRole\":\"SurveyHeaderViewModel_Location_Target\"},{\"name\":\"ModifiedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"fromRole\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_ModifiedUser_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyHeaderViewModel_Survey\",\"fromRole\":\"SurveyHeaderViewModel_Survey_Source\",\"toRole\":\"SurveyHeaderViewModel_Survey_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.SurveyHeaderViewModel_UserInfo\",\"fromRole\":\"SurveyHeaderViewModel_UserInfo_Source\",\"toRole\":\"SurveyHeaderViewModel_UserInfo_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserInfoViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserInfoViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Int32\",\"nullable\":\"false\",\"annotation:StoreGeneratedPattern\":\"Identity\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Int32\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.UserRoleViewModel_UserInfo\",\"fromRole\":\"UserRoleViewModel_UserInfo_Source\",\"toRole\":\"UserRoleViewModel_UserInfo_Target\"}]}],\"association\":[{\"name\":\"ProductTypeHeaderViewModel_Details\",\"end\":[{\"role\":\"ProductTypeHeaderViewModel_Details_Source\",\"type\":\"Edm.Self.ProductTypeHeaderViewModel\",\"multiplicity\":\"0..1\"},{\"role\":\"ProductTypeHeaderViewModel_Details_Target\",\"type\":\"Edm.Self.ProductTypeDetailViewModel\",\"multiplicity\":\"*\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"type\":\"Edm.Self.ProductCategoryViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"ProductViewModel_ProductCategory_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"ProductViewModel_ProductCategory_Source\",\"propertyRef\":{\"name\":\"ProductCategoryId\"}}}},{\"name\":\"ProductViewModel_ProductTypeHeader\",\"end\":[{\"role\":\"ProductViewModel_ProductTypeHeader_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductTypeHeader_Target\",\"type\":\"Edm.Self.ProductTypeHeaderViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"ProductViewModel_ProductTypeHeader_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"ProductViewModel_ProductTypeHeader_Source\",\"propertyRef\":{\"name\":\"ProductTypeHeaderId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Target\",\"type\":\"Edm.Self.ProductTypeDetailViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Source\",\"propertyRef\":{\"name\":\"ProductTypeDetailId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"type\":\"Edm.Self.SelectCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}},{\"name\":\"UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"ProductCategoryViewModel\",\"entityType\":\"Self.ProductCategoryViewModel\"},{\"name\":\"ProductTypeDetailViewModel\",\"entityType\":\"Self.ProductTypeDetailViewModel\"},{\"name\":\"ProductTypeHeaderViewModel\",\"entityType\":\"Self.ProductTypeHeaderViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SelectCustomerLocationProductQuestionViewModel\",\"entityType\":\"Self.SelectCustomerLocationProductQuestionViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SelectLocationViewModel\",\"entityType\":\"Self.SelectLocationViewModel\"},{\"name\":\"SelectSurveyViewModel\",\"entityType\":\"Self.SelectSurveyViewModel\"},{\"name\":\"SelectUserViewModel\",\"entityType\":\"Self.SelectUserViewModel\"},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel\",\"entityType\":\"Self.SurveyCustomerLocationProductQuestionViewModel\"},{\"name\":\"SurveyHeaderViewModel\",\"entityType\":\"Self.SurveyHeaderViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"},{\"name\":\"UserInfoViewModels\",\"entityType\":\"Self.UserInfoViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"}],\"associationSet\":[{\"name\":\"ProductTypeHeaderViewModel_Details\",\"association\":\"Self.ProductTypeHeaderViewModel_Details\",\"end\":[{\"role\":\"ProductTypeHeaderViewModel_Details_Source\",\"entitySet\":\"ProductTypeHeaderViewModel\"},{\"role\":\"ProductTypeHeaderViewModel_Details_Target\",\"entitySet\":\"ProductTypeDetailViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Company\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Customer\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Location\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"ProductViewModel_ProductCategory\",\"association\":\"Self.ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"entitySet\":\"ProductCategoryViewModel\"}]},{\"name\":\"ProductViewModel_ProductTypeHeader\",\"association\":\"Self.ProductViewModel_ProductTypeHeader\",\"end\":[{\"role\":\"ProductViewModel_ProductTypeHeader_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductTypeHeader_Target\",\"entitySet\":\"ProductTypeHeaderViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Product\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_ProductTypeDetail_Target\",\"entitySet\":\"ProductTypeDetailViewModel\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Question\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"SelectCustomerLocationProductQuestionViewModel_Survey\",\"association\":\"Self.SelectCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Source\",\"entitySet\":\"SelectCustomerLocationProductQuestionViewModel\"},{\"role\":\"SelectCustomerLocationProductQuestionViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Company\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Company\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Product\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Question\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"SurveyCustomerLocationProductQuestionViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationProductQuestionViewModel\"},{\"role\":\"SurveyCustomerLocationProductQuestionViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Company\",\"association\":\"Self.SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"association\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"association\":\"Self.SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_Location\",\"association\":\"Self.SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"association\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"association\":\"Self.SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"association\":\"Self.SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"UserRoleViewModel_UserInfo\",\"association\":\"Self.UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]}]}}}\n);\r\n","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"CompanyApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"CompanyApi/AdminSearch\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/CompanyApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/CompanyApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\r\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('BuildSurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\n\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\n                    this.deferredRequest = null;\r\n                }\n                var deferred = $q.defer();\n\n                var query = new breeze.EntityQuery({\r\n                    from: \"BuildSurveyApi/Search\",\n                    where: predicate,\n                    orderBy: order,\n                    skip: page * pageSize,\n                    take: pageSize,\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\n\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\n                    _self.deferredRequest = null;\r\n                });\n\n                this.deferredRequest = deferred;\n\n                return deferred.promise;\r\n            };\r\n        }]);\r\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\n            if (predicate != null) {\n                query = query.where(predicate);\n            }\n            query = query.skip(page * pageSize).take(pageSize);\n                        \n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n            \n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/CompanyUserApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/CompanyUserApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"CustomerApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/CustomerApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/CustomerApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.GetBeforeImage = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.GetAfterImage = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.CreateBeforeImage = function (image, id) {\n                var deferred = $q.defer();\n                if (image != undefined && image != null) {\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\n                    .then(function (response) {\n                        deferred.resolve(response);\n                    }, function (response) {\n                        if (response.data.length > 0) {\n                            deferred.reject(response.statusText);\n                        } else {\n                            deferred.reject(\"Failed to create the record.\");\n                        }\n                    });\n                }\n                else {\n                    deferred.resolve();\n                }\n                return deferred.promise;\n            };\n\n            this.CreateAfterImage = function (image, id) {\n                var deferred = $q.defer();\n                if (image != undefined && image != null) {\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\n                    .then(function (response) {\n                        deferred.resolve(response);\n                    }, function (response) {\n                        if (response.data.length > 0) {\n                            deferred.reject(response.statusText);\n                        } else {\n                            deferred.reject(\"Failed to create the record.\");\n                        }\n                    });\n                }\n                else {\n                    deferred.resolve();\n                }\n                return deferred.promise;\n            };\n\n            this.DeleteBeforeImage = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.DeleteAfterImage = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.DownloadSurveyData = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/DownloadApi/DownloadSurveyData/'\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.DownloadNoteData = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/DownloadApi/DownloadNoteData/'\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"LocationApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/LocationApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/LocationApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/LocationApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/LocationApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ProductCategoryService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"ProductCategoryApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/ProductCategoryApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/ProductCategoryApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/ProductCategoryApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/ProductCategoryApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"ProductApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/ProductApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/ProductApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/ProductApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/ProductApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductTypeDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductTypeDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductTypeDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductTypeDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductTypeDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductTypeDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductTypeHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductTypeHeaderApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductTypeHeaderApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductTypeHeaderApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductTypeHeaderApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductTypeHeaderApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\n                cancelExistingSearch = cancelExistingSearch || false;\n\n                if (this.deferredRequest !== null && cancelExistingSearch) {\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\n                    this.deferredRequest = null;\n                }\n                var deferred = $q.defer();\n                var query = breeze.EntityQuery.from('RoleApi/Search');\n                if (predicate != null) {\n                    query = query.where(predicate);\n                }\n                query = query.skip(page * pageSize).take(pageSize);\n\n                breezeservice.executeQuery(query).then(function (data) {\n                    deferred.resolve(data.httpResponse.data);\n                    _self.deferredRequest = null;\n                }, function (msg, code) {\n                    deferred.reject(msg);\n                    _self.deferredRequest = null;\n                });\n\n                this.deferredRequest = deferred;\n\n                return deferred.promise;\n            };\n\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\n                cancelExistingSearch = cancelExistingSearch || false;\n\n                if (this.deferredRequest !== null && cancelExistingSearch) {\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\n                    this.deferredRequest = null;\n                }\n                var deferred = $q.defer();\n\n                var query = new breeze.EntityQuery({\n                    from: \"RoleApi/Search\",\n                    where: predicate,\n                    //orderBy: [\"Created desc\"],\n                    skip: page * pageSize,\n                    take: pageSize\n                });\n\n                breezeservice.executeQuery(query).then(function (data) {\n                    deferred.resolve(data.httpResponse.data);\n                    _self.deferredRequest = null;\n                }, function (msg, code) {\n                    deferred.reject(msg);\n                    _self.deferredRequest = null;\n                });\n\n                this.deferredRequest = deferred;\n\n                return deferred.promise;\n            };\n\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"QuestionApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/QuestionApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/QuestionApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectCustomerLocationProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectCustomerLocationProductQuestionApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    inlineCount: true,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectLocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectLocationApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectSurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectSurveyApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectUserService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectUserApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    inlineCount: true,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.data);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.data);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.data);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"SurveyDetailApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/SurveyDetailApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/SurveyDetailApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response.statusText);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n                cancelExistingSearch = cancelExistingSearch || false;\n\n                if (this.deferredRequest !== null && cancelExistingSearch) {\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\n                    this.deferredRequest = null;\n                }\n                var deferred = $q.defer();\n\n                var query = new breeze.EntityQuery({\n                    from: \"SurveyHeaderApi/Search\",\n                    where: predicate,\n                    orderBy: order,\n                    skip: page * pageSize,\n                    take: pageSize,\n                    inlineCount: true,\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\n                });\n\n                breezeservice.executeQuery(query).then(function (data) {\n                    deferred.resolve(data.httpResponse.data);\n                    _self.deferredRequest = null;\n                }, function (msg, code) {\n                    deferred.reject(msg);\n                    _self.deferredRequest = null;\n                });\n\n                this.deferredRequest = deferred;\n\n                return deferred.promise;\n            };\n\n            this.Get = function (id) {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.Create = function (item) {\n                var deferred = $q.defer();\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response.statusText);\n                    } else {\n                        deferred.reject(\"Failed to create the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            };\n\n            this.CreateBulk = function (item) {\n                var deferred = $q.defer();\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.Message.length > 0) {\n                        deferred.reject(response.data.Message);\n                    } else {\n                        deferred.reject(\"Failed to create the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            };\n\n            this.Update = function (id, item) {\n                var deferred = $q.defer();\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to update the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.UpdateBulk = function (id, item) {\n                var deferred = $q.defer();\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.Message.length > 0) {\n                        deferred.reject(response.data.Message);\n                    } else {\n                        deferred.reject(\"Failed to update the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.Delete = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.length > 0) {\n                        deferred.reject(response);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n\n            this.DeleteBulk = function (id) {\n                var deferred = $q.defer();\n\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\n                .then(function (response) {\n                    deferred.resolve(response);\n                }, function (response) {\n                    if (response.data.Message.length > 0) {\n                        deferred.reject(response.data.Message);\n                    } else {\n                        deferred.reject(\"Failed to delete the record.\");\n                    }\n                });\n\n                return deferred.promise;\n            }\n        }]);\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\n            var _self = this;\n            this.deferredRequest = null;\n\n            this.GetCurrentUser = function () {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/UserApi/GetCurrentUser/',\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.GetCurrentUsername = function () {\n                var deferred = $q.defer();\n\n                $http({\n                    method: 'Get',\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\n                }).success(function (data, status, headers, config) {\n                    deferred.resolve(data);\n                }).error(function (msg, code) {\n                    deferred.reject(msg);\n                });\n\n                return deferred.promise;\n            };\n\n            this.IsAdministrator = function (companyId) {\n                var deferred = $q.defer();\n\n                this.GetCurrentUser().then(function (data) {\n                    var userId = data;\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                        var roles = data.map(function (e) { return e.Id; });\n                        var predicate = {\n                            and: [\n                               { \"UserId\": { '==': userId } },\n                               { \"RoleId\": { '==': data[0].Id } },\n                               { \"CompanyId\": { '==': companyId } }\n                            ]\n                        }\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                            if (data.length > 0) {\n                                deferred.resolve(true);\n                            }\n                            else {\n                                deferred.resolve(false);\n                            }\n                        });\n                    });\n                });\n                return deferred.promise;\n            }\n\n            this.IsCustomer = function (companyId) {\n                var deferred = $q.defer();\n\n                this.GetCurrentUser().then(function (data) {\n                    var userId = data;\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                        var roles = data.map(function (e) { return e.Id; });\n                        var predicate = {\n                            and: [\n                               { \"UserId\": { '==': userId } },\n                               { \"RoleId\": { '==': data[0].Id } },\n                               { \"CompanyId\": { '==': companyId } }\n                            ]\n                        }\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                            if (data.length > 0) {\n                                deferred.resolve(true);\n                            }\n                            else {\n                                deferred.resolve(false);\n                            }\n                        });\n                    });\n                });\n                return deferred.promise;\n            }\n\n            this.IsDataEntry = function (companyId) {\n                var deferred = $q.defer();\n                this.GetCurrentUser().then(function (data) {\n                    var userId = data;\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                        var roles = data.map(function (e) { return e.Id; });\n                        var predicate = {\n                            and: [\n                               { \"UserId\": { '==': userId } },\n                               { \"RoleId\": { '==': data[0].Id } },\n                               { \"CompanyId\": { '==': companyId } }\n                            ]\n                        }\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\n                            if (data.length > 0) {\n                                deferred.resolve(true);\n                            }\n                            else {\n                                deferred.resolve(false);\n                            }\n                        });\n                    });\n                });\n                return deferred.promise;\n            }\n        }]);\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    debugger;\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.Message.length > 0) {\r\n                        deferred.reject(response.data.Message);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","(function () {\n    \"use strict\";\n    angular.module('DatabaseServices')\n    .service('SurveyCustomerLocationProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\n        function ($http, $q, breeze, breezeservice) {\n        var _self = this;\n        this.deferredRequest = null;\n\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\n            cancelExistingSearch = cancelExistingSearch || false;\n\n            if (this.deferredRequest !== null && cancelExistingSearch) {\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\n                this.deferredRequest = null;\n            }\n            var deferred = $q.defer();\n\n            var query = new breeze.EntityQuery({\n                from: \"SurveyCustomerLocationProductQuestionApi/Search\",\n                where: predicate,\n                orderBy: order,\n                skip: page * pageSize,\n                take: pageSize,\n                inlineCount: true\n            });\n\n            breezeservice.executeQuery(query).then(function (data) {\n                deferred.resolve(data.httpResponse.data);\n                _self.deferredRequest = null;\n            }, function (msg, code) {\n                deferred.reject(msg);\n                _self.deferredRequest = null;\n            });\n\n            this.deferredRequest = deferred;\n\n            return deferred.promise;\n        };\n\n        this.Get = function (id) {\n            var deferred = $q.defer();\n\n            $http({\n                method: 'Get',\n                url: '/breeze/SurveyCustomerLocationProductQuestionApi/Get/' + id,\n            }).success(function (data, status, headers, config) {\n                deferred.resolve(data);\n            }).error(function (msg, code) {\n                deferred.reject(msg);\n            });\n\n            return deferred.promise;\n        };\n\n        this.Create = function (item) {\n            var deferred = $q.defer();\n\n            $http.post('/breeze/SurveyCustomerLocationProductQuestionApi/Create', item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to create the record.\");\n                }\n            });\n\n            return deferred.promise;\n        };\n\n        this.Update = function (id, item) {\n            var deferred = $q.defer();\n            $http.put('/breeze/SurveyCustomerLocationProductQuestionApi/Update/' + id, item)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to update the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n\n        this.Delete = function (id) {\n            var deferred = $q.defer();\n\n            $http.delete('/breeze/SurveyCustomerLocationProductQuestionApi/Delete/' + id)\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (response) {\n                if (response.data.length > 0) {\n                    deferred.reject(response);\n                } else {\n                    deferred.reject(\"Failed to delete the record.\");\n                }\n            });\n\n            return deferred.promise;\n        }\n    }]);\n})();","var app = angular.module('Directives',[]);\n","var app = angular.module('Directives');\n\napp.directive('affixResizer', ['$window', '$timeout', function ($window, $timeout) {\n    return {\n        restrict: 'A',\n        link: function (scope, elem, attrs) {\n\n            angular.element($window).on('resize', function () {\n                if ($window.innerWidth > 992) {\n                    elem.addClass('affix');\n                }\n                else {\n                    elem.removeClass('affix');\n                }\n            });\n\n            $timeout(function () {\n                if ($window.innerWidth > 992) {\n                    elem.addClass('affix');\n                }\n                else {\n                    elem.removeClass('affix');\n                }\n            });\n        }\n    }\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\nvar app = angular.module('Directives');\n\napp.directive('afterImage', [function () {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attrs) {\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n                $scope.AfterImage = e.target.result;\n                $scope.$apply();\n            }\n\n            elem.on('change', function () {\n                $scope.Header.IsAfterImage = true;\n                $scope.Header.AfterImage = elem[0].files[0];\n                reader.readAsDataURL(elem[0].files[0]);\n            });\n        }\n    }\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\nvar app = angular.module('Directives');\n\napp.directive('beforeImage', [function () {\n    return {\n        restrict: 'A',\n        link: function ($scope, elem, attrs) {\n            var reader = new FileReader();\n            \n            reader.onload = function (e) {\n                $scope.BeforeImage = e.target.result;\n                $scope.$apply();\n            }\n\n            elem.on('change', function () {\n                $scope.Header.IsBeforeImage = true;\n                $scope.Header.BeforeImage = elem[0].files[0];\n                reader.readAsDataURL(elem[0].files[0]);\n            });\n        }\n    }\n}]);","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.draggable-rows', 'ui.grid.infiniteScroll', 'ui.grid.cellNav', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMessages', 'ngMaterial', 'focus-if', 'mgcrea.bootstrap.affix', 'LocalStorageModule', 'Directives', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.filter('dateLocalize', function () {\r\n    return function (utcDate) {\r\n        if (utcDate == null)\r\n            return \"\";\r\n        else {\r\n            var dt = new Date(utcDate + 'Z').getTime();\r\n            return dt;\r\n        }        \r\n    }\r\n});\r\napp.config(function (localStorageServiceProvider) {\r\n    localStorageServiceProvider\r\n      .setPrefix('Merchandiser');\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Administrator\");\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Data Entry\");\r\n                SelectionApplicationService.SetRedirectState('main.survey');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Customer\");\r\n                SelectionApplicationService.SetRedirectState('main.report.surveyheaderreport');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function (data) {\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                SelectionApplicationService.Clear();\r\n\r\n                SelectionApplicationService.SetRedirectState(state);\r\n                $state.go('main.selectcompany');\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function (data) {\r\n                $window.location = '/Home/Index';\r\n            });\r\n        }\r\n\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.Role = SelectionApplicationService.GetRole();\r\n        })\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService', 'SurveyCustomerLocationProductQuestionService',\r\n    function controller($scope, $state, SelectionApplicationService, SurveyCustomerLocationProductQuestionService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.SelectedProductTypeHeader = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedProductTypeHeader = SelectionApplicationService.GetProductTypeHeader();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocationproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else if (state == \"main.admin.surveycustomerlocationproductquestion2.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else if (state == \"main.admin.producttypedetail.addedit\") {\r\n                    if (SelectionApplicationService.GetProductTypeHeader() == null) {\r\n                        toastr.error(\"A product type must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $scope.PreviewSurvey = function () {\r\n            var selectedSurveyId = SelectionApplicationService.GetSurveyId();\r\n            if (selectedSurveyId != null) {\r\n                SurveyCustomerLocationProductQuestionService.Search()\r\n                var predicate = {\r\n                    and: [\r\n                        { \"SurveyId\": { \"==\": selectedSurveyId } }\r\n                    ]\r\n                }\r\n                SurveyCustomerLocationProductQuestionService.Search(predicate, [], 0, 1, false).then(function (data) {\r\n                    if (data.Results.length != 0) {\r\n                        SelectionApplicationService.SetCompanyId(data.Results[0].CompanyId);\r\n                        SelectionApplicationService.SetCustomerId(data.Results[0].CustomerId);\r\n                        SelectionApplicationService.SetLocationId(data.Results[0].LocationId);\r\n                        SelectionApplicationService.SetSurveyId(data.Results[0].SurveyId);\r\n                        $state.go('main.survey');\r\n                    }\r\n                    else {\r\n                        toastr.error(\"No elements have been added to this survey to preview\");\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                toastr.error(\"A survey must be selected first.\");\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" }\n            $scope.focus = true;\n        }\n        $scope.Init();\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                CompanyService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    $scope.$parent.Search();\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                CompanyService.Create($scope.item).then(function (data) {\n                    $scope.$parent.Search();\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $routeParams, $http,\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\n\n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" }\n            $scope.focus = true;\n        }\n        $scope.Init();\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                CustomerService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                CustomerService.Create($scope.item).then(function (data) {\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService', 'blockUIConfig',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService, blockUIConfig) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            blockUIConfig.autoBlock = false;\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                blockUIConfig.autoBlock = true;\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n            $scope.item.City = item.address_components[3].long_name;\r\n            $scope.item.State = item.address_components[5].long_name;\r\n            $scope.item.Zip = item.address_components[7].long_name;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'Store', name: 'Store', cellTooltip: true },\r\n                { field: 'AreaManager', name: 'Manager', cellTolltip: true, width: 100 },\r\n                { field: 'Phone', name: 'Phone', cellTooltip: true, width: 100 },\r\n                { field: 'Address', name: 'Address', cellTooltip: true },\r\n                { field: 'City', name: 'City', cellTooltip: true, width: 125 },\r\n                { field: 'State', name: 'State', cellTooltip: true, width: 75 },\r\n                { field: 'Zip', name: 'Zip', cellTooltip: true, width: 75 }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductService', 'ProductCategoryService', 'ProductTypeHeaderService', 'SelectionApplicationService', 'blockUIConfig',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductService, ProductCategoryService, ProductTypeHeaderService, SelectionApplicationService, blockUIConfig) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProductCategories = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductCategory = function (item, model, label) {\r\n            $scope.item.ProductCategoryId = item.Id;\r\n        }\r\n\r\n        $scope.SearchProductTypes = function (value) {\r\n            blockUIConfig.autoBlock = false;\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductTypeHeaderService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                blockUIConfig.autoBlock = true;\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductType = function (item, model, label) {\r\n            $scope.item.ProductTypeHeaderId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'ProductCategory.Name', name: 'Category Name', cellTooltip: true },\r\n                { field: 'ProductTypeHeader.Name', name: 'Product Type Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";\n    angular.module('Main').config(function ($stateProvider) {\n        $stateProvider\n        .state('main.admin.productcategory.addedit', {\n            url: \"/addedit/:id\",\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategoryAddEdit.html\"\n        })\n    });\n    angular.module('Main').controller('ProductCategoryAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService, SelectionApplicationService) {\n       \n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" }\n            $scope.focus = true;\n        }\n        $scope.Init();\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                ProductCategoryService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                ProductCategoryService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                ProductCategoryService.Create($scope.item).then(function (data) {\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory', {\r\n            url: \"/productcategory\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategory.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.productcategory.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductCategoryService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypedetail.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeDetail/Views/ProductTypeDetailAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeDetailAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductTypeDetailService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductTypeDetailService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductTypeDetailService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductTypeDetailService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.ProductTypeHeaderId = SelectionApplicationService.GetProductTypeHeader().Id;\r\n                ProductTypeDetailService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypedetail', {\r\n            url: \"/producttypedetail\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeDetail/Views/ProductTypeDetail.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeDetailController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductTypeDetailService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductTypeDetailService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductTypeDetailService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.producttypedetail.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductTypeDetailService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypeheader.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeHeader/Views/ProductTypeHeaderAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeHeaderAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductTypeHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductTypeHeaderService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductTypeHeaderService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductTypeHeaderService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductTypeHeaderService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.producttypeheader', {\r\n            url: \"/producttypeheader\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductTypeHeader/Views/ProductTypeHeader.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductTypeHeaderController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductTypeHeaderService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductTypeHeaderService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductTypeHeaderService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '180', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/SelectEditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.producttypeheader.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductTypeHeaderService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            ProductTypeHeaderService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetProductTypeHeader(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\n        \n        $scope.Init = function () {\n            $scope.item = { Id: null, Name: \"\" };\n            $scope.focus = true;\n        }\n        $scope.Search = function () {\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\n                QuestionService.Get($stateParams.id).then(function (data) {\n                    $scope.item = data;\n                });\n            }\n        }\n        $scope.Search();\n\n        $scope.Save = function () {\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n            else {\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\n                QuestionService.Create($scope.item).then(function (data) {\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\n                    $scope.Init();\n                }, function (error) {\n                    toastr.error(error.data, error.statusText);\n                });\n            }\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'IsRequired', name: 'Required', cellTooltip: true},\r\n                { field: 'IsTrueFalse', name: 'True False', cellTooltip: true}\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            else {\r\n                $scope.Init();\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestionAddEdit.html\",\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams',\r\n    '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'CustomerService', 'LocationService', 'ProductService', 'QuestionService', 'SelectionApplicationService', 'blockUIConfig',\r\n    function controller($scope, $state, $stateParams, $routeParams,\r\n        $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        CustomerService, LocationService, ProductService, QuestionService, SelectionApplicationService, blockUIConfig) {\r\n        blockUIConfig.autoBlock = false;\r\n        $scope.Init = function () {\r\n            $scope.item = {\r\n                Question: { Name: null },\r\n                Location: { Name: null },\r\n                Customer: { Name: null },\r\n                Product: { Name: null },\r\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\r\n            $scope.itemCopy = {\r\n                Question: { Name: null },\r\n                Location: { Name: null },\r\n                Customer: { Name: null },\r\n                Product: { Name: null },\r\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SelectCustomerCopy = function (item, model, label) {\r\n            $scope.itemCopy.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.SelectLocationCopy = function (item, model, label) {\r\n            $scope.itemCopy.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n            $scope.item.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SelectProductCopy = function (item, model, label) {\r\n            $scope.itemCopy.ProductId = item.Id;\r\n            $scope.itemCopy.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            blockUIConfig.autoBlock = true;\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    blockUIConfig.autoBlock = false;\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    blockUIConfig.autoBlock = false;\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationProductQuestionService.Create($scope.item).then(function (data) {\r\n                    blockUIConfig.autoBlock = false;\r\n                    $scope.$parent.data.splice(0, 0, data.data);\r\n                    $scope.item.QuestionId = null; $scope.item.Question.Name = null;\r\n                    //$scope.Init();\r\n                }, function (error) {\r\n                    blockUIConfig.autoBlock = false;\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Copy = function () {\r\n            blockUIConfig.autoBlock = true;\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } },\r\n                   { \"SurveyId\": { '==': SelectionApplicationService.GetSurveyId() } },\r\n                   { \"CustomerId\": { '==': $scope.item.CustomerId } }\r\n                ]\r\n            }\r\n            if ($scope.item.LocationId != null) { predicate.and.push({ \"LocationId\": { '==': $scope.item.LocationId } }) }\r\n            if ($scope.item.ProductId != null) { predicate.and.push({ \"ProductId\": { '==': $scope.item.ProductId } }) }\r\n            if ($scope.item.QuestionId != null) { predicate.and.push({ \"QuestionId\": { '==': $scope.item.QuestionId } }) }\r\n            var promise = {}, promises = [];\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                for (var i = 0; i < data.Results.length; i++) {\r\n                    var item = {\r\n                        CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                        SurveyId: SelectionApplicationService.GetSurveyId(),\r\n                        RowOrder: data.Results[i].rowOrder,\r\n                        CustomerId: $scope.itemCopy.CustomerId,\r\n                        LocationId: $scope.itemCopy.LocationId,\r\n                        ProductId: $scope.itemCopy.ProductId,\r\n                        QuestionId: $scope.itemCopy.QuestionId,\r\n                    }\r\n                    if ($scope.itemCopy.LocationId == null) {\r\n                        item.LocationId = data.Results[i].Location.Id;\r\n                    }\r\n                    if ($scope.itemCopy.ProductId == null) {\r\n                        item.ProductId = data.Results[i].Product.Id;\r\n                    }\r\n                    if ($scope.itemCopy.QuestionId == null) {\r\n                        item.QuestionId = data.Results[i].Question.Id;\r\n                    }\r\n                    promise = SurveyCustomerLocationProductQuestionService.Create(item).then(function (data) {\r\n\r\n                    });\r\n                    //$scope.$parent.gridOptions.data.push(data);\r\n                    promises.push(promise);                   \r\n                }\r\n                $q.all(promises).then(function () {\r\n                    blockUIConfig.autoBlock = false;\r\n                    toastr.success(\"The specified survey data has been copied over.\");\r\n                    $scope.itemCopy = { Id: null }\r\n                    $scope.$parent.Search();\r\n                });\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion', {\r\n            url: \"/survey/customerlocationproductquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestion.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionController', ['$scope', '$state', '$routeParams', 'uiGridConstants',\r\n        '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, uiGridConstants,\r\n    $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Page = 0;\r\n        var predicate = {\r\n            and: [\r\n                { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            ]\r\n        }\r\n        var sort = [\"RowOrder asc\"];\r\n        $scope.Search = function () {\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, sort, 0, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, data.InlineCount);\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            useExternalSorting: true,\r\n            useExternalFiltering: true,\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: 'data',\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    //$scope.Reorder();\r\n                });\r\n                gridApi.core.on.filterChanged($scope, function (column) {\r\n                    var grid = this.grid;\r\n                    if (angular.isDefined($scope.filterTimeout)) {\r\n                        $timeout.cancel($scope.filterTimeout);\r\n                    }\r\n                    $scope.filterTimeout = $timeout(function () {\r\n                        $scope.filterChanged(grid.columns);\r\n                    }, 1000);\r\n                });\r\n\r\n                gridApi.core.on.sortChanged($scope, function (grid, sortColumns) {\r\n                    $scope.sortChanged(sortColumns);\r\n                });\r\n\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.filterChanged = function (gridColumns) {\r\n            var equalsColumns = [\"RowOrder\"];\r\n            predicate.and.length = 1;\r\n            $scope.data = [];\r\n            $scope.Page = 0;\r\n            angular.forEach(gridColumns, function (column) {\r\n                if (typeof column.filters !== 'undefined' && column.filters !== null &&\r\n                        column.filters.length > 0 && column.filters[0].term != null && column.filters[0].term.trim().length > 0) {\r\n\r\n                    var operandName = \"contains\"; var fieldName = column.field; var termName = column.filters[0].term;\r\n                    if (equalsColumns.indexOf(column.field) != -1) {\r\n                        operandName = \"==\";\r\n                    }\r\n                    var filter = {};\r\n                    var field = {}\r\n                    field[operandName] = termName;\r\n                    filter[fieldName] = field;\r\n                    predicate.and.push(filter);\r\n                }\r\n            });\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.sortChanged = function (sortColumns) {\r\n            sort.length = 0;\r\n            $scope.data = [];\r\n            $scope.Page = 0;\r\n            if (sortColumns.length > 0) {\r\n                angular.forEach(sortColumns, function (column) {\r\n                    if (column.sort.direction == uiGridConstants.DESC) {\r\n                        sort.push(column.field + \" desc\");\r\n                    }\r\n                    else {\r\n                        sort.push(column.field + \" asc\");\r\n                    }                   \r\n                });\r\n            }\r\n            else {\r\n                sort = [\"RowOrder asc\"];\r\n            }\r\n\r\n            $scope.Search();\r\n        };\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function (count) {\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocationproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        //TODO: Reorder button.  Don't do on drop.  \r\n        $scope.Reorder = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            //reorder\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                var row = $scope.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        $scope.ReorderAll = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            var promise = {}, promises = [];\r\n            angular.forEach($scope.data, function (item, index) {\r\n                var predicate = {\r\n                    and: [\r\n                        { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                        { \"ProductId\": { \"==\": item.ProductId } },\r\n                        { \"QuestionId\": { \"==\": item.QuestionId } }\r\n                    ]\r\n                }\r\n                promise = SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    for (var j = 0; j < data.Results.length; j++) {\r\n                        var row = data.Results[j];\r\n                        row.RowOrder = index;\r\n                        SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n\r\n                        });\r\n                    }\r\n                });\r\n                promises.push(promise);\r\n                $q.all(promises).then(function () {\r\n                    $scope.Search();\r\n                })\r\n            });\r\n        }\r\n\r\n        $scope.ValidateForOrdering = function () {\r\n            var customer = $scope.data[0].CustomerId;\r\n            var location = $scope.data[0].LocationId;\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                if (customer != $scope.data[i].CustomerId) {\r\n                    toastr.error(\"The grouping does not contain just one customer.  Please filter down to just one customer first before ordering.\");\r\n                    return false;\r\n                }\r\n                if (location != $scope.data[i].LocationId) {\r\n                    toastr.error(\"The grouping does not contain just one location.  Please filter down to just one location first before ordering.\");\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion2.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion2/Views/SurveyCustomerLocationProductQuestionAddEdit2.html\",\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionAddEditController2', ['$scope', '$state', '$resource', '$stateParams', '$routeParams',\r\n    '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'CustomerService', 'LocationService', 'ProductService', 'QuestionService', 'SelectionApplicationService', 'blockUIConfig',\r\n    function controller($scope, $state, $resource, $stateParams, $routeParams,\r\n        $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        CustomerService, LocationService, ProductService, QuestionService, SelectionApplicationService, blockUIConfig) {\r\n        \r\n        $scope.Init = function () {\r\n            blockUIConfig.autoBlock = true;\r\n            $scope.BuildSurveyViewModel = {\r\n                Customers: [],\r\n                Locations: [],\r\n                Products: [],\r\n                Questions: [],\r\n                PopulateExisting: false,\r\n                SurveyId: SelectionApplicationService.GetSurveyId(),\r\n                CompanyId: SelectionApplicationService.GetCompanyId()\r\n            }\r\n        }\r\n        $scope.Init();\r\n\r\n        $scope.Search = function () { \r\n            $scope.SearchCustomer();\r\n            $scope.SearchLocation();\r\n            $scope.SearchProduct();\r\n            $scope.SearchQuestion();\r\n        }\r\n            \r\n        var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n        $scope.SearchCustomer = function () {\r\n            CustomerService.Search(predicate, [\"Created asc\"], 0, 1000, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n\r\n        $scope.SearchLocation = function () {\r\n            LocationService.Search(predicate, [\"Created asc\"], 0, 1000, false).then(function (data) { \r\n                $scope.Locations = data;\r\n            });\r\n        }\r\n\r\n        $scope.SearchProduct = function () {\r\n            ProductService.Search(predicate, [\"Created asc\"], 0, 1000, false).then(function (data) {\r\n                $scope.Products = data;\r\n            });\r\n        }\r\n\r\n        $scope.SearchQuestion = function () {\r\n            QuestionService.Search(predicate, [\"Created asc\"], 0, 1000, false).then(function (data) {\r\n                $scope.Questions = data;\r\n            });\r\n        }\r\n\r\n        $scope.AddCustomer = function (item) {\r\n            delete item.$id; delete item.$$hashKey; delete item.$type;\r\n            $scope.BuildSurveyViewModel.Customers.push(item);\r\n            $scope.Customers.splice($scope.Customers.indexOf(item), 1);\r\n        }\r\n        $scope.AddLocation = function (item) {\r\n            delete item.$id; delete item.$$hashKey; delete item.$type;\r\n            $scope.BuildSurveyViewModel.Locations.push(item);\r\n            $scope.Locations.splice($scope.Locations.indexOf(item), 1);\r\n        }\r\n        $scope.AddProduct = function (item) {\r\n            delete item.$id; delete item.$$hashKey; delete item.$type;\r\n            $scope.BuildSurveyViewModel.Products.push(item);\r\n            $scope.Products.splice($scope.Products.indexOf(item), 1);\r\n        }\r\n        $scope.AddQuestion = function (item) {\r\n            delete item.$id; delete item.$$hashKey; delete item.$type;\r\n            $scope.BuildSurveyViewModel.Questions.push(item);\r\n            $scope.Questions.splice($scope.Questions.indexOf(item), 1);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            $http.post('/breeze/BuildSurveyApi/Create', $scope.BuildSurveyViewModel).then(function () {\r\n                toastr.success(\"Save successful\");\r\n                $scope.Init();\r\n                $scope.$parent.Search();\r\n            }, function () {\r\n                toastr.error(\"There was an error\");\r\n            });\r\n        }\r\n\r\n        $scope.Search();\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion2', {\r\n            url: \"/survey/customerlocationproductquestion2\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion2/Views/SurveyCustomerLocationProductQuestion2.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionController2', ['$scope', '$state', '$routeParams', 'uiGridConstants',\r\n        '$http', '$q', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, uiGridConstants,\r\n    $http, $q, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Page = 0;\r\n        var predicate = {\r\n            and: [\r\n                { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            ]\r\n        }\r\n        var sort = [\"RowOrder asc\"];\r\n        $scope.Search = function () {\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, sort, 0, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, data.InlineCount);\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            useExternalSorting: true,\r\n            useExternalFiltering: true,\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: 'data',\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/Delete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    //$scope.Reorder();\r\n                });\r\n                gridApi.core.on.filterChanged($scope, function (column) {\r\n                    var grid = this.grid;\r\n                    if (angular.isDefined($scope.filterTimeout)) {\r\n                        $timeout.cancel($scope.filterTimeout);\r\n                    }\r\n                    $scope.filterTimeout = $timeout(function () {\r\n                        $scope.filterChanged(grid.columns);\r\n                    }, 1000);\r\n                });\r\n\r\n                gridApi.core.on.sortChanged($scope, function (grid, sortColumns) {\r\n                    $scope.sortChanged(sortColumns);\r\n                });\r\n\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.filterChanged = function (gridColumns) {\r\n            var equalsColumns = [\"RowOrder\"];\r\n            predicate.and.length = 1;\r\n            $scope.data = [];\r\n            $scope.Page = 0;\r\n            angular.forEach(gridColumns, function (column) {\r\n                if (typeof column.filters !== 'undefined' && column.filters !== null &&\r\n                        column.filters.length > 0 && column.filters[0].term != null && column.filters[0].term.trim().length > 0) {\r\n\r\n                    var operandName = \"contains\"; var fieldName = column.field; var termName = column.filters[0].term;\r\n                    if (equalsColumns.indexOf(column.field) != -1) {\r\n                        operandName = \"==\";\r\n                    }\r\n                    var filter = {};\r\n                    var field = {}\r\n                    field[operandName] = termName;\r\n                    filter[fieldName] = field;\r\n                    predicate.and.push(filter);\r\n                }\r\n            });\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.sortChanged = function (sortColumns) {\r\n            sort.length = 0;\r\n            $scope.data = [];\r\n            $scope.Page = 0;\r\n            if (sortColumns.length > 0) {\r\n                angular.forEach(sortColumns, function (column) {\r\n                    if (column.sort.direction == uiGridConstants.DESC) {\r\n                        sort.push(column.field + \" desc\");\r\n                    }\r\n                    else {\r\n                        sort.push(column.field + \" asc\");\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                sort = [\"RowOrder asc\"];\r\n            }\r\n\r\n            $scope.Search();\r\n        };\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function (count) {\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocationproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        //TODO: Reorder button.  Don't do on drop.  \r\n        $scope.Reorder = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            //reorder\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                var row = $scope.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        $scope.ReorderAll = function () {\r\n            //validate\r\n            if (!$scope.ValidateForOrdering()) {\r\n                return;\r\n            }\r\n            var promise = {}, promises = [];\r\n            angular.forEach($scope.data, function (item, index) {\r\n                var predicate = {\r\n                    and: [\r\n                        { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                        { \"ProductId\": { \"==\": item.ProductId } },\r\n                        { \"QuestionId\": { \"==\": item.QuestionId } }\r\n                    ]\r\n                }\r\n                promise = SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    for (var j = 0; j < data.Results.length; j++) {\r\n                        var row = data.Results[j];\r\n                        row.RowOrder = index;\r\n                        SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n\r\n                        });\r\n                    }\r\n                });\r\n                promises.push(promise);\r\n                $q.all(promises).then(function () {\r\n                    $scope.Search();\r\n                })\r\n            });\r\n        }\r\n\r\n        $scope.ValidateForOrdering = function () {\r\n            var customer = $scope.data[0].CustomerId;\r\n            var location = $scope.data[0].LocationId;\r\n            for (var i = 0; i < $scope.data.length; i++) {\r\n                if (customer != $scope.data[i].CustomerId) {\r\n                    toastr.error(\"The grouping does not contain just one customer.  Please filter down to just one customer first before ordering.\");\r\n                    return false;\r\n                }\r\n                if (location != $scope.data[i].LocationId) {\r\n                    toastr.error(\"The grouping does not contain just one location.  Please filter down to just one location first before ordering.\");\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name != \"Customer\") {\r\n                $scope.item.Customer = null;\r\n            }\r\n\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\n    \"use strict\";    \n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\n        $scope.Search = function () {\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\n                $scope.gridOptions.data = data;\n            });\n        }\n        $scope.gridOptions = {\n            enableFiltering: true,\n            enableSorting: true,\n            data: [],\n            columnDefs: [\n                { name: 'Manage', width: '120',  cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\n            ]\n        };\n        $scope.Search();\n\n        $scope.Delete = function (Id) {\n            UserRoleService.Delete(Id).then(function (data) {\n                $scope.Search();\n            }, function (error) {\n                toastr.error(error.data, error.statusText);\n            });\n        }\n    }]);\n\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcompany', {\r\n            url: \"/selectcompany/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCompany/SelectCompany.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCompanyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'blockUIConfig',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze, blockUIConfig,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SelectionApplicationService) {\r\n\r\n        blockUIConfig.Message = 'Loading...';\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCompany(item);\r\n            SelectionApplicationService.SetCompanyId(item.Id);\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcustomer', {\r\n            url: \"/selectcustomer/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCustomer/SelectCustomer.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCustomerController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SelectionApplicationService) {\r\n\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Customer = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCustomer(item);\r\n            SelectionApplicationService.SetCustomerId(item.Id);\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectlocation', {\r\n            url: \"/selectlocation/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectLocation/SelectLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'blockUIConfig',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectLocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze, blockUIConfig,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectLocationService) {\r\n\r\n        blockUIConfig.autoBlock = false;\r\n        $scope.LocationServicesDisabled = false;\r\n        $scope.Location = [];\r\n        $scope.predicate = {\r\n            and: [\r\n               { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ]\r\n        }\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                $scope.predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },                       \r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"Latitude\": { '>=': $scope.Latitude - .0725 } },\r\n                       { \"Latitude\": { '<=': $scope.Latitude + .0725 } },\r\n                       { \"Longitude\": { '>=': $scope.Longitude - .0725 } },\r\n                       { \"Longitude\": { '<=': $scope.Longitude + .0725 } }\r\n                    ]\r\n                }\r\n                SelectLocationService.Search($scope.predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            else {\r\n                LocationService.Search($scope.predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go('main.selectsurvey');\r\n                    }\r\n                    if (data.length < 1) {\r\n                        $scope.LocationServicesDisabled = true;\r\n                    }\r\n                    else if (data.length == 1) {\r\n                        $scope.Select(data[0]);\r\n                    }\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            \r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Latitude = position.coords.latitude;\r\n            $scope.Longitude = position.coords.longitude;\r\n            $scope.Search();\r\n        }, function (error) {\r\n            if (error.message != null) {\r\n                toastr.error(error.message);\r\n            }\r\n            else {\r\n                toastr.error(\"User has denied geolocation for this site.  Please allow location services to get your location to find locations near you.\");\r\n            }\r\n            $scope.LocationServicesDisabled = true;\r\n        });\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.Latitude = item.geometry.location.lat;\r\n            $scope.Longitude = item.geometry.location.lng;\r\n            $scope.LocationServicesDisabled = false;\r\n            if (SelectionApplicationService.GetRedirectState() != 'main.survey') {\r\n                $scope.predicate.and = [];\r\n                $scope.predicate.and.push({ \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } });\r\n                $scope.predicate.and.push({ \"Latitude\": { '>=': $scope.Latitude - .0725 } });\r\n                $scope.predicate.and.push({ \"Latitude\": { '<=': $scope.Latitude + .0725 } });\r\n                $scope.predicate.and.push({ \"Longitude\": { '>=': $scope.Longitude - .0725 } });\r\n                $scope.predicate.and.push({ \"Longitude\": { '<=': $scope.Longitude + .0725 } });\r\n            }\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetLocation(item);\r\n            SelectionApplicationService.SetLocationId(item.Id);\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectsurvey', {\r\n            url: \"/selectsurvey/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectSurvey/SelectSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectSurveyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectSurveyService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectSurveyService) {\r\n        \r\n        $scope.Survey = [];\r\n        $scope.Search = function () {\r\n            if(SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SelectSurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                    ]\r\n                }\r\n                SurveyService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go(SelectionApplicationService.GetRedirectState());\r\n                    }\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SurveyService.Get(item.Id).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                $state.go(SelectionApplicationService.GetRedirectState());\r\n            });\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go(SelectionApplicationService.GetRedirectState());\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'blockUIConfig',\r\n        'UserService', 'SurveyCustomerLocationProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService', 'SelectCustomerLocationProductQuestionService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, blockUIConfig,\r\n        UserService, SurveyCustomerLocationProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService,\r\n        SelectionApplicationService, SelectCustomerLocationProductQuestionService) {\r\n        \r\n        blockUIConfig.autoBlock = true;\r\n        blockUIConfig.message = 'Saving...';\r\n\r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n        $scope.previousElementId = \"input0\";\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.IsAdministrator = false;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Survey = data.Results[0].Survey;\r\n                    $scope.Header = data.Results[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SelectCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data.Results[0].Survey;\r\n                    $scope.Header.Address = data.Results[0].Location.Address;\r\n                    $scope.Header.AreaManager = data.Results[0].Location.AreaManager;\r\n                    $scope.Header.City = data.Results[0].Location.City;\r\n                    $scope.Header.State = data.Results[0].Location.State;\r\n                    $scope.Header.Zip = data.Results[0].Location.Zip;\r\n                    $scope.Header.Phone = data.Results[0].Location.Phone;\r\n                    $scope.Header.LocationName = data.Results[0].Location.Name;\r\n                    $scope.Header.CustomerName = data.Results[0].Customer.Name;\r\n                    $scope.Detail = data.Results;\r\n                });\r\n            }\r\n\r\n            UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                $scope.IsAdministrator = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.sort = {\r\n            column: ['RowOrder', 'Product.Name'],\r\n            descending: false\r\n        };\r\n        $scope.changeSorting = function (column) {\r\n            var sort = $scope.sort;\r\n\r\n            if (sort.column[0] == column) {\r\n                sort.descending = !sort.descending;\r\n            } else {\r\n                sort.column[0] = column;\r\n                sort.descending = false;\r\n            }\r\n        };\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(error);\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        ProductTypeDetailId: value.ProductTypeDetail != null ? value.ProductTypeDetail.Id : null,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        blockUIConfig.Message = 'Loading...';\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        SelectionApplicationService.SetRedirectState('main.survey');\r\n                        $state.go('main.selectcompany');\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(error);\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null ) {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsBeforeImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsAfterImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.OnBlur = function (event) {\r\n            if (event.currentTarget.id.includes(\"input\")) {\r\n                $scope.previousElementId = event.currentTarget.id;\r\n            }\r\n        }\r\n\r\n        $scope.NextInput = function () {\r\n            var index = Number(parseInt($scope.previousElementId.substring(5, 7))) + Number(1);\r\n            document.getElementById('input' + index).focus();\r\n        }\r\n\r\n        $scope.PrevInput = function () {\r\n            var index = Number(parseInt($scope.previousElementId.substring(5, 7))) - Number(1);\r\n            document.getElementById('input' + index).focus();\r\n        }\r\n\r\n        $timeout(function () {\r\n            var element = document.getElementById('input0');\r\n            if (element != null) {\r\n                element.focus();\r\n            }\r\n        }, 500);\r\n        \r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report', {\r\n            url: \"/report\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        $scope.SelectedCustomer = SelectionApplicationService.GetCustomer();\r\n        $scope.SelectedLocation = SelectionApplicationService.GetLocation();\r\n        $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        $scope.SelectedSurveyHeaderId = SelectionApplicationService.GetSurveyHeaderId();\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedSurveyHeaderId = SelectionApplicationService.GetSurveyHeaderId();\r\n        })\r\n\r\n        $scope.ClearSelectedSurveyHeaderId = function () {\r\n            $scope.SelectedSurveyHeaderId = null;\r\n            SelectionApplicationService.SetSurveyHeaderId(null);\r\n            $state.go('main.report.surveyheaderreport');\r\n        }\r\n    }]);\r\n\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService', 'uiGridConstants',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService, uiGridConstants) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate();\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), SelectionApplicationService.GetSurveyHeaderId(), SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {                    \r\n                    $scope.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, \r\n                                cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Images/Notes', width: 65,  cellTooltip: true, headerTooltip: true, \r\n                        cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', width: 125, cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', width: 125, cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', width: 125, cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductTypeDetailName', name: 'Product Type Name', width: 125, cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', width: 125, cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true, width: 100, headerTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, width: 125, headerTooltip: true,\r\n                        cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error getting all the data.\");\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.data = $scope.data.concat(data);\r\n                    $scope.gridApi.infiniteScroll.dataLoaded(false, true);\r\n                });\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            enableHorizontalScrollbar: uiGridConstants.scrollbars.WHEN_NEEDED,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: 'data',\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.data[index].Id == id) {\r\n                        $scope.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n        $scope.DownloadSurveyData = function () {\r\n            window.open('/DownloadApi/DownloadSurveyData' +\r\n                '?companyId=' + SelectionApplicationService.GetCompanyId() +\r\n                '&surveyHeaderId=' + SelectionApplicationService.GetSurveyHeaderId() +\r\n                '&customerId=' + SelectionApplicationService.GetCustomerId() +\r\n                '&locationId=' + SelectionApplicationService.GetLocationId() +\r\n                '&productId=null' +\r\n                '&surveyId=' + SelectionApplicationService.GetSurveyId() +\r\n                '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') +\r\n                '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n\r\n        $scope.DownloadNoteData = function () {\r\n            window.open('/DownloadApi/DownloadNoteData' +\r\n                '?companyId=' + SelectionApplicationService.GetCompanyId() +\r\n                '&surveyHeaderId=' + SelectionApplicationService.GetSurveyHeaderId() +\r\n                '&customerId=' + SelectionApplicationService.GetCustomerId() +\r\n                '&locationId=' + SelectionApplicationService.GetLocationId() +\r\n                '&productId=null' +\r\n                '&surveyId=' + SelectionApplicationService.GetSurveyId() +\r\n                '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') +\r\n                '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyheaderreport', {\r\n            url: \"/surveyheaderreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/SurveyHeader/SurveyHeaderReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyHeaderReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService', 'uiGridConstants',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService, uiGridConstants) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate();\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\" : moment($scope.StartDate).format('YYYY-MM-DD')}},\r\n                   { \"Created\": { \"<=\" : moment($scope.EndDate).format('YYYY-MM-DD')}}\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } },\r\n                   { \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function(count){\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 50,\r\n            enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,\r\n            data: 'data',\r\n            columnDefs: [\r\n                {\r\n                    name: 'Detail', width: 65, cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<button class=\"btn btn-primary btn-sm\" ng-click=\"grid.appScope.ViewDetail(row.entity)\">Detail</button>'\r\n                },\r\n                { name: 'Images/Notes', width: 65, cellTooltip: true, headerTooltip: true, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html' },\r\n                { field: 'Survey.Name', name: 'Survey Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'IsReviewed', name: 'Reviewed', cellTooltip: true, headerTooltip: true },\r\n                {\r\n                    name: 'Created', cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                //gridApi.options.loadTimeout = true;\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.ViewDetail = function (item) {\r\n            SelectionApplicationService.SetSurveyHeaderId(item.Id);\r\n            $state.go('main.report.surveyreport')\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'SurveyHeaderService', 'SelectUserService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, SurveyHeaderService, SelectUserService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.User = null;\r\n        \r\n        $scope.StartDate = SelectionApplicationService.GetStartDate();\r\n        $scope.EndDate = SelectionApplicationService.GetEndDate();\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            SelectionApplicationService.SetStartDate($scope.StartDate);\r\n            SelectionApplicationService.SetEndDate($scope.EndDate);\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.Search();\r\n        }\r\n        var predicate = {\r\n            and: [\r\n                { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ]\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            predicate.and.length = 1;\r\n            predicate.and.push({ \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } });\r\n            predicate.and.push({ \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } });\r\n            if ($scope.User != null && $scope.User.Id != null) { predicate.and.push({ \"CreatedBy\": { \"==\": $scope.User.Id } }) }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n\r\n        $scope.SearchUsers = function(){\r\n            var predicateUser = {\r\n                and: [\r\n                    { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            SelectUserService.Search(predicateUser, [\"LastName asc\"], 0, 100, false).then(function (data) {\r\n                $scope.users = data.Results;\r\n            })\r\n        }\r\n\r\n        $timeout(\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        }), 1000);\r\n        $scope.Search();\r\n        $scope.SearchUsers();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\n    $scope.image = image;\n    $scope.title = title;\n\n    $scope.ok = function () {\n        $uibModalInstance.close();\n    };\n\n    $scope.cancel = function () {\n        $uibModalInstance.dismiss('cancel');\n    };\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\n    $scope.note = note;\n\n    $scope.ok = function () {\n        $uibModalInstance.close();\n    };\n\n    $scope.cancel = function () {\n        $uibModalInstance.dismiss('cancel');\n    };\n});"],"sourceRoot":"/source/"}