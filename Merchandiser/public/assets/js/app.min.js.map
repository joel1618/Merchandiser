{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","CompanyUser/CompanyUserService.js","Company/CompanyService.js","Customer/CustomerService.js","Download/DownloadService.js","Image/ImageService.js","Location/LocationService.js","Product/ProductService.js","ProductCategory/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","SelectLocation/SelectLocation.js","SelectSurvey/SelectSurvey.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyCustomerLocationProductQuestion/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","User/UserService.js","UserRole/UserRoleService.js","Directives.js","AffixResizer.js","AfterImage.js","BeforeImage.js","App.js","MainController.js","AdminController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","ProductCategory/Controllers/ProductCategoryAddEditController.js","ProductCategory/Controllers/ProductCategoryController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionAddEditController.js","SurveyCustomerLocationProductQuestion/Controllers/SurveyCustomerLocationProductQuestionController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","SelectCompany/SelectCompanyController.js","SelectCustomer/SelectCustomerController.js","SelectLocation/SelectLocationController.js","SelectSurvey/SelectSurveyController.js","Survey/MerchandiseSurveyController.js","ReportController.js","SurveyReportController.js","SurveyHeaderReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","RedirectState","GetRedirectState","SetRedirectState","state","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Role","GetRole","SetRole","role","Clear","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","skip","take","resolve","httpResponse","msg","code","promise","Get","method","url","success","status","headers","config","error","Create","post","response","length","Update","put","Delete","delete","order","orderBy","AdminSearch","SelectionApplicationService","parameters","companyId","DownloadSurveyData","DownloadNoteData","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","statusText","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","Message","inlineCount","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","directive","$window","restrict","link","scope","elem","attrs","element","on","innerWidth","addClass","removeClass","$scope","reader","FileReader","onload","AfterImage","target","result","$apply","Header","IsAfterImage","files","readAsDataURL","BeforeImage","IsBeforeImage","blockUIConfig","delay","filter","utcDate","dt","Date","getTime","$stateProvider","$urlRouterProvider","otherwise","templateUrl","run","$rootScope","$state","UserService","go","moment","controller","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","Route","toastr","$stateParams","$routeParams","$location","CustomerService","Init","focus","Save","index","$parent","gridOptions","indexOf","splice","items","enableFiltering","enableSorting","columnDefs","width","cellTemplate","field","cellTooltip","Edit","row","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","ProductCategoryService","SearchProductCategories","substringof","SelectProductCategory","ProductCategoryId","QuestionService","SurveyService","Select","SurveyCustomerLocationService","SearchCustomers","SelectCustomer","SearchLocations","SelectLocation","SurveyCustomerLocationProductQuestionService","Question","Product","ProductId","itemCopy","SelectCustomerCopy","SelectLocationCopy","SearchProducts","SelectProduct","ProductName","SelectProductCopy","SearchQuestions","SelectQuestion","QuestionId","Copy","i","Results","RowOrder","rowOrder","SurveyProductQuestionService","promises","copyItem","showGridFooter","onRegisterApi","gridApi","draggableRows","rowDropped","info","dropTarget","core","filterChanged","column","grid","columns","infiniteScroll","needLoadMoreData","GetDataDown","rowTemplate","gridColumns","filters","term","trim","operandName","fieldName","termName","Page","saveScrollPercentage","concat","dataLoaded","isMoreData","InlineCount","count","Reorder","ValidateForOrder","ReorderAll","j","customer","SelectCopyProduct","CopyQuestion","Product.Id","scrollTo","Roles","Customers","Validate","Predicate","CompanyService","Continue","IsContinueShown","SelectLocationService","LocationServicesDisabled",">=","<=","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","SelectSurveyService","SurveyHeaderService","SurveyDetailService","ImageService","Notes","Detail","sort","descending","changeSorting","details","Answer","Details","fileSizeBeforeImage","fileSizeAfterImage","size","alert","SelectedCustomer","SelectedLocation","$uibModal","ReportService","DownloadService","StartDate","format","startOf","EndDate","add","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","PageSize","headerTooltip","exclude","keys","obj","includes","enableGridMenu","infiniteScrollRowsFromEnd","ViewNote","modalInstance","open","animation","note","ViewImage","title","Company.Id","Created","ViewDetail","NgMap","SelectedPosition","Customer.Id","Location.Id","Survey.Id","getMap","SelectPosition","panTo","SelectMarker","event","marker","$uibModalInstance","ok","close","cancel","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.RedirectState = null;\r\n    this.GetRedirectState = function () {\r\n        return this.RedirectState;\r\n    }\r\n\r\n    this.SetRedirectState = function (state) {\r\n        this.RedirectState = state;\r\n    }\r\n\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Company = null;\r\n    this.GetCompany = function () {\r\n        return this.Company;\r\n    };\r\n\r\n    this.SetCompany = function (item) {\r\n        this.Company = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Customer = null;\r\n    this.GetCustomer = function () {\r\n        return this.Customer;\r\n    };\r\n\r\n    this.SetCustomer = function (item) {\r\n        this.Customer = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Location = null;\r\n    this.GetLocation = function () {\r\n        return this.Location;\r\n    };\r\n\r\n    this.SetLocation = function (item) {\r\n        this.Location = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Survey = null;\r\n    this.GetSurvey = function () {\r\n        return this.Survey;\r\n    };\r\n\r\n    this.SetSurvey = function (item) {\r\n        this.Survey = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Role = null;\r\n    this.GetRole = function () {\r\n        return this.Role;\r\n    }\r\n\r\n    this.SetRole = function (role) {\r\n        this.Role = role;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.RedirectState = null;\r\n\r\n        this.CompanyId = null;\r\n        this.Company = null;\r\n\r\n        this.CustomerId = null;\r\n        this.Customer = null;\r\n\r\n        this.LocationId = null;\r\n        this.Location = null;\r\n\r\n        this.SurveyId = null;\r\n        this.Survey = null;\r\n\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"LocationApi/Search\", \"LocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        meta.setEntityTypeForResourceName(\"ProductCategoryApi/Search\", \"ProductCategoryViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyHeaderApi/Search\", \"SurveyHeaderViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.ProductCategoryViewModel\\\",\\\"Merchandiser.Models.ProductCategoryViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyHeaderViewModel\\\",\\\"Merchandiser.Models.SurveyHeaderViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"],[\\\"Merchandiser.UserInfoViewModel\\\",\\\"Merchandiser.Models.UserInfoViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsSendReport\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"SendReport\",\"type\":\"Edm.DateTime\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CustomerName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LocationName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"SurveyName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"ProductCategoryViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductCategoryViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsNoteRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsEdit\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsEditDays\",\"type\":\"Edm.Int32\"},{\"name\":\"IsDelete\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsDeleteDays\",\"type\":\"Edm.Int32\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyHeaderViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyHeaderViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"IsBeforeImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsAfterImage\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modified\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Notes\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.SurveyHeaderViewModel_Company\",\"fromRole\":\"SurveyHeaderViewModel_Company_Source\",\"toRole\":\"SurveyHeaderViewModel_Company_Target\"},{\"name\":\"CreatedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"fromRole\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_CreatedUser_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.SurveyHeaderViewModel_Customer\",\"fromRole\":\"SurveyHeaderViewModel_Customer_Source\",\"toRole\":\"SurveyHeaderViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyHeaderViewModel_Location\",\"fromRole\":\"SurveyHeaderViewModel_Location_Source\",\"toRole\":\"SurveyHeaderViewModel_Location_Target\"},{\"name\":\"ModifiedUser\",\"relationship\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"fromRole\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"toRole\":\"SurveyHeaderViewModel_ModifiedUser_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyHeaderViewModel_Survey\",\"fromRole\":\"SurveyHeaderViewModel_Survey_Source\",\"toRole\":\"SurveyHeaderViewModel_Survey_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.SurveyHeaderViewModel_UserInfo\",\"fromRole\":\"SurveyHeaderViewModel_UserInfo_Source\",\"toRole\":\"SurveyHeaderViewModel_UserInfo_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserInfoViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserInfoViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RowOrder\",\"type\":\"Edm.Int32\",\"nullable\":\"false\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Survey\",\"fromRole\":\"SurveyProductQuestionViewModel_Survey_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Survey_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductCategoryId\",\"type\":\"Edm.Guid\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":{\"name\":\"ProductCategory\",\"relationship\":\"Self.ProductViewModel_ProductCategory\",\"fromRole\":\"ProductViewModel_ProductCategory_Source\",\"toRole\":\"ProductViewModel_ProductCategory_Target\"}},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"IsRequired\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"IsTrueFalse\",\"type\":\"Edm.Boolean\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"},{\"name\":\"UserInfo\",\"relationship\":\"Self.UserRoleViewModel_UserInfo\",\"fromRole\":\"UserRoleViewModel_UserInfo_Source\",\"toRole\":\"UserRoleViewModel_UserInfo_Target\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"type\":\"Edm.Self.SurveyHeaderViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]},{\"name\":\"ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"*\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"type\":\"Edm.Self.ProductCategoryViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"ProductViewModel_ProductCategory_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"ProductViewModel_ProductCategory_Source\",\"propertyRef\":{\"name\":\"ProductCategoryId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}},{\"name\":\"UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"type\":\"Edm.Self.UserInfoViewModel\",\"multiplicity\":\"0..1\"}]}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"ProductCategoryViewModel\",\"entityType\":\"Self.ProductCategoryViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyHeaderViewModel\",\"entityType\":\"Self.SurveyHeaderViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"},{\"name\":\"UserInfoViewModels\",\"entityType\":\"Self.UserInfoViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Company\",\"association\":\"Self.SurveyHeaderViewModel_Company\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Company_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_CreatedUser\",\"association\":\"Self.SurveyHeaderViewModel_CreatedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_CreatedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_CreatedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Customer\",\"association\":\"Self.SurveyHeaderViewModel_Customer\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Customer_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyHeaderViewModel_Location\",\"association\":\"Self.SurveyHeaderViewModel_Location\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Location_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_ModifiedUser\",\"association\":\"Self.SurveyHeaderViewModel_ModifiedUser\",\"end\":[{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_ModifiedUser_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_Survey\",\"association\":\"Self.SurveyHeaderViewModel_Survey\",\"end\":[{\"role\":\"SurveyHeaderViewModel_Survey_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyHeaderViewModel_UserInfo\",\"association\":\"Self.SurveyHeaderViewModel_UserInfo\",\"end\":[{\"role\":\"SurveyHeaderViewModel_UserInfo_Source\",\"entitySet\":\"SurveyHeaderViewModel\"},{\"role\":\"SurveyHeaderViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]},{\"name\":\"ProductViewModel_ProductCategory\",\"association\":\"Self.ProductViewModel_ProductCategory\",\"end\":[{\"role\":\"ProductViewModel_ProductCategory_Source\",\"entitySet\":\"ProductViewModels\"},{\"role\":\"ProductViewModel_ProductCategory_Target\",\"entitySet\":\"ProductCategoryViewModel\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Survey\",\"association\":\"Self.SurveyProductQuestionViewModel_Survey\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Survey_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]},{\"name\":\"UserRoleViewModel_UserInfo\",\"association\":\"Self.UserRoleViewModel_UserInfo\",\"end\":[{\"role\":\"UserRoleViewModel_UserInfo_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_UserInfo_Target\",\"entitySet\":\"UserInfoViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.DownloadSurveyData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadSurveyData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DownloadNoteData = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/DownloadNoteData/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.data.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.data.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductCategoryService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductCategoryApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductCategoryApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductCategoryApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductCategoryApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductCategoryApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectLocation', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectLocationApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SelectSurvey', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SelectSurveyApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.Message.length > 0) {\r\n                    deferred.reject(response.data.Message);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                inlineCount: true\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    inlineCount: true,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                inlineCount: true\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.data.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.data.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Directives',[]);\r\n","var app = angular.module('Directives');\r\n\r\napp.directive('affixResizer', ['$window', '$timeout', function ($window, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attrs) {\r\n\r\n            angular.element($window).on('resize', function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n\r\n            $timeout(function () {\r\n                if ($window.innerWidth > 992) {\r\n                    elem.addClass('affix');\r\n                }\r\n                else {\r\n                    elem.removeClass('affix');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\r\nvar app = angular.module('Directives');\r\n\r\napp.directive('afterImage', [function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function ($scope, elem, attrs) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function (e) {\r\n                $scope.AfterImage = e.target.result;\r\n                $scope.$apply();\r\n            }\r\n\r\n            elem.on('change', function () {\r\n                $scope.Header.IsAfterImage = true;\r\n                $scope.Header.AfterImage = elem[0].files[0];\r\n                reader.readAsDataURL(elem[0].files[0]);\r\n            });\r\n        }\r\n    }\r\n}]);","//http://stackoverflow.com/questions/19986178/displaying-an-image-after-uploading-in-angular-js\r\nvar app = angular.module('Directives');\r\n\r\napp.directive('beforeImage', [function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function ($scope, elem, attrs) {\r\n            var reader = new FileReader();\r\n            \r\n            reader.onload = function (e) {\r\n                $scope.BeforeImage = e.target.result;\r\n                $scope.$apply();\r\n            }\r\n\r\n            elem.on('change', function () {\r\n                $scope.Header.IsBeforeImage = true;\r\n                $scope.Header.BeforeImage = elem[0].files[0];\r\n                reader.readAsDataURL(elem[0].files[0]);\r\n            });\r\n        }\r\n    }\r\n}]);","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.draggable-rows', 'ui.grid.infiniteScroll', 'ui.grid.cellNav', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMessages', 'ngMaterial', 'focus-if', 'mgcrea.bootstrap.affix', 'Directives', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\napp.filter('dateLocalize', function () {\r\n    return function (utcDate) {\r\n    var dt = new Date(utcDate + 'Z').getTime();\r\n    return dt;\r\n    }\r\n});\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Administrator\");\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Data Entry\");\r\n                SelectionApplicationService.SetRedirectState('main.survey');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                SelectionApplicationService.SetRole(\"Customer\");\r\n                SelectionApplicationService.SetRedirectState('main.report.surveyheaderreport');\r\n                $state.go('main.selectcompany');\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                SelectionApplicationService.Clear();\r\n                \r\n            SelectionApplicationService.SetRedirectState(state);\r\n                $state.go('main.selectcompany');\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.Role = SelectionApplicationService.GetRole();\r\n        })\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocationproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\r\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http,\r\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ProductService', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ProductService, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProductCategories = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProductCategory = function (item, model, label) {\r\n            $scope.item.ProductCategoryId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'ProductCategory.Name', name: 'Category Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategoryAddEdit.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductCategoryService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductCategoryService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                ProductCategoryService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.productcategory', {\r\n            url: \"/productcategory\",\r\n            templateUrl: \"ApplicationComponents/Administrator/ProductCategory/Views/ProductCategory.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ProductCategoryController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductCategoryService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductCategoryService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductCategoryService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.productcategory.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductCategoryService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" };\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Name', cellTooltip: true },\r\n                { field: 'IsRequired', name: 'Required', cellTooltip: true},\r\n                { field: 'IsTrueFalse', name: 'True False', cellTooltip: true}\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            else {\r\n                $scope.Init();\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestionAddEdit.html\",\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams',\r\n    '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams,\r\n        $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = {\r\n                Question: { Name: null },\r\n                Location: { Name: null },\r\n                Customer: { Name: null },\r\n                Product: { Name: null },\r\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\r\n            $scope.itemCopy = {\r\n                Question: { Name: null },\r\n                Location: { Name: null },\r\n                Customer: { Name: null },\r\n                Product: { Name: null },\r\n                Id: null, CustomerId: null, LocationId: null, ProductId: null\r\n            }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SelectCustomerCopy = function (item, model, label) {\r\n            $scope.itemCopy.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.SelectLocationCopy = function (item, model, label) {\r\n            $scope.itemCopy.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n            $scope.item.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SelectProductCopy = function (item, model, label) {\r\n            $scope.itemCopy.ProductId = item.Id;\r\n            $scope.itemCopy.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.item.QuestionId = null; $scope.item.Question.Name = null;\r\n                    //$scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Copy = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } },\r\n                   { \"SurveyId\": { '==': SelectionApplicationService.GetSurveyId() } },\r\n                   { \"CustomerId\": { '==': $scope.item.CustomerId } }\r\n                ]\r\n            }\r\n            if ($scope.item.LocationId != null) { predicate.and.push({ \"LocationId\": { '==': $scope.item.LocationId } }) }\r\n            if ($scope.item.ProductId != null) { predicate.and.push({ \"ProductId\": { '==': $scope.item.ProductId } }) }\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                for (var i = 0; i < data.Results.length; i++) {\r\n                    var item = {\r\n                        CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                        SurveyId: SelectionApplicationService.GetSurveyId(),\r\n                        RowOrder: data.Results[i].rowOrder,\r\n                        CustomerId: $scope.itemCopy.CustomerId,\r\n                        LocationId: $scope.itemCopy.LocationId,\r\n                        ProductId: $scope.itemCopy.ProductId,\r\n                        QuestionId: data.Results[i].Question.Id,\r\n                    }\r\n                    if ($scope.itemCopy.LocationId == null) {\r\n                        data.Results[i].Location.Id;\r\n                    }\r\n                    if ($scope.itemCopy.ProductId == null) {\r\n                        data.Results[i].Product.Id;\r\n                    }\r\n                    var promise = SurveyProductQuestionService.Create(item).then(function (data) {\r\n\r\n                    });\r\n                    $scope.$parent.gridOptions.data.push(data);\r\n                    promises.push(promise);\r\n                }\r\n                $q.all(promises).then(function () {\r\n                    toastr.success(\"The specified survey data has been copied over.\");\r\n                    $scope.copyItem = { Id: null }\r\n                    $scope.$parent.Search();\r\n                });\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.admin.surveycustomerlocationproductquestion', {\r\n            url: \"/survey/customerlocationproductquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocationProductQuestion/Views/SurveyCustomerLocationProductQuestion.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyCustomerLocationProductQuestionController', ['$scope', '$state', '$routeParams',\r\n        '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, \r\n    $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationProductQuestionService,\r\n        SelectionApplicationService) {\r\n        var predicate = {\r\n            and: [\r\n                { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            ]\r\n        }\r\n        $scope.Search = function () {\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data.Results;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridOptions.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    //$scope.Reorder();\r\n                });\r\n                gridApi.core.on.filterChanged($scope, function (column) {\r\n                    $scope.filterChanged(this.grid.columns);\r\n                });\r\n\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',           \r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.filterChanged = function (gridColumns) {\r\n            predicate.and.length = 1;\r\n            angular.forEach(gridColumns, function (column) {\r\n                if (typeof column.filters !== 'undefined' && column.filters !== null &&\r\n                        column.filters.length > 0 && column.filters[0].term != null && column.filters[0].term.trim().length > 0) {\r\n                    var operandName = \"contains\"; var fieldName = column.field; var termName = column.filters[0].term;\r\n                    var filter = {};\r\n                    var field = {}\r\n                    field[operandName] = termName;\r\n                    filter[fieldName] = field;\r\n                    predicate.and.push(filter);\r\n                }\r\n            });\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function (count) {\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocationproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        //TODO: Reorder button.  Don't do on drop.  \r\n        $scope.Reorder = function () {\r\n            //validate\r\n            if (!ValidateForOrder) {\r\n                return;\r\n            }\r\n            //reorder\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.gridOptions.data.length; i++) {\r\n                var row = $scope.gridOptions.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        //TODO: Button and group by customer location and filter based on current selection.  Need validation as well in there.\r\n        $scope.ReorderAll = function () {\r\n            //validate\r\n            if (!ValidateForOrder) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < $scope.gridOptions.data.length; i++) {\r\n                var predicate = {\r\n                    and: [\r\n                        { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                        { \"ProductId\": { \"==\": $scope.gridOptions.data[i].ProductId } },\r\n                        { \"QuestionId\": { \"==\": $scope.gridOptions.data[i].QuestionId } }\r\n                    ]\r\n                }\r\n                SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    for (var j = 0; j < data.length; j++) {\r\n                        var row = data[j];\r\n                        row.RowOrder = i;\r\n                        SurveyCustomerLocationProductQuestionService.Update(row.Id, row).then(function (data) {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.ValidateForOrder = function () {\r\n            var customer = $scope.gridOptions.data[0].CustomerId;\r\n            var location = $scope.gridOptions.data[0].LocationId;\r\n            for (var i = 0; i < $scope.gridOptions.data.length; i++) {\r\n                if (customer != $scope.gridOptions.data[i].CustomerId) {\r\n                    toastr.error(\"The grouping does not contain just 1 customer.  Please filter down to just 1 customer first before ordering.\");\r\n                    return false;\r\n                }\r\n                if (location != $scope.gridOptions.data[i].LocationId) {\r\n                    toastr.error(\"The grouping does not contain just 1 location.  Please filter down to just 1 location first before ordering.\");\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null }\r\n            $scope.focus = true;\r\n            $scope.copyItem = { Id: null }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n            $scope.item.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SelectCopyProduct = function (item, model, label) {\r\n            $scope.copyItem.ProductId = item.Id;\r\n            $scope.copyItem.ProductName = item.Name;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.CopyQuestion = function () {\r\n            var promise = {}, promises = [];\r\n            var predicate = {\r\n                and: [\r\n                   { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            SurveyProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 1, false).then(function (data) {\r\n                var rowOrder = data.InlineCount;\r\n                predicate = {\r\n                    and: [\r\n                       { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"Product.Id\": { \"==\": $scope.item.ProductId } }\r\n                    ]\r\n                }\r\n                SurveyProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                    for (var i = 0; i < data.Results.length; i++) {\r\n                        var item = {\r\n                            ProductId: $scope.copyItem.ProductId,\r\n                            QuestionId: data.Results[i].Question.Id,\r\n                            RowOrder: rowOrder,\r\n                            CompanyId: SelectionApplicationService.GetCompanyId(),\r\n                            SurveyId: SelectionApplicationService.GetSurveyId()\r\n                        }\r\n                        var promise = SurveyProductQuestionService.Create(item).then(function (data) {\r\n\r\n                        });\r\n                        rowOrder++;\r\n                        promises.push(promise);\r\n                    }\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success($scope.item.ProductName + \" questions have been copied to product \" + $scope.copyItem.ProductName);\r\n                        $scope.copyItem = { Id: null }\r\n                        $scope.$parent.Search();\r\n                    });\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                $scope.item.RowOrder = $scope.$parent.gridOptions.data.length;\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice($scope.$parent.gridOptions.data.length, 0, data.data);\r\n                    $scope.$parent.gridOptions.gridApi.core.scrollTo($scope.gridOptions.data[$scope.gridOptions.data.length - 1], $scope.gridOptions.columnDefs[0]);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$q', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $q, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"RowOrder asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data.Results;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: false,\r\n            onRegisterApi: function (gridApi) {\r\n                $scope.gridOptions.gridApi = gridApi;\r\n                gridApi.draggableRows.on.rowDropped($scope, function (info, dropTarget) {\r\n                    $scope.Reorder();\r\n                });\r\n            },\r\n            rowTemplate: '<div grid=\"grid\" class=\"ui-grid-draggable-row\" draggable=\"true\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ \\'ui-grid-row-header-cell\\': col.isRowHeader, \\'custom\\': true }\" ui-grid-cell></div></div>',\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true },\r\n                { field: 'RowOrder', width: '120', name: 'Order', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Reorder = function () {\r\n            var promises = [], promise = {};\r\n            for (var i = 0; i < $scope.gridOptions.data.length; i++) {\r\n                var row = $scope.gridOptions.data[i];\r\n                row.RowOrder = i\r\n                var promise = SurveyProductQuestionService.Update(row.Id, row).then(function (data) {\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n                promises.push(promise);\r\n            }\r\n            $q.all(promises).then(function () {\r\n                $scope.Search();\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    var index = $scope.$parent.gridOptions.data.map(function (e) { return e.Id; }).indexOf(data.data.Id);\r\n                    $scope.$parent.gridOptions.data.splice(index, 1, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.gridOptions.data.splice(0, 0, data.data);\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name != \"Customer\") {\r\n                $scope.item.Customer = null;\r\n            }\r\n\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', width: '120',  cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\r\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\r\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data, error.statusText);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n            $scope.focus = true;\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(error.data, error.statusText);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data != null && data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcompany', {\r\n            url: \"/selectcompany/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCompany/SelectCompany.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCompanyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCompany(item);\r\n            SelectionApplicationService.SetCompanyId(item.Id);\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectcustomer');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectcustomer', {\r\n            url: \"/selectcustomer/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectCustomer/SelectCustomer.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectCustomerController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0]);\r\n                }\r\n                else {\r\n                    $scope.Customer = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetCustomer(item);\r\n            SelectionApplicationService.SetCustomerId(item.Id);\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectlocation');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectlocation', {\r\n            url: \"/selectlocation/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectLocation/SelectLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectLocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectLocationService) {\r\n        \r\n        $scope.LocationServicesDisabled = false;\r\n        $scope.Location = [];\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } }\r\n                    ]\r\n                }\r\n                SurveyCustomerLocationProductQuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"Latitude\": { '>=': $scope.Latitude - .0725 } },\r\n                       { \"Latitude\": { '<=': $scope.Latitude + .0725 } },\r\n                       { \"Longitude\": { '>=': $scope.Longitude - .0725 } },\r\n                       { \"Longitude\": { '<=': $scope.Longitude + .0725 } }\r\n                    ]\r\n                }\r\n                LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go('main.selectsurvey');\r\n                    }\r\n                    if (data.length < 1) {\r\n                        $scope.LocationServicesDisabled = true;\r\n                    }\r\n                    else if (data.length == 1) {\r\n                        $scope.Select(data[0]);\r\n                    }\r\n                    $scope.Location = data;\r\n                });\r\n            }\r\n            \r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Latitude = position.coords.latitude;\r\n            $scope.Longitude = position.coords.longitude;\r\n            $scope.Search();\r\n        }, function (error) {\r\n            toastr.error(\"User has denied geolocation for this site.  Please allow location services to get your location to find locations near you.\");\r\n            $scope.LocationServicesDisabled = true;\r\n        });\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('https://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            $scope.Latitude = item.geometry.location.lat;\r\n            $scope.Longitude = item.geometry.location.lng;\r\n            $scope.LocationServicesDisabled = false;\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Select = function (item) {\r\n            SelectionApplicationService.SetLocation(item);\r\n            SelectionApplicationService.SetLocationId(item.Id);\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go('main.selectsurvey');\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.selectsurvey', {\r\n            url: \"/selectsurvey/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SelectSurvey/SelectSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SelectSurveyController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationProductQuestionService', 'SelectionApplicationService', 'SelectSurveyService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationProductQuestionService, SelectionApplicationService, SelectSurveyService) {\r\n        \r\n        $scope.Survey = [];\r\n        $scope.Search = function () {\r\n            if(SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SelectSurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                    ]\r\n                }\r\n                SurveyService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                    if (SelectionApplicationService.GetRole() == \"Customer\") {\r\n                        $state.go(SelectionApplicationService.GetRedirectState());\r\n                    }\r\n                    $scope.Survey = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Select = function (item) {\r\n            SurveyService.Get(item.Id).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                $state.go(SelectionApplicationService.GetRedirectState());\r\n            });\r\n        }\r\n\r\n        $scope.Continue = function () {\r\n            $state.go(SelectionApplicationService.GetRedirectState());\r\n        }\r\n\r\n        $scope.IsContinueShown = function () {\r\n            if (SelectionApplicationService.GetRedirectState() == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService, SelectionApplicationService) {\r\n        \r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Survey = data[0].Survey;\r\n                    $scope.Header = data[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = {\r\n                    and: [\r\n                       { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                       { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } },\r\n                       { \"CustomerId\": { '==': SelectionApplicationService.GetCustomerId() } },\r\n                       { \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }\r\n                    ]\r\n                }\r\n                SurveyProductQuestionService.Search(predicate, [\"RowOrder desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Survey = data.Results[0].Survey;\r\n                    $scope.Detail = data.Results;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.sort = {\r\n            column: ['RowOrder', 'Product.Name'],\r\n            descending: false\r\n        };\r\n        $scope.changeSorting = function (column) {\r\n            var sort = $scope.sort;\r\n\r\n            if (sort.column[0] == column) {\r\n                sort.descending = !sort.descending;\r\n            } else {\r\n                sort.column[0] = column;\r\n                sort.descending = false;\r\n            }\r\n        };\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error updating the survey.\");\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        SelectionApplicationService.SetRedirectState('main.survey');\r\n                        $state.go('main.selectcompany');\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(\"There was an error creating the survey.\");\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null ) {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsBeforeImage = false;\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $scope.Header.IsAfterImage = false;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report', {\r\n            url: \"/report\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        $scope.SelectedCustomer = SelectionApplicationService.GetCustomer();\r\n        $scope.SelectedLocation = SelectionApplicationService.GetLocation();\r\n        $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n    }]);\r\n\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().startOf('isoWeek').format(\"DD\"));\r\n        $scope.EndDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().add(2, \"days\").format(\"DD\"));\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), SelectionApplicationService.GetSurveyHeaderId(), SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {                    \r\n                    $scope.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 110, \r\n                                cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Images/Notes', width: 65,  cellTooltip: true, headerTooltip: true, \r\n                        cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', cellTooltip: true, headerTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true, headerTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, headerTooltip: true,\r\n                        cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error getting all the data.\");\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.data = $scope.data.concat(data);\r\n                    $scope.gridApi.infiniteScroll.dataLoaded(false, true);\r\n                });\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: 'data',\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.data[index].Id == id) {\r\n                        $scope.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n\r\n        $scope.DownloadSurveyData = function () {\r\n            window.open('/DownloadApi/DownloadSurveyData?startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n\r\n        $scope.DownloadNoteData = function () {\r\n            window.open('/DownloadApi/DownloadNoteData?companyId=' + SelectionApplicationService.GetCompanyId() + '&startDate=' + moment($scope.StartDate).format('YYYY-MM-DD') + '&endDate=' + moment($scope.EndDate).format('YYYY-MM-DD'), '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyheaderreport', {\r\n            url: \"/surveyheaderreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/SurveyHeader/SurveyHeaderReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyHeaderReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.selectcompany');\r\n        }\r\n\r\n        $scope.StartDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().startOf('isoWeek').format(\"DD\"));\r\n        $scope.EndDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().add(2, \"days\").format(\"DD\"));\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\" : moment($scope.StartDate).format('YYYY-MM-DD')}},\r\n                   { \"Created\": { \"<=\" : moment($scope.EndDate).format('YYYY-MM-DD')}}\r\n                ]\r\n            }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.data = data.Results;\r\n            });\r\n        }\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            var predicate = {\r\n                and: [\r\n                   { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                   { \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } },\r\n                   { \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } }\r\n                ]\r\n            }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], $scope.Page, 100, false).then(function (data) {\r\n                $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                $scope.data = $scope.data.concat(data.Results);\r\n                $scope.gridApi.infiniteScroll.dataLoaded(false, $scope.isMoreData(data.InlineCount));\r\n            });\r\n        }\r\n\r\n        $scope.isMoreData = function(count){\r\n            if (count > $scope.data.length) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        $scope.data = [];\r\n        $scope.gridOptions = {\r\n            showGridFooter: true,\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 50,\r\n            data: 'data',\r\n            columnDefs: [\r\n                {\r\n                    name: 'Detail', width: 65, cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<button class=\"btn btn-primary btn-sm\" ng-click=\"grid.appScope.ViewDetail(row.entity)\">Detail</button>'\r\n                },\r\n                { name: 'Images/Notes', width: 65, cellTooltip: true, headerTooltip: true, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeAfterNotes.html' },\r\n                { field: 'Survey.Name', name: 'Survey Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true, headerTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true, headerTooltip: true },\r\n                {\r\n                    name: 'Created', cellTooltip: true, headerTooltip: true,\r\n                    cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | dateLocalize | date: \"MM/dd/yyyy h:mm:ss a\"}}</div>'\r\n                }\r\n            ],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\r\n                //gridApi.options.loadTimeout = true;\r\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.ViewDetail = function (item) {\r\n            SelectionApplicationService.SetSurveyHeaderId(item.Id);\r\n            $state.go('main.report.surveyreport')\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            SurveyHeaderService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n\r\n        $scope.StartDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().startOf('isoWeek').format(\"DD\"));\r\n        $scope.EndDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().add(2, \"days\").format(\"DD\"));\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            $scope.Page = 0;\r\n            $scope.data = [];\r\n            //$scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                    { \"Company.Id\": { \"==\": SelectionApplicationService.GetCompanyId() } },\r\n                    { \"Created\": { \">=\": moment($scope.StartDate).format('YYYY-MM-DD') } },\r\n                    { \"Created\": { \"<=\": moment($scope.EndDate).format('YYYY-MM-DD') } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"Customer.Id\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"Location.Id\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"Survey.Id\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.data = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\r\n    $scope.image = image;\r\n    $scope.title = title;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\r\n    $scope.note = note;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});"],"sourceRoot":"/source/"}