{"version":3,"sources":["ApplicationServices.js","Selection/SelectionApplicationService.js","DatabaseServices.js","Breeze/breezeservice.js","Breeze/metadata.js","Company/CompanyService.js","CompanyUser/CompanyUserService.js","Customer/CustomerService.js","Download/DownloadService.js","Image/ImageService.js","Location/LocationService.js","Map/MapService.js","Product/ProductService.js","Question/QuestionService.js","Report/ReportService.js","Role/RoleService.js","Survey/SurveyService.js","SurveyCustomerLocation/SurveyCustomerLocationService.js","SurveyDetail/SurveyDetailService.js","SurveyHeader/SurveyHeaderService.js","SurveyProductQuestion/SurveyProductQuestionService.js","User/UserService.js","UserRole/UserRoleService.js","App.js","MainController.js","AdminController.js","Company/Controllers/CompanyAddEditController.js","Company/Controllers/CompanyController.js","Customer/Controllers/CustomerAddEditController.js","Customer/Controllers/CustomerController.js","Location/Controllers/LocationAddEditController.js","Location/Controllers/LocationController.js","Product/Controllers/ProductAddEditController.js","Product/Controllers/ProductController.js","Question/Controllers/QuestionAddEditController.js","Question/Controllers/QuestionController.js","Survey/Controllers/SurveyAddEditController.js","Survey/Controllers/SurveyController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationAddEditController.js","SurveyCustomerLocation/Controllers/SurveyCustomerLocationController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionAddEditController.js","SurveyProductQuestion/Controllers/SurveyProductQuestionController.js","UserRole/Controllers/UserRoleAddEditController.js","UserRole/Controllers/UserRoleController.js","CustomerLocation/MerchandiseCustomerLocationController.js","Survey/MerchandiseSurveyController.js","SurveyData/MerchandiseSurveyData.js","ReportController.js","SurveyReportController.js","WeeklyReportController.js","LocationReportController.js","Image/ImageModalController.js","Note/NoteModalController.js"],"names":["angular","module","service","observers","this","RegisterObserver","callback","push","NotifyObservers","forEach","CompanyId","GetCompanyId","SetCompanyId","id","Company","GetCompany","SetCompany","item","CustomerId","GetCustomerId","SetCustomerId","Customer","GetCustomer","SetCustomer","LocationId","GetLocationId","SetLocationId","Location","GetLocation","SetLocation","SurveyId","GetSurveyId","SetSurveyId","Survey","GetSurvey","SetSurvey","SurveyHeaderId","GetSurveyHeaderId","SetSurveyHeaderId","Clear","$http","$q","$timeout","breeze","executeQuery","query","manager","then","data","all","EntityQuery","from","resourceName","serviceName","dataService","DataService","hasServerMetadata","metadataStore","MetadataStore","importMetadata","window","metadata","EntityManager","meta","setEntityTypeForResourceName","factory","JSON","stringify","schema","namespace","alias","annotation:UseStrongSpatialTypes","xmlns:annotation","xmlns:customannotation","xmlns","cSpaceOSpaceMapping","entityType","name","customannotation:ClrType","key","propertyRef","property","type","nullable","maxLength","fixedLength","unicode","precision","scale","navigationProperty","relationship","fromRole","toRole","association","end","role","multiplicity","onDelete","action","referentialConstraint","principal","dependent","entityContainer","customannotation:UseClrTypes","entitySet","associationSet","breezeservice","_self","deferredRequest","Search","predicate","order","page","pageSize","cancelExistingSearch","reject","deferred","defer","where","orderBy","skip","take","resolve","httpResponse","msg","code","promise","AdminSearch","Get","method","url","success","status","headers","config","error","Create","post","response","statusText","length","Update","put","Delete","delete","SelectionApplicationService","parameters","companyId","GetBeforeImage","GetAfterImage","CreateBeforeImage","image","undefined","CreateAfterImage","DeleteBeforeImage","DeleteAfterImage","surveyHeaderId","customerId","locationId","productId","surveyId","userId","startDate","endDate","SearchJson","CreateBulk","UpdateBulk","DeleteBulk","RoleService","UserRoleService","GetCurrentUser","GetCurrentUsername","IsAdministrator","Name","==","map","e","Id","and","UserId","RoleId","IsCustomer","IsDataEntry","app","blockUIConfig","delay","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","run","$rootScope","$state","UserService","Role","go","redirectState","moment","controller","$scope","$window","Username","GoTo","Logout","location","reload","SelectedCompany","SelectedSurvey","Route","toastr","$stateParams","$routeParams","$location","CompanyService","Init","Save","$parent","alert","items","Select","Edit","CustomerService","gridOptions","enableFiltering","enableSorting","columnDefs","cellTemplate","field","cellTooltip","row","LocationService","Latitude","Longitude","ChangeAddress","value","address","get","results","SelectAddress","model","label","geometry","lat","lng","Address","formatted_address","ProductService","QuestionService","SurveyService","SurveyCustomerLocationService","SearchCustomers","substringof","SelectCustomer","SearchLocations","SelectLocation","SurveyProductQuestionService","SearchProducts","SelectProduct","ProductId","SearchQuestions","SelectQuestion","QuestionId","Roles","Customers","Validate","Predicate","Message","RedirectState","SelectedLocation","SelectedCustomer","SelectCompany","CustomerSearch","LocationSearch","SurveySearch","SelectSurvey","IsGoShown","SurveyHeaderService","SurveyDetailService","ImageService","BeforeImage","AfterImage","Header","Notes","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Detail","setBeforeImage","element","reader","FileReader","IsBeforeImage","files","onload","event","target","result","$apply","readAsDataURL","setAfterImage","IsAfterImage","promises","details","Answer","Details","Product","Question","fileSizeBeforeImage","fileSizeAfterImage","size","uiGridConstants","grid","options","showGridFooter","headerTooltip","onRegisterApi","gridApi","enableGridMenu","exporterCsvFilename","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","displayName","width","$uibModal","ReportService","MapService","DownloadService","StartDate","Date","format","startOf","EndDate","add","myDate","MinDate","getFullYear","getMonth","getDate","MaxDate","DateChange","Page","PageSize","splice","exclude","keys","obj","includes","GetDataDown","infiniteScroll","saveScrollPercentage","concat","infiniteScrollRowsFromEnd","on","needLoadMoreData","index","ViewNote","modalInstance","open","animation","note","ViewImage","title","Download","NgMap","SelectedPosition","positions","getMap","SelectPosition","panTo","SelectMarker","marker","$uibModalInstance","ok","close","cancel","dismiss"],"mappings":"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","file":"app.min.js","sourcesContent":["\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('ApplicationServices', []);\r\n})();","angular.module('ApplicationServices').service('SelectionApplicationService', function () {\r\n    var observers = [];\r\n    this.RegisterObserver = function (callback) {\r\n        observers.push(callback);\r\n    }\r\n\r\n    this.NotifyObservers = function () {\r\n        angular.forEach(observers, function (callback) {\r\n            callback();\r\n        });\r\n    };\r\n\r\n    this.CompanyId = null;\r\n    this.GetCompanyId = function () {\r\n        return this.CompanyId;\r\n    };\r\n\r\n    this.SetCompanyId = function (id) {\r\n        this.CompanyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Company = null;\r\n    this.GetCompany = function () {\r\n        return this.Company;\r\n    };\r\n\r\n    this.SetCompany = function (item) {\r\n        this.Company = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.CustomerId = null;\r\n    this.GetCustomerId = function () {\r\n        return this.CustomerId;\r\n    };\r\n\r\n    this.SetCustomerId = function (id) {\r\n        this.CustomerId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Customer = null;\r\n    this.GetCustomer = function () {\r\n        return this.Customer;\r\n    };\r\n\r\n    this.SetCustomer = function (item) {\r\n        this.Customer = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.LocationId = null;\r\n    this.GetLocationId = function () {\r\n        return this.LocationId;\r\n    };\r\n\r\n    this.SetLocationId = function (id) {\r\n        this.LocationId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Location = null;\r\n    this.GetLocation = function () {\r\n        return this.Location;\r\n    };\r\n\r\n    this.SetLocation = function (item) {\r\n        this.Location = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyId = null;\r\n    this.GetSurveyId = function () {\r\n        return this.SurveyId;\r\n    };\r\n\r\n    this.SetSurveyId = function (id) {\r\n        this.SurveyId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Survey = null;\r\n    this.GetSurvey = function () {\r\n        return this.Survey;\r\n    };\r\n\r\n    this.SetSurvey = function (item) {\r\n        this.Survey = item;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.SurveyHeaderId = null;\r\n    this.GetSurveyHeaderId = function () {\r\n        return this.SurveyHeaderId;\r\n    };\r\n\r\n    this.SetSurveyHeaderId = function (id) {\r\n        this.SurveyHeaderId = id;\r\n        this.NotifyObservers();\r\n    }\r\n\r\n    this.Clear = function () {\r\n        this.CompanyId = null;\r\n        this.Company = null;\r\n\r\n        this.CustomerId = null;\r\n        this.Customer = null;\r\n\r\n        this.LocationId = null;\r\n        this.Location = null;\r\n\r\n        this.SurveyId = null;\r\n        this.Survey = null;\r\n\r\n        this.SurveyHeaderId = null;\r\n    }\r\n});","\r\n(function() {\r\n    'use strict';\r\n    var services = angular.module('DatabaseServices', []);\r\n})();","(function () {\r\n\r\n    angular.module('DatabaseServices').factory('breezeservice',\r\n    ['$http', '$q', '$timeout', 'breeze', service]);\r\n\r\n    function service($http, $q, $timeout, breeze) {\r\n        var serviceName = '/breeze'; // route to the same origin Web Api controller\r\n        var dataService = new breeze.DataService({\r\n            serviceName: serviceName,\r\n            hasServerMetadata: false  // don't ask the server for metadata\r\n        });\r\n        var metadataStore = new breeze.MetadataStore();\r\n        //manager.enableSaveQueuing(true);\r\n        metadataStore.importMetadata(window.breeze.metadata);\r\n        //var masterManager = new breeze.EntityManager(serviceName);\r\n        var manager = new breeze.EntityManager({\r\n            dataService: dataService,\r\n            metadataStore: metadataStore\r\n        });\r\n        var meta = manager.metadataStore;\r\n        meta.setEntityTypeForResourceName(\"UserRoleApi/Search\", \"UserRoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CompanyApi/Search\", \"CompanyViewModel\");\r\n        meta.setEntityTypeForResourceName(\"CustomerApi/Search\", \"CustomerViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyCustomerLocationApi/Search\", \"SurveyCustomerLocationViewModel\");\r\n        meta.setEntityTypeForResourceName(\"SurveyProductQuestionApi/Search\", \"SurveyProductQuestionViewModel\");\r\n        meta.setEntityTypeForResourceName(\"RoleApi/Search\", \"RoleViewModel\");\r\n        meta.setEntityTypeForResourceName(\"MapApi/Search\", \"MapViewModel\");\r\n        var service = {\r\n            executeQuery: executeQuery,\r\n            all: all\r\n        };\r\n        return service;\r\n\r\n        function executeQuery(query) {\r\n            return manager.executeQuery(query).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        function all() {\r\n            var query = breeze.EntityQuery\r\n                .from(resourceName);\r\n\r\n            return executeQuery(query);\r\n        }\r\n    }\r\n})();","window.breeze = window.breeze || {}; window.breeze.metadata = JSON.stringify(\n{\"schema\":{\"namespace\":\"Merchandiser\",\"alias\":\"Self\",\"annotation:UseStrongSpatialTypes\":\"false\",\"xmlns:annotation\":\"http://schemas.microsoft.com/ado/2009/02/edm/annotation\",\"xmlns:customannotation\":\"http://schemas.microsoft.com/ado/2013/11/edm/customannotation\",\"xmlns\":\"http://schemas.microsoft.com/ado/2009/11/edm\",\"cSpaceOSpaceMapping\":\"[[\\\"Merchandiser.CompanyViewModel\\\",\\\"Merchandiser.Models.CompanyViewModel\\\"],[\\\"Merchandiser.CustomerViewModel\\\",\\\"Merchandiser.Models.CustomerViewModel\\\"],[\\\"Merchandiser.MapViewModel\\\",\\\"Merchandiser.Models.MapViewModel\\\"],[\\\"Merchandiser.RoleViewModel\\\",\\\"Merchandiser.Models.RoleViewModel\\\"],[\\\"Merchandiser.SurveyCustomerLocationViewModel\\\",\\\"Merchandiser.Models.SurveyCustomerLocationViewModel\\\"],[\\\"Merchandiser.LocationViewModel\\\",\\\"Merchandiser.Models.LocationViewModel\\\"],[\\\"Merchandiser.SurveyViewModel\\\",\\\"Merchandiser.Models.SurveyViewModel\\\"],[\\\"Merchandiser.SurveyProductQuestionViewModel\\\",\\\"Merchandiser.Models.SurveyProductQuestionViewModel\\\"],[\\\"Merchandiser.ProductViewModel\\\",\\\"Merchandiser.Models.ProductViewModel\\\"],[\\\"Merchandiser.QuestionViewModel\\\",\\\"Merchandiser.Models.QuestionViewModel\\\"],[\\\"Merchandiser.UserRoleViewModel\\\",\\\"Merchandiser.Models.UserRoleViewModel\\\"],[\\\"Merchandiser.UserViewModel\\\",\\\"Merchandiser.Models.UserViewModel\\\"]]\",\"entityType\":[{\"name\":\"CompanyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CompanyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"CustomerViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.CustomerViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"MapViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.MapViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"FirstName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"LastName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"}]},{\"name\":\"RoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.RoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyCustomerLocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyCustomerLocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"LocationId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Customer\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"fromRole\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Customer_Target\"},{\"name\":\"Location\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Location\",\"fromRole\":\"SurveyCustomerLocationViewModel_Location_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Location_Target\"},{\"name\":\"Survey\",\"relationship\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"fromRole\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"toRole\":\"SurveyCustomerLocationViewModel_Survey_Target\"}]},{\"name\":\"LocationViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.LocationViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Store\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Latitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Longitude\",\"type\":\"Edm.Decimal\",\"precision\":\"18\",\"scale\":\"2\"},{\"name\":\"Address\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"AreaManager\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"SurveyProductQuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.SurveyProductQuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"SurveyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"ProductId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"QuestionId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Modifed\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}],\"navigationProperty\":[{\"name\":\"Product\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Product\",\"fromRole\":\"SurveyProductQuestionViewModel_Product_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Product_Target\"},{\"name\":\"Question\",\"relationship\":\"Self.SurveyProductQuestionViewModel_Question\",\"fromRole\":\"SurveyProductQuestionViewModel_Question_Source\",\"toRole\":\"SurveyProductQuestionViewModel_Question_Target\"}]},{\"name\":\"ProductViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.ProductViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"QuestionViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.QuestionViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"Name\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"Created\",\"type\":\"Edm.DateTime\",\"nullable\":\"false\"},{\"name\":\"CreatedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"ModifiedBy\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]},{\"name\":\"UserRoleViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserRoleViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"UserId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"RoleId\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\"},{\"name\":\"CompanyId\",\"type\":\"Edm.Guid\",\"nullable\":\"false\"},{\"name\":\"CustomerId\",\"type\":\"Edm.Guid\"}],\"navigationProperty\":[{\"name\":\"Company\",\"relationship\":\"Self.UserRoleViewModel_Company\",\"fromRole\":\"UserRoleViewModel_Company_Source\",\"toRole\":\"UserRoleViewModel_Company_Target\"},{\"name\":\"Customer\",\"relationship\":\"Self.UserRoleViewModel_Customer\",\"fromRole\":\"UserRoleViewModel_Customer_Source\",\"toRole\":\"UserRoleViewModel_Customer_Target\"},{\"name\":\"Role\",\"relationship\":\"Self.UserRoleViewModel_Role\",\"fromRole\":\"UserRoleViewModel_Role_Source\",\"toRole\":\"UserRoleViewModel_Role_Target\"},{\"name\":\"User\",\"relationship\":\"Self.UserRoleViewModel_User\",\"fromRole\":\"UserRoleViewModel_User_Source\",\"toRole\":\"UserRoleViewModel_User_Target\"}]},{\"name\":\"UserViewModel\",\"customannotation:ClrType\":\"Merchandiser.Models.UserViewModel, Merchandiser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\"key\":{\"propertyRef\":{\"name\":\"Id\"}},\"property\":[{\"name\":\"Id\",\"type\":\"Edm.String\",\"maxLength\":\"128\",\"fixedLength\":\"false\",\"unicode\":\"true\",\"nullable\":\"false\"},{\"name\":\"UserName\",\"type\":\"Edm.String\",\"maxLength\":\"Max\",\"fixedLength\":\"false\",\"unicode\":\"true\"}]}],\"association\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"type\":\"Edm.Self.LocationViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"propertyRef\":{\"name\":\"LocationId\"}}}},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"type\":\"Edm.Self.SurveyCustomerLocationViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"type\":\"Edm.Self.SurveyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"propertyRef\":{\"name\":\"SurveyId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"type\":\"Edm.Self.ProductViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"propertyRef\":{\"name\":\"ProductId\"}}}},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"type\":\"Edm.Self.SurveyProductQuestionViewModel\",\"multiplicity\":\"*\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"type\":\"Edm.Self.QuestionViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"propertyRef\":{\"name\":\"QuestionId\"}}}},{\"name\":\"UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"type\":\"Edm.Self.CompanyViewModel\",\"multiplicity\":\"1\",\"onDelete\":{\"action\":\"Cascade\"}}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Company_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Company_Source\",\"propertyRef\":{\"name\":\"CompanyId\"}}}},{\"name\":\"UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"type\":\"Edm.Self.CustomerViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Customer_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Customer_Source\",\"propertyRef\":{\"name\":\"CustomerId\"}}}},{\"name\":\"UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"type\":\"Edm.Self.RoleViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_Role_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_Role_Source\",\"propertyRef\":{\"name\":\"RoleId\"}}}},{\"name\":\"UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"type\":\"Edm.Self.UserRoleViewModel\",\"multiplicity\":\"*\"},{\"role\":\"UserRoleViewModel_User_Target\",\"type\":\"Edm.Self.UserViewModel\",\"multiplicity\":\"0..1\"}],\"referentialConstraint\":{\"principal\":{\"role\":\"UserRoleViewModel_User_Target\",\"propertyRef\":{\"name\":\"Id\"}},\"dependent\":{\"role\":\"UserRoleViewModel_User_Source\",\"propertyRef\":{\"name\":\"UserId\"}}}}],\"entityContainer\":{\"name\":\"DatabaseContext\",\"customannotation:UseClrTypes\":\"true\",\"entitySet\":[{\"name\":\"CompanyViewModel\",\"entityType\":\"Self.CompanyViewModel\"},{\"name\":\"CustomerViewModel\",\"entityType\":\"Self.CustomerViewModel\"},{\"name\":\"MapViewModel\",\"entityType\":\"Self.MapViewModel\"},{\"name\":\"RoleViewModel\",\"entityType\":\"Self.RoleViewModel\"},{\"name\":\"SurveyCustomerLocationViewModel\",\"entityType\":\"Self.SurveyCustomerLocationViewModel\"},{\"name\":\"LocationViewModels\",\"entityType\":\"Self.LocationViewModel\"},{\"name\":\"SurveyViewModels\",\"entityType\":\"Self.SurveyViewModel\"},{\"name\":\"SurveyProductQuestionViewModel\",\"entityType\":\"Self.SurveyProductQuestionViewModel\"},{\"name\":\"ProductViewModels\",\"entityType\":\"Self.ProductViewModel\"},{\"name\":\"QuestionViewModels\",\"entityType\":\"Self.QuestionViewModel\"},{\"name\":\"UserRoleViewModel\",\"entityType\":\"Self.UserRoleViewModel\"},{\"name\":\"UserViewModels\",\"entityType\":\"Self.UserViewModel\"}],\"associationSet\":[{\"name\":\"SurveyCustomerLocationViewModel_Customer\",\"association\":\"Self.SurveyCustomerLocationViewModel_Customer\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Customer_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Location\",\"association\":\"Self.SurveyCustomerLocationViewModel_Location\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Location_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Location_Target\",\"entitySet\":\"LocationViewModels\"}]},{\"name\":\"SurveyCustomerLocationViewModel_Survey\",\"association\":\"Self.SurveyCustomerLocationViewModel_Survey\",\"end\":[{\"role\":\"SurveyCustomerLocationViewModel_Survey_Source\",\"entitySet\":\"SurveyCustomerLocationViewModel\"},{\"role\":\"SurveyCustomerLocationViewModel_Survey_Target\",\"entitySet\":\"SurveyViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Product\",\"association\":\"Self.SurveyProductQuestionViewModel_Product\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Product_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Product_Target\",\"entitySet\":\"ProductViewModels\"}]},{\"name\":\"SurveyProductQuestionViewModel_Question\",\"association\":\"Self.SurveyProductQuestionViewModel_Question\",\"end\":[{\"role\":\"SurveyProductQuestionViewModel_Question_Source\",\"entitySet\":\"SurveyProductQuestionViewModel\"},{\"role\":\"SurveyProductQuestionViewModel_Question_Target\",\"entitySet\":\"QuestionViewModels\"}]},{\"name\":\"UserRoleViewModel_Company\",\"association\":\"Self.UserRoleViewModel_Company\",\"end\":[{\"role\":\"UserRoleViewModel_Company_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Company_Target\",\"entitySet\":\"CompanyViewModel\"}]},{\"name\":\"UserRoleViewModel_Customer\",\"association\":\"Self.UserRoleViewModel_Customer\",\"end\":[{\"role\":\"UserRoleViewModel_Customer_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Customer_Target\",\"entitySet\":\"CustomerViewModel\"}]},{\"name\":\"UserRoleViewModel_Role\",\"association\":\"Self.UserRoleViewModel_Role\",\"end\":[{\"role\":\"UserRoleViewModel_Role_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_Role_Target\",\"entitySet\":\"RoleViewModel\"}]},{\"name\":\"UserRoleViewModel_User\",\"association\":\"Self.UserRoleViewModel_User\",\"end\":[{\"role\":\"UserRoleViewModel_User_Source\",\"entitySet\":\"UserRoleViewModel\"},{\"role\":\"UserRoleViewModel_User_Target\",\"entitySet\":\"UserViewModels\"}]}]}}}\n);\r\n","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.AdminSearch = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CompanyApi/AdminSearch\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CompanyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CompanyUserService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n            var query = breeze.EntityQuery.from('CompanyUserApi/Search');\r\n            if (predicate != null) {\r\n                query = query.where(predicate);\r\n            }\r\n            query = query.skip(page * pageSize).take(pageSize);\r\n                        \r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n            \r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CompanyUserApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CompanyUserApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.put('/breeze/CompanyUserApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CompanyUserApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('CustomerService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"CustomerApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/CustomerApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/CustomerApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/CustomerApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/CustomerApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('DownloadService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/DownloadApi/Get/'\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ImageService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ImageApi/GetBeforeImage/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBeforeImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateBeforeImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateAfterImage = function (image, id) {\r\n                var deferred = $q.defer();\r\n                if (image != undefined && image != null) {\r\n                    $http.post('/api/v1/ImageApi/CreateAfterImage/' + id, image)\r\n                    .then(function (response) {\r\n                        deferred.resolve(response);\r\n                    }, function (response) {\r\n                        if (response.statusText.length > 0) {\r\n                            deferred.reject(response.statusText);\r\n                        } else {\r\n                            deferred.reject(\"Failed to create the record.\");\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    deferred.resolve();\r\n                }\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.DeleteBeforeImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteBeforeImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteAfterImage = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/api/v1/ImageApi/DeleteAfterImage/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('LocationService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"LocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/LocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/LocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/LocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/LocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('MapService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"MapApi/Search/\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\" : SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/MapApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ProductService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"ProductApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/ProductApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/ProductApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/ProductApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/ProductApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('QuestionService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"QuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/QuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/QuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/QuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/QuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('ReportService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (companyId,surveyHeaderId,customerId,locationId,productId,surveyId, userId, startDate, endDate, page, pageSize) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/ReportApi/Search/' + companyId + '/' + surveyHeaderId + '/' + customerId + '/' + locationId + '/' +\r\n                        productId + '/' + surveyId + '/' + userId + '/' + startDate + '/' + endDate + '/' + page + '/' + pageSize + '/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('RoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('RoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"RoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyCustomerLocationService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyCustomerLocationApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyCustomerLocationApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyCustomerLocationApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyCustomerLocationApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyCustomerLocationApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyDetailService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyDetailApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize,\r\n                parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyDetailApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyDetailApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyDetailApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyDetailApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyHeaderService', ['$http', '$q', 'breeze', 'breezeservice', 'SelectionApplicationService',\r\n        function ($http, $q, breeze, breezeservice, SelectionApplicationService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"SurveyHeaderApi/Search\",\r\n                    where: predicate,\r\n                    orderBy: order,\r\n                    skip: page * pageSize,\r\n                    take: pageSize,\r\n                    parameters: { \"companyId\": SelectionApplicationService.GetCompanyId() }\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/SurveyHeaderApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/Create/', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.CreateBulk = function (item) {\r\n                var deferred = $q.defer();\r\n                $http.post('/breeze/SurveyHeaderApi/CreateBulk', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Update = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/Update/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.UpdateBulk = function (id, item) {\r\n                var deferred = $q.defer();\r\n                $http.put('/breeze/SurveyHeaderApi/UpdateBulk/' + id, item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to update the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.DeleteBulk = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/SurveyHeaderApi/DeleteBulk/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('SurveyProductQuestionService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n        var _self = this;\r\n        this.deferredRequest = null;\r\n\r\n        this.Search = function (predicate, order, page, pageSize, cancelExistingSearch) {\r\n            cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n            if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                this.deferredRequest = null;\r\n            }\r\n            var deferred = $q.defer();\r\n\r\n            var query = new breeze.EntityQuery({\r\n                from: \"SurveyProductQuestionApi/Search\",\r\n                where: predicate,\r\n                orderBy: order,\r\n                skip: page * pageSize,\r\n                take: pageSize\r\n            });\r\n\r\n            breezeservice.executeQuery(query).then(function (data) {\r\n                deferred.resolve(data.httpResponse.data);\r\n                _self.deferredRequest = null;\r\n            }, function (msg, code) {\r\n                deferred.reject(msg);\r\n                _self.deferredRequest = null;\r\n            });\r\n\r\n            this.deferredRequest = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Get = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http({\r\n                method: 'Get',\r\n                url: '/breeze/SurveyProductQuestionApi/Get/' + id,\r\n            }).success(function (data, status, headers, config) {\r\n                deferred.resolve(data);\r\n            }).error(function (msg, code) {\r\n                deferred.reject(msg);\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Create = function (item) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.post('/breeze/SurveyProductQuestionApi/Create', item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response.statusText);\r\n                } else {\r\n                    deferred.reject(\"Failed to create the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        this.Update = function (id, item) {\r\n            var deferred = $q.defer();\r\n            $http.put('/breeze/SurveyProductQuestionApi/Update/' + id, item)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to update the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        this.Delete = function (id) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.delete('/breeze/SurveyProductQuestionApi/Delete/' + id)\r\n            .then(function (response) {\r\n                deferred.resolve(response);\r\n            }, function (response) {\r\n                if (response.statusText.length > 0) {\r\n                    deferred.reject(response);\r\n                } else {\r\n                    deferred.reject(\"Failed to delete the record.\");\r\n                }\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n    }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserService', ['$http', '$q', 'breeze', 'breezeservice', 'RoleService', 'UserRoleService',\r\n        function ($http, $q, breeze, breezeservice, RoleService, UserRoleService) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.GetCurrentUser = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUser/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.GetCurrentUsername = function () {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/api/v1/UserApi/GetCurrentUsername/',\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.IsAdministrator = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Administrator\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            this.IsCustomer = function (companyId) {\r\n                var deferred = $q.defer();\r\n\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Customer\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n\r\n            //this.IsCustomer = function (companyId, customerId) {\r\n            //    var deferred = $q.defer();\r\n            //    this.GetCurrentUser().then(function (data) {\r\n            //        var userId = data;\r\n            //        var predicate = { \"Name\": { '==': \"Customer\" } }\r\n            //        RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //            var roles = data.map(function (e) { return e.Id; });\r\n            //            var predicate = {\r\n            //                and: [\r\n            //                   { \"UserId\": { '==': userId } },\r\n            //                   { \"RoleId\": { '==': data[0].Id } },\r\n            //                   { \"CustomerId\": { '==': customerId } },\r\n            //                   { \"CompanyId\": { '==': companyId } }\r\n            //                ]\r\n            //            }\r\n            //            UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n            //                debugger;\r\n            //                if (data.length > 0) {\r\n            //                    deferred.resolve(true);\r\n            //                }\r\n            //                else {\r\n            //                    deferred.resolve(false);\r\n            //                }\r\n            //            });\r\n            //        });\r\n            //    });\r\n            //    return deferred.promise;\r\n            //}\r\n\r\n            this.IsDataEntry = function (companyId) {\r\n                var deferred = $q.defer();\r\n                this.GetCurrentUser().then(function (data) {\r\n                    var userId = data;\r\n                    var predicate = { \"Name\": { '==': \"Data Entry\" } }\r\n                    RoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                        var roles = data.map(function (e) { return e.Id; });\r\n                        var predicate = {\r\n                            and: [\r\n                               { \"UserId\": { '==': userId } },\r\n                               { \"RoleId\": { '==': data[0].Id } },\r\n                               { \"CompanyId\": { '==': companyId } }\r\n                            ]\r\n                        }\r\n                        UserRoleService.SearchJson(predicate, 0, 1, false).then(function (data) {\r\n                            if (data.length > 0) {\r\n                                deferred.resolve(true);\r\n                            }\r\n                            else {\r\n                                deferred.resolve(false);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n                return deferred.promise;\r\n            }\r\n        }]);\r\n})();","(function () {\r\n    \"use strict\";\r\n    angular.module('DatabaseServices')\r\n    .service('UserRoleService', ['$http', '$q', 'breeze', 'breezeservice',\r\n        function ($http, $q, breeze, breezeservice) {\r\n            var _self = this;\r\n            this.deferredRequest = null;\r\n\r\n            this.Search = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n                var query = breeze.EntityQuery.from('UserRoleApi/Search');\r\n                if (predicate != null) {\r\n                    query = query.where(predicate);\r\n                }\r\n                query = query.skip(page * pageSize).take(pageSize);\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.SearchJson = function (predicate, page, pageSize, cancelExistingSearch) {\r\n                cancelExistingSearch = cancelExistingSearch || false;\r\n\r\n                if (this.deferredRequest !== null && cancelExistingSearch) {\r\n                    this.deferredRequest.reject(\"Cancelled Search Request.\");\r\n                    this.deferredRequest = null;\r\n                }\r\n                var deferred = $q.defer();\r\n\r\n                var query = new breeze.EntityQuery({\r\n                    from: \"UserRoleApi/Search\",\r\n                    where: predicate,\r\n                    //orderBy: [\"Created desc\"],\r\n                    skip: page * pageSize,\r\n                    take: pageSize\r\n                });\r\n\r\n                breezeservice.executeQuery(query).then(function (data) {\r\n                    deferred.resolve(data.httpResponse.data);\r\n                    _self.deferredRequest = null;\r\n                }, function (msg, code) {\r\n                    deferred.reject(msg);\r\n                    _self.deferredRequest = null;\r\n                });\r\n\r\n                this.deferredRequest = deferred;\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Get = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http({\r\n                    method: 'Get',\r\n                    url: '/breeze/UserRoleApi/Get/' + id,\r\n                }).success(function (data, status, headers, config) {\r\n                    deferred.resolve(data);\r\n                }).error(function (msg, code) {\r\n                    deferred.reject(msg);\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Create = function (item) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.post('/breeze/UserRoleApi/Create', item)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response.statusText);\r\n                    } else {\r\n                        deferred.reject(\"Failed to create the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            };\r\n\r\n            this.Delete = function (id) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.delete('/breeze/UserRoleApi/Delete/' + id)\r\n                .then(function (response) {\r\n                    deferred.resolve(response);\r\n                }, function (response) {\r\n                    if (response.statusText.length > 0) {\r\n                        deferred.reject(response);\r\n                    } else {\r\n                        deferred.reject(\"Failed to delete the record.\");\r\n                    }\r\n                });\r\n\r\n                return deferred.promise;\r\n            }\r\n           \r\n        }]);\r\n})();","var app = angular.module('Main', ['ngRoute', 'ngResource', 'ngSanitize', 'ngAnimate',\r\n    'ui.grid', 'ui.grid.infiniteScroll', 'ui.bootstrap', /*'ngTouch',*/ 'ui.router', 'ngMap', 'ui.grid.exporter', 'blockUI', \r\n    'breeze.angular', 'ngAria', 'ngMaterial', 'DatabaseServices', 'ApplicationServices']);\r\nangular.module('Main').config(function (blockUIConfig) {\r\n    // Change the default delay to 100ms before the blocking is visible\r\n    blockUIConfig.delay = 0;\r\n});\r\n\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    // For any unmatched url, send to /route1\r\n    $urlRouterProvider.otherwise(\"/main/admin/company/addedit/\")\r\n\r\n    $stateProvider\r\n        .state('main', {\r\n            url: \"/main\",\r\n            templateUrl: \"ApplicationComponents/Main/Views/Main.html\"\r\n        })\r\n        .state('main.admin', {\r\n            url: \"/admin\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Admin/Views/Admin.html\"\r\n        })\r\n        .state('main.admin.company', {\r\n            url: \"/company\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/Company.html\"\r\n        })\r\n        .state('main.admin.company.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Company/Views/CompanyAddEdit.html\",\r\n        })\r\n        .state('main.admin.customer', {\r\n            url: \"/customer\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/Customer.html\"\r\n        })\r\n        .state('main.admin.customer.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Customer/Views/CustomerAddEdit.html\",\r\n        })\r\n        .state('main.admin.product', {\r\n            url: \"/product\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/Product.html\"\r\n        })\r\n        .state('main.admin.product.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Product/Views/ProductAddEdit.html\",\r\n        })\r\n        .state('main.admin.location', {\r\n            url: \"/location\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/Location.html\"\r\n        })\r\n        .state('main.admin.location.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Location/Views/LocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/Survey.html\"\r\n        })\r\n        .state('main.admin.survey.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Survey/Views/SurveyAddEdit.html\",\r\n        })\r\n        .state('main.admin.userrole', {\r\n            url: \"/userrole\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRole.html\"\r\n        })\r\n        .state('main.admin.userrole.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/UserRole/Views/UserRoleAddEdit.html\",\r\n        })\r\n        .state('main.admin.question', {\r\n            url: \"/question\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/Question.html\"\r\n        })\r\n        .state('main.admin.question.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/Question/Views/QuestionAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveycustomerlocation', {\r\n            url: \"/survey/customerlocation\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocation.html\"\r\n        })\r\n        .state('main.admin.surveycustomerlocation.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyCustomerLocation/Views/SurveyCustomerLocationAddEdit.html\",\r\n        })\r\n        .state('main.admin.surveyproductquestion', {\r\n            url: \"/survey/productquestion\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestion.html\"\r\n        })\r\n        .state('main.admin.surveyproductquestion.addedit', {\r\n            url: \"/addedit/:id\",\r\n            templateUrl: \"ApplicationComponents/Administrator/SurveyProductQuestion/Views/SurveyProductQuestionAddEdit.html\",\r\n        })\r\n});\r\napp.run(function ($rootScope, $state, UserService, RoleService, UserRoleService) {\r\n    UserService\r\n        .GetCurrentUser()\r\n        .then(function (data) {\r\n            $rootScope.UserId = data;\r\n            var predicate = { \"Name\": { \"==\": \"Administrator\" } };\r\n            return RoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            $rootScope.Role = data;\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Data Entry\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.survey'\r\n                });\r\n            }\r\n            else {\r\n                var predicate = { \"Name\": { \"==\": \"Customer\" } };\r\n                return RoleService.SearchJson(predicate, 0, 1, false);\r\n            }\r\n        })\r\n        .then(function (data) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"UserId\": { \"==\": $rootScope.UserId } },\r\n                   { \"RoleId\": { '==': data[0].Id } }\r\n                ]\r\n            }\r\n            return UserRoleService.SearchJson(predicate, 0, 1, false);\r\n        })\r\n        .then(function (data) {\r\n            if (data.length > 0) {\r\n                $state.go('main.merchandise', {\r\n                    redirectState: 'main.report.surveyreport'\r\n                });\r\n            }\r\n            else {\r\n                $state.go('main.admin.company.addedit');\r\n            }\r\n        })\r\n});","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('MainController', ['$scope', '$http', '$window', '$state', 'UserService', 'SelectionApplicationService',\r\n    function controller($scope, $http, $window, $state, UserService, SelectionApplicationService) {\r\n\r\n        UserService.GetCurrentUsername().then(function(data){\r\n            $scope.Username = data;\r\n        });\r\n        $scope.GoTo = function (state) {\r\n            SelectionApplicationService.SetSurveyHeaderId(null);\r\n            if (state == 'main.admin.company.addedit') {\r\n                SelectionApplicationService.Clear();\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (SelectionApplicationService.GetCompanyId() == null) {\r\n                    $state.go('main.merchandise', { redirectState: state });\r\n                }\r\n                else {\r\n                    if (state == 'main.survey') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //if (SelectionApplicationService.GetSurveyId() == null) {\r\n                        //    $state.go('main.merchandise', { redirectState: state });\r\n                        //}\r\n                        //else {\r\n                        //    $state.go(state);\r\n                        //}\r\n                    }\r\n                    else if (state == 'main.report.surveyreport') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                    else if (state == 'main.map') {\r\n                        $state.go('main.merchandise', { redirectState: state });\r\n                        //$state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $scope.Logout = function () {\r\n            SelectionApplicationService.Clear();\r\n            $http.post('/Account/LogOff').then(function(data){\r\n                $window.location.reload();\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('AdminController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n        //TODO: If a regular user go to company, if a company customer assigned to a survey, go to the survey data page.\r\n        $scope.SelectedCompany = null;\r\n        SelectionApplicationService.RegisterObserver(function () {\r\n            $scope.SelectedCompany = SelectionApplicationService.GetCompany();\r\n        })\r\n\r\n        $scope.SelectedSurvey = null;\r\n        SelectionApplicationService.RegisterObserver(function(){\r\n            $scope.SelectedSurvey = SelectionApplicationService.GetSurvey();\r\n        })\r\n\r\n        $scope.Route = function (state) {\r\n            if (state == \"main.admin.company.addedit\") {\r\n                $state.go(state);\r\n            }\r\n            else {\r\n                if (state == \"main.admin.surveycustomerlocation.addedit\" || state == \"main.admin.surveyproductquestion.addedit\") {\r\n                    if (SelectionApplicationService.GetSurvey() == null || SelectionApplicationService.GetSurveyId() == null) {\r\n                        toastr.error(\"A survey must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n                else {\r\n                    if (SelectionApplicationService.GetCompany() == null || SelectionApplicationService.GetCompanyId() == null) {\r\n                        toastr.error(\"A company must be selected first.\");\r\n                    }\r\n                    else {\r\n                        $state.go(state);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, CompanyService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CompanyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CompanyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                CompanyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CompanyController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'CompanyService',\r\n        'UserService', 'RoleService', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, CompanyService,\r\n        UserService, RoleService, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            CompanyService.AdminSearch(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.company.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CompanyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n        \r\n        $scope.Select = function (Id) {\r\n            CompanyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetCompanyId(data.Id);\r\n                SelectionApplicationService.SetCompany(data);\r\n            });\r\n        }\r\n        \r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http',\r\n        '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http,\r\n        $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                CustomerService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                CustomerService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                CustomerService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('CustomerController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'CustomerService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, CustomerService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.customer.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            CustomerService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationAddEditController', ['$scope', '$q', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout',\r\n        'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $routeParams, $http, $location, $timeout,\r\n        breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\", Latitude: null, Longitude: null }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                LocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                LocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                LocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.ChangeAddress = function (value) {\r\n            var address = JSON.stringify(value);\r\n            return $http.get('http://maps.google.com/maps/api/geocode/json?address=' + address + '&sensor=false').then(function (data) {\r\n                return data.data.results;\r\n            });\r\n        }\r\n\r\n        $scope.SelectAddress = function (item, model, label) {\r\n            debugger;\r\n            $scope.item.Latitude = item.geometry.location.lat;\r\n            $scope.item.Longitude = item.geometry.location.lng;\r\n            $scope.item.Address = item.formatted_address;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('LocationController', ['$scope', '$state', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, LocationService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.location.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            LocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService, SelectionApplicationService) {\r\n       \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                ProductService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                ProductService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                debugger;\r\n                ProductService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('ProductController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'ProductService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, ProductService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            ProductService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.product.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            ProductService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                QuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                QuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                QuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('QuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, QuestionService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            QuestionService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Name', name: 'Customer Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.question.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            QuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        \r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null, Name : \"\"}\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                SurveyService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n            SurveyService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.items = data;\r\n                if (data.length == 1) {\r\n                    $scope.Select(data[0].Id);\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (Id) {\r\n            $state.go('main.admin.survey.addedit', { id: Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n\r\n        $scope.Select = function (Id) {\r\n            SurveyService.Get(Id).then(function (data) {\r\n                SelectionApplicationService.SetSurveyId(data.Id);\r\n                SelectionApplicationService.SetSurvey(data);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'CustomerService', 'LocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        CustomerService, LocationService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function () {\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyCustomerLocationService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchCustomers = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function (item, model, label) {\r\n            $scope.item.CustomerId = item.Id;\r\n        }\r\n\r\n        $scope.SearchLocations = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return LocationService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function (item, model, label) {\r\n            $scope.item.LocationId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyCustomerLocationService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', { }, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyCustomerLocationService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                    //$state.go('main.surveycustomerlocation.addedit', {}, { reload: true, inherit: false });\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyCustomerLocationController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyCustomerLocationService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyCustomerLocationService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Customer.Name', name: 'Customer Name', cellTooltip: true },\r\n                { field: 'Location.Name', name: 'Location Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveycustomerlocation.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyCustomerLocationService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'ProductService','QuestionService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        ProductService, QuestionService, SelectionApplicationService) {\r\n\r\n        $scope.Init = function(){\r\n            $scope.item = { Id : null }\r\n        }\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                SurveyProductQuestionService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SearchProducts = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return ProductService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectProduct = function (item, model, label) {\r\n            $scope.item.ProductId = item.Id;\r\n        }\r\n\r\n        $scope.SearchQuestions = function (value) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"Name\": { \"substringof\": value } },\r\n                   { \"CompanyId\": { '==': SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            return QuestionService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                return data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectQuestion = function (item, model, label) {\r\n            $scope.item.QuestionId = item.Id;\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                SurveyProductQuestionService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.SurveyId = SelectionApplicationService.GetSurveyId();\r\n                SurveyProductQuestionService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('SurveyProductQuestionController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'SurveyProductQuestionService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, SurveyProductQuestionService,\r\n        SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }\r\n            SurveyProductQuestionService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html' },\r\n                { field: 'Product.Name', name: 'Product Name', cellTooltip: true },\r\n                { field: 'Question.Name', name: 'Question Name', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            $state.go('main.admin.surveyproductquestion.addedit', { id: row.Id }, { reload: false });\r\n        }\r\n\r\n        $scope.Delete = function (Id) {\r\n            SurveyProductQuestionService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            })\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').controller('UserRoleAddEditController', ['$scope', '$state', '$stateParams', '$routeParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'CustomerService', 'RoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $routeParams, $http, $location,\r\n        $timeout, breezeservice, breeze, UserRoleService, CustomerService, RoleService, SelectionApplicationService) {\r\n        $scope.Init = function () {\r\n            $scope.item = { Id: null, Name: \"\" }\r\n        }\r\n        $scope.Init();\r\n        $scope.Search = function () {\r\n            if ($stateParams.id !== undefined && $stateParams.id !== \"\") {\r\n                UserRoleService.Get($stateParams.id).then(function (data) {\r\n                    $scope.item = data;\r\n                });\r\n            }\r\n            RoleService.Search(null, 0, 5, false).then(function (data) {\r\n                $scope.Roles = data;\r\n            });\r\n            var predicate = { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Customers = data;\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.Save = function () {\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if ($scope.item.Id !== undefined && $scope.item.Id !== null && $scope.item.Id !== \"\") {\r\n                UserRoleService.Update($scope.item.Id, $scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    alert(error);\r\n                });\r\n            }\r\n            else {\r\n                $scope.item.CompanyId = SelectionApplicationService.GetCompanyId();\r\n                $scope.item.RoleId = $scope.item.Role.Id;\r\n                if ($scope.item.Customer != undefined) {\r\n                    $scope.item.CustomerId = $scope.item.Customer.Id;\r\n                }\r\n                UserRoleService.Create($scope.item).then(function (data) {\r\n                    $scope.$parent.Search();\r\n                    $scope.Init();\r\n                }, function (error) {\r\n                    toastr.error(\"The username does not exist.\");\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            if ($scope.item.Role.Name == \"Customer\" && $scope.item.Customer == null) {\r\n                toastr.error(\"A customer must be selected.\");\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').controller('UserRoleController', ['$scope', '$state', '$routeParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze', 'UserRoleService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $routeParams, $http, $location, $timeout, breezeservice, breeze, UserRoleService, SelectionApplicationService) {\r\n        $scope.Search = function () {\r\n            var predicate = new breeze.Predicate('CompanyId', '==', SelectionApplicationService.GetCompanyId());\r\n            UserRoleService.Search(predicate, 0, 100, false).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n            });\r\n        }\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            data: [],\r\n            columnDefs: [\r\n                { name: 'Manage', cellTemplate: '<span class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.Delete(row.entity.Id)\">Delete</span>' },\r\n                { field: 'User.UserName', name: 'User', cellTooltip: true },\r\n                { field: 'Role.Name', name: 'Role', cellTooltip: true },\r\n                { field: 'Customer.Name', name: 'Customer', cellTooltip: true }\r\n            ]\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Delete = function (Id) {\r\n            UserRoleService.Delete(Id).then(function (data) {\r\n                $scope.Search();\r\n            }, function (error) {\r\n                toastr.error(error.data.Message);\r\n            });\r\n        }\r\n    }]);\r\n\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.merchandise', {\r\n            url: \"/merchandise/:redirectState\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/CustomerLocation/MerchandiseCustomerLocation.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseCustomerLocationController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService', 'UserService', 'UserRoleService',\r\n        'RoleService', 'SurveyCustomerLocationService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService, UserService, UserRoleService,\r\n        RoleService, SurveyCustomerLocationService, SelectionApplicationService) {\r\n        $scope.RedirectState = $stateParams.redirectState;\r\n        $scope.SelectedCompany = { Id: null };\r\n        $scope.IsAdministrator = false;\r\n        $scope.SelectedLocation = { Location: { Id: null }, Id: null };\r\n        $scope.SelectedCustomer = { Customer: { Id: null }, Id: null };\r\n        $scope.SelectedSurvey = { Survey: { Id: null }, Id: null, SurveyId: null };\r\n        $scope.UserId = null;\r\n        $scope.Search = function () {\r\n            CompanyService.Search(null, [\"Name desc\"], 0, 20, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Company = data;\r\n                    $scope.SelectedCompany = data[0];\r\n                    $scope.SelectCompany();\r\n                }\r\n                else {\r\n                    $scope.Company = data;\r\n                }\r\n            });\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.SelectCompany = function () {\r\n            SelectionApplicationService.SetCompanyId($scope.SelectedCompany.Id);\r\n            $scope.CustomerSearch($scope.SelectedCompany.Id);\r\n        }\r\n\r\n        $scope.CustomerSearch = function (companyId) {\r\n            var predicate = { \"CompanyId\": { '==': companyId } };\r\n            CustomerService.Search(predicate, [\"Name asc\"], 0, 20, false).then(function (data) {\r\n                $scope.Customer = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectCustomer = function () {\r\n            SelectionApplicationService.SetCustomer($scope.SelectedCustomer);\r\n            SelectionApplicationService.SetCustomerId($scope.SelectedCustomer.Id);\r\n            $scope.LocationSearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id);\r\n        }\r\n\r\n        $scope.LocationSearch = function (companyId, customerId) {\r\n            var predicate = { \"CompanyId\": { \"==\": companyId } }\r\n            LocationService.Search(predicate, [\"Name asc\"], 0, 100, false).then(function (data) {\r\n                if (data.length == 1) {\r\n                    $scope.Location = data;\r\n                    $scope.SelectedLocation = data[0];\r\n                    $scope.SelectLocation();\r\n                }\r\n                else {\r\n                    $scope.Location = data;\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.SelectLocation = function () {            \r\n            SelectionApplicationService.SetLocation($scope.SelectedLocation);\r\n            SelectionApplicationService.SetLocationId($scope.SelectedLocation.Id);\r\n            $scope.SurveySearch($scope.SelectedCompany.Id, $scope.SelectedCustomer.Id, $scope.SelectedLocation.Id);\r\n        }\r\n\r\n        $scope.SurveySearch = function (companyId, customerId, locationId) {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": companyId } },\r\n                   { \"CustomerId\": { '==': customerId } },\r\n                   { \"LocationId\": { \"==\": locationId } }\r\n                ]\r\n            }\r\n            SurveyCustomerLocationService.Search(predicate, [\"Created asc\"], 0, 100, false).then(function (data) {\r\n                $scope.Survey = data;\r\n            });\r\n        }\r\n\r\n        $scope.SelectSurvey = function () {\r\n            SelectionApplicationService.SetSurvey($scope.SelectedSurvey.Survey);\r\n            SelectionApplicationService.SetSurveyId($scope.SelectedSurvey.SurveyId);\r\n            $state.go($stateParams.redirectState);\r\n        }\r\n\r\n        $scope.IsGoShown = function () {\r\n            if ($stateParams.redirectState == 'main.survey') {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.survey', {\r\n            url: \"/survey\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/Survey/MerchandiseSurvey.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$timeout', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService', 'ImageService',\r\n        'SelectionApplicationService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $timeout, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService, ImageService, SelectionApplicationService) {\r\n        \r\n        if ((SelectionApplicationService.GetCompanyId() == null || SelectionApplicationService.GetCustomerId() == null ||\r\n            SelectionApplicationService.GetLocationId() == null || SelectionApplicationService.GetSurveyId() == null) && SelectionApplicationService.GetSurveyHeaderId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.survey'\r\n            });\r\n        }\r\n        $scope.BeforeImage = null;\r\n        $scope.AfterImage = null;\r\n        $scope.Company = SelectionApplicationService.GetCompany(); $scope.Survey = SelectionApplicationService.GetSurvey();\r\n        $scope.Customer = SelectionApplicationService.GetCustomer(); $scope.Location = SelectionApplicationService.GetLocation();\r\n        $scope.Header = {\r\n            BeforeImage: null, AfterImage: null, Latitude: null, Longitude: null, Notes: null,\r\n            CompanyId: SelectionApplicationService.GetCompanyId(), SurveyId: SelectionApplicationService.GetSurveyId(),\r\n            CustomerId: SelectionApplicationService.GetCustomerId(), LocationId: SelectionApplicationService.GetLocationId()\r\n        }\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            $scope.Header.Latitude = position.coords.latitude;\r\n            $scope.Header.Longitude = position.coords.longitude;\r\n        });\r\n        $scope.Detail = [];\r\n\r\n        $scope.Search = function () {\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var predicate = { \"Id\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyHeaderService.Search(predicate, [\"Created desc\"], 0, 1, false).then(function (data) {\r\n                    $scope.Header = data[0];\r\n                })\r\n                var predicate = { \"SurveyHeaderId\": { \"==\": SelectionApplicationService.GetSurveyHeaderId() } };\r\n                SurveyDetailService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n                $scope.BeforeImage = \"/api/v1/ImageApi/GetBeforeImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n                $scope.AfterImage = \"/api/v1/ImageApi/GetAfterImage/\" + SelectionApplicationService.GetSurveyHeaderId();\r\n            }\r\n            else {\r\n                var predicate = { \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } };\r\n                SurveyProductQuestionService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                    $scope.Detail = data;\r\n                });\r\n            }\r\n        }\r\n        $scope.Search();\r\n\r\n        $scope.setBeforeImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.IsBeforeImage = true;\r\n            $scope.Header.BeforeImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.BeforeImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.setAfterImage = function (element) {\r\n            var reader = new FileReader();\r\n            $scope.Header.IsAfterImage = true;\r\n            $scope.Header.AfterImage = element.files[0];\r\n            reader.onload = function (event) {\r\n                $scope.AfterImage = event.target.result;\r\n                $scope.$apply();\r\n            }\r\n            reader.readAsDataURL(element.files[0]);\r\n        }\r\n\r\n        $scope.Save = function () {\r\n            var promises = [];\r\n            var promise = null;\r\n            if (!$scope.Validate()) {\r\n                return false;\r\n            }\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                var details = [];\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        Id: value.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.UpdateBulk($scope.Header.Id, item).then(function(data){\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                    });\r\n                }, function (error) {\r\n                    toastr.error(\"There was an error updating the survey.\");\r\n                });\r\n            }\r\n            else {\r\n                var details = [];\r\n                var companyId = SelectionApplicationService.GetCompanyId();\r\n                angular.forEach($scope.Detail, function (value, key) {\r\n                    details.push({\r\n                        CompanyId: companyId,\r\n                        ProductId: value.Product.Id,\r\n                        QuestionId: value.Question.Id,\r\n                        Answer: value.Answer\r\n                    });\r\n                });\r\n                var item = { Header: $scope.Header, Details: details };\r\n                promise = SurveyHeaderService.CreateBulk(item).then(function (data) {\r\n                    promise = ImageService.CreateBeforeImage($scope.Header.BeforeImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    promise = ImageService.CreateAfterImage($scope.Header.AfterImage, data.data.Id);\r\n                    promises.push(promise);\r\n                    $q.all(promises).then(function () {\r\n                        toastr.success(\"Save successful.\");\r\n                        SelectionApplicationService.Clear();\r\n                        $state.go('main.merchandise', {\r\n                            redirectState: 'main.survey'\r\n                        });\r\n                    });\r\n                }, function(error){\r\n                    toastr.error(\"There was an error creating the survey.\");\r\n                });\r\n                promises.push(promise);  \r\n            }\r\n        }\r\n\r\n        $scope.Validate = function () {\r\n            var fileSizeBeforeImage = 0; var fileSizeAfterImage = 0;\r\n            if ($scope.Header.BeforeImage != null) {\r\n                var fileSizeBeforeImage = $scope.Header.BeforeImage.size; // in bytes\r\n            }\r\n            if ($scope.Header.AfterImage != null) {\r\n                var fileSizeAfterImage = $scope.Header.AfterImage.size; // in bytes\r\n            }\r\n            if (fileSizeBeforeImage > 3096000 || fileSizeAfterImage > 3096000) {\r\n                alert('File size is more then ' + 3 + ' Megabytes.');\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        $scope.DeleteBeforeImage = function () {\r\n            $scope.BeforeImage = null;\r\n            $scope.Header.BeforeImage = null; \r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteBeforeImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsBeforeImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        $scope.DeleteAfterImage = function () {\r\n            $scope.AfterImage = null;\r\n            $scope.Header.AfterImage = null;\r\n            if (SelectionApplicationService.GetSurveyHeaderId() != undefined && SelectionApplicationService.GetSurveyHeaderId() != null && SelectionApplicationService.GetSurveyHeaderId() != \"\") {\r\n                ImageService.DeleteAfterImage(SelectionApplicationService.GetSurveyHeaderId()).then(function () {\r\n                    $scope.Header.IsAfterImage = false;\r\n                    if (SelectionApplicationService.GetSurveyHeaderId() != null) {\r\n                        SurveyHeaderService.Update($scope.Header.Id, $scope.Header).then(function () {\r\n\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('surveydata', {\r\n            url: \"/surveydata/\",\r\n            templateUrl: \"ApplicationComponents/DataEntry/SurveyData/MerchandiseSurveyData.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('MerchandiseSurveyDataController', ['$scope', '$state', '$stateParams', '$http', '$location', '$timeout', 'uiGridConstants', 'breezeservice', 'breeze',\r\n        'CompanyService', 'LocationService', 'CustomerService', 'SurveyService',\r\n        'UserService', 'SurveyCustomerLocationService', 'SurveyProductQuestionService', 'SurveyHeaderService', 'SurveyDetailService',\r\n    function controller($scope, $state, $stateParams, $http, $location, $timeout, uiGridConstants, breezeservice, breeze,\r\n        CompanyService, LocationService, CustomerService, SurveyService,\r\n        UserService, SurveyCustomerLocationService, SurveyProductQuestionService, SurveyHeaderService, SurveyDetailService) {\r\n\r\n\r\n        $scope.grid = {\r\n            options: {\r\n                showGridFooter: true,\r\n                enableFiltering: true,\r\n                enableSorting: true,\r\n                headerTooltip: true,\r\n                onRegisterApi: function (gridApi) {\r\n                    $scope.gridApi = gridApi;\r\n                },\r\n                enableGridMenu: true,\r\n                exporterCsvFilename: 'data.csv',\r\n                exporterPdfOrientation: 'portrait',\r\n                exporterPdfPageSize: 'LETTER',\r\n                exporterPdfMaxGridWidth: 450,\r\n                data: null,\r\n                columnDefs: [\r\n                    { field: 'Id', displayName: '', width: '60', enableFiltering: false, enableSorting: false, cellTemplate: '<div><button class=\"btn btn-danger btn-sm\" ng-click=\"grid.appScope.vm.functions.data.delete(row.entity.Id)\">Delete</button></div>' },\r\n                    { field: 'Id', headerTooltip: true, displayName: 'Id' },\r\n                    //{ field: 'EmployeeId', cellTooltip: true, headerTooltip: true, displayName: 'Employee Id (unique)' },\r\n                    //{ field: 'FirstName', cellTooltip: true, headerTooltip: true, displayName: 'First Name' },\r\n                    //{ field: 'LastName', cellTooltip: true, headerTooltip: true, displayName: 'Last Name' },\r\n                    //{ field: 'ElectionPeriod', cellTooltip: true, headerTooltip: true, displayName: 'Election Period (unique)', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.ElectionPeriod | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'AmountDueDate', cellTooltip: true, headerTooltip: true, displayName: 'Amount Due Date', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.AmountDueDate | date: \"MM/dd/yyyy\"}}</div>' },\r\n                    //{ field: 'SharesVesting', cellTooltip: true, headerTooltip: true, displayName: 'Shares Vesting' },\r\n                    //{ field: 'IsViewed', cellTooltip: true, headerTooltip: true, displayName: 'Is Viewed' },\r\n                    //{ field: 'ElectionType', cellTooltip: true, headerTooltip: true, displayName: 'Election Type' },\r\n                    //{ field: 'Created', cellTooltip: true, headerTooltip: true, displayName: 'Created', cellTemplate: '<div class=\"ui-grid-cell-contents\">{{row.entity.Created | date: \"MM/dd/yyyy\"}}</div>' }\r\n                ]\r\n            }\r\n        }\r\n\r\n        $scope.Search = function () {\r\n            \r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";    \r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report', {\r\n            url: \"/report\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Report/Report.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('ReportController', ['$scope', '$state', 'SelectionApplicationService',\r\n    function controller($scope, $state, SelectionApplicationService) {\r\n    }]);\r\n\r\n})(moment);","\r\n(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.surveyreport', {\r\n            url: \"/surveyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Survey/SurveyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('SurveyReportController', ['$scope', '$q', '$state', '$stateParams', '$http', '$location', '$uibModal',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService',\r\n        'LocationService', 'CustomerService', 'SurveyService', 'MapService', 'ImageService', 'DownloadService',\r\n    function controller($scope, $q, $state, $stateParams, $http, $location, $uibModal,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService,\r\n        LocationService, CustomerService, SurveyService, MapService, ImageService, DownloadService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n\r\n        $scope.StartDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().startOf('isoWeek').format(\"DD\"));\r\n        $scope.EndDate = new Date(moment().format(\"YYYY\"), moment().format(\"MM\") - 1, moment().add(2, \"days\").format(\"DD\"));\r\n        $scope.myDate = new Date();\r\n        $scope.MinDate = new Date(\r\n            $scope.myDate.getFullYear(),\r\n            $scope.myDate.getMonth() - 12,\r\n            $scope.myDate.getDate());\r\n        $scope.MaxDate = $scope.EndDate;\r\n        $scope.DateChange = function () {\r\n            $scope.Page = 0;\r\n            $scope.gridOptions.data = [];\r\n            $scope.gridOptions.columnDefs = [];\r\n            $scope.Search();\r\n        }\r\n\r\n        $scope.Page = 0;\r\n        $scope.PageSize = 100;\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                moment($scope.StartDate).format('YYYY-MM-DD'), moment($scope.EndDate).format('YYYY-MM-DD'),\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridOptions.data = data;\r\n                    UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                        else {\r\n                            return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                        }\r\n                    }).then(function (data) {\r\n                        if (data == true) {\r\n                            $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                                name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                            });\r\n                        }\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(1, 0, {\r\n                        name: 'Before', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/BeforeImage.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(2, 0, {\r\n                        name: 'After', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/AfterImage.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.splice(3, 0, {\r\n                        name: 'Notes', width: 75, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/Notes.html'\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'CustomerName', name: 'Customer Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'LocationName', name: 'Location Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                    });\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                    });\r\n                    var exclude = ['IsBeforeImage', 'IsAfterImage', 'Created'],\r\n                        length = exclude.length;\r\n                    var keys = []\r\n                    var obj = $scope.gridOptions.data[0];\r\n                    for (var key in obj) {\r\n                        keys.push(key)\r\n                        if ((!key.includes(\"Id\") && !key.includes(\"Name\") && !exclude.includes(key))) {\r\n                            $scope.gridOptions.columnDefs.push({\r\n                                name: key, cellTooltip: true\r\n                            });\r\n                        }\r\n                    }\r\n                    $scope.gridOptions.columnDefs.push({\r\n                        name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss a\": \"UTC\"}}</div>'\r\n                    });\r\n                });\r\n        }\r\n\r\n        $scope.GetDataDown = function () {\r\n            $scope.Page++;\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(),\r\n                SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null,\r\n                $scope.StartDate, $scope.EndDate,\r\n                $scope.Page, $scope.PageSize).then(function (data) {\r\n                    $scope.gridApi.infiniteScroll.saveScrollPercentage();\r\n                    $scope.gridOptions.data.concat(data);\r\n                });\r\n        }\r\n        \r\n        $scope.gridOptions = {};\r\n        $scope.gridOptions.data = [];\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            infiniteScrollRowsFromEnd: 100,\r\n            //exporterCsvFilename: 'myFile.csv',\r\n            //exporterPdfOrientation: 'portrait',\r\n            //exporterPdfPageSize: 'LETTER',\r\n            //exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: [],\r\n            onRegisterApi: function (gridApi) {\r\n                gridApi.infiniteScroll.on.needLoadMoreData($scope, $scope.GetDataDown);\n                $scope.gridApi = gridApi;\r\n            }\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n            var promises = [];\r\n            promises.push(LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n            }));\r\n            promises.push(CustomerService.Get(row.CustomerId).then(function (data) {\r\n                SelectionApplicationService.SetCustomer(data);\r\n            }));\r\n            promises.push(SurveyService.Get(row.SurveyId).then(function (data) {\r\n                SelectionApplicationService.SetSurvey(data);\r\n            }));\r\n            $q.all(promises).then(function () {\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.gridOptions.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.gridOptions.data[index].Id == id) {\r\n                        $scope.gridOptions.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n\r\n        $scope.ViewNote = function (id) {\r\n            MapService.Get(id).then(function (data) {\r\n                var modalInstance = $uibModal.open({\r\n                    animation: true,\r\n                    templateUrl: 'ApplicationComponents/Reporting/Modal/Note/NoteModal.html',\r\n                    controller: 'NoteModalController',\r\n                    //size: 'lg',\r\n                    resolve: {\r\n                        note: function () {\r\n                            return data.Notes;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function () {\r\n                    //modal closed\r\n                }, function () {\r\n                    //modal dismissed\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.ViewImage = function (id, title) {\r\n            if (title == 'Before Image') {\r\n                var image = \"/api/v1/ImageApi/GetBeforeImage/\" + id;\r\n            }\r\n            else {\r\n                var image = \"/api/v1/ImageApi/GetAfterImage/\" + id;\r\n            }\r\n            var modalInstance = $uibModal.open({\r\n                animation: true,\r\n                templateUrl: 'ApplicationComponents/Reporting/Modal/Image/ImageModal.html',\r\n                controller: 'ImageModalController',\r\n                //size: 'lg',\r\n                resolve: {\r\n                    title: function () {\r\n                        return title;\r\n                    },\r\n                    image: function () {\r\n                        return image\r\n                    }\r\n                }\r\n            });\r\n\r\n            modalInstance.result.then(function () {\r\n                //modal closed\r\n            }, function () {\r\n                //modal dismissed\r\n            });\r\n        }\r\n\r\n        $scope.Download = function () {\r\n            window.open('/DownloadApi/Get/', '_blank', '');\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.weeklyreport', {\r\n            url: \"/weeklyreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Weekly/WeeklyReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('WeeklyReportController', ['$scope', '$state', '$stateParams', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'ReportService', 'SurveyHeaderService', 'SelectionApplicationService', 'UserService', 'LocationService',\r\n    function controller($scope, $state, $stateParams, $http, $location,\r\n        $timeout, breezeservice, breeze, ReportService, SurveyHeaderService, SelectionApplicationService, UserService, LocationService) {\r\n        if (SelectionApplicationService.GetCompanyId() == null) {\r\n            $state.go('main.merchandise', {\r\n                redirectState: 'main.report.surveyreport'\r\n            });\r\n        }\r\n        $scope.StartDate = moment().startOf('isoWeek').format(\"YYYY-MM-DD\");\r\n        $scope.EndDate = moment().add(1, \"days\").format(\"YYYY-MM-DD\");\r\n\r\n        $scope.Search = function () {\r\n            ReportService.Search(SelectionApplicationService.GetCompanyId(), null, SelectionApplicationService.GetCustomerId(), SelectionApplicationService.GetLocationId(), null, SelectionApplicationService.GetSurveyId(), null, $scope.StartDate, $scope.EndDate, 0, 10000).then(function (data) {\r\n                $scope.gridOptions.data = data;\r\n                UserService.IsAdministrator(SelectionApplicationService.GetCompanyId()).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                    else {\r\n                        return UserService.IsDataEntry(SelectionApplicationService.GetCompanyId())\r\n                    }\r\n                }).then(function (data) {\r\n                    if (data == true) {\r\n                        $scope.gridOptions.columnDefs.splice(0, 0, {\r\n                            name: 'Manage', width: 125, cellTemplate: 'ApplicationComponents/Reporting/Survey/CellTemplates/EditDelete.html'\r\n                        });\r\n                    }\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'CustomerName', name: 'Customer Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'LocationName', name: 'Location Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'SurveyName', name: 'Survey Name', cellTooltip: true\r\n                });\r\n                $scope.gridOptions.columnDefs.push({\r\n                    field: 'ProductName', name: 'Product Name', cellTooltip: true\r\n                });\r\n                var keys = []\r\n                var obj = $scope.gridOptions.data[0];\r\n                for (var key in obj) {\r\n                    keys.push(key)\r\n                    if ((key != 'Created' && !key.includes(\"Id\") && !key.includes(\"Name\"))) {\r\n                        $scope.gridOptions.columnDefs.push({\r\n                            name: key, cellTooltip: true\r\n                        });\r\n                    }\r\n                }\r\n                $scope.gridOptions.columnDefs.push({\r\n                    name: 'Created', cellTooltip: true, cellTemplate: '<div class=\"ui-grid-cell-contents\" title=\"TOOLTIP\">{{row.entity.Created | date: \"MM/dd/yyyy h:mm:ss\"}}</div>'\r\n                });\r\n            });\r\n        }\r\n\r\n        $scope.gridOptions = {\r\n            enableFiltering: true,\r\n            enableSorting: true,\r\n            enableGridMenu: true,\r\n            exporterCsvFilename: 'myFile.csv',\r\n            exporterPdfOrientation: 'portrait',\r\n            exporterPdfPageSize: 'LETTER',\r\n            exporterPdfMaxGridWidth: 500,\r\n            data: [],\r\n            columnDefs: []\r\n        };\r\n        $scope.Search();\r\n\r\n        $scope.Edit = function (row) {\r\n            LocationService.Get(row.LocationId).then(function (data) {\r\n                SelectionApplicationService.SetLocation(data);\r\n                SelectionApplicationService.SetSurveyHeaderId(row.Id);\r\n                $state.go('main.survey');\r\n            });\r\n        }\r\n\r\n        $scope.Delete = function (id) {\r\n            SurveyHeaderService.DeleteBulk(id).then(function (data) {\r\n                var length = $scope.gridOptions.data.length;\r\n                for (var index = 0; index < length; index++) {\r\n                    if ($scope.gridOptions.data[index].Id == id) {\r\n                        $scope.gridOptions.data.splice(index, 1);\r\n                        length--;\r\n                        index--;\r\n                    }\r\n                }\r\n            }, function (error) {\r\n                toastr.error(\"There was an error deleting the survey data.\");\r\n            });\r\n        }\r\n    }]);\r\n})(moment);","(function (moment) {\r\n    \"use strict\";\r\n    angular.module('Main').config(function ($stateProvider) {\r\n        $stateProvider\r\n        .state('main.report.locationreport', {\r\n            url: \"/locationreport\",\r\n            templateUrl: \"ApplicationComponents/Reporting/Location/LocationReport.html\"\r\n        })\r\n    });\r\n    angular.module('Main').controller('LocationReportController', ['$scope', '$state', '$stateParams', 'NgMap', '$http', '$location',\r\n        '$timeout', 'breezeservice', 'breeze', 'MapService', 'SurveyHeaderService', 'SelectionApplicationService',\r\n    function controller($scope, $state, $stateParams, NgMap, $http, $location,\r\n        $timeout, breezeservice, breeze, MapService, SurveyHeaderService, SelectionApplicationService) {\r\n        $scope.SelectedPosition = null;\r\n        $scope.Search = function () {\r\n            var predicate = {\r\n                and: [\r\n                   { \"CompanyId\": { \"==\": SelectionApplicationService.GetCompanyId() } }\r\n                ]\r\n            }\r\n            if (SelectionApplicationService.GetCustomerId() != null) { predicate.and.push({ \"CustomerId\": { \"==\": SelectionApplicationService.GetCustomerId() } }) }\r\n            if (SelectionApplicationService.GetLocationId() != null) { predicate.and.push({ \"LocationId\": { \"==\": SelectionApplicationService.GetLocationId() } }) }\r\n            if (SelectionApplicationService.GetSurveyId() != null) { predicate.and.push({ \"SurveyId\": { \"==\": SelectionApplicationService.GetSurveyId() } }) }\r\n            MapService.Search(predicate, [\"Created desc\"], 0, 100, false).then(function (data) {\r\n                $scope.positions = data;\r\n            });\r\n        }\r\n        NgMap.getMap().then(function (map) {\r\n            $scope.map = map;\r\n        });\r\n        $scope.Search();\r\n\r\n        $scope.SelectPosition = function (position) {\r\n            $scope.SelectedPosition = position;\r\n            $scope.map.panTo({ lat: $scope.SelectedPosition.Latitude, lng: $scope.SelectedPosition.Longitude });\r\n        }\r\n\r\n        $scope.SelectMarker = function (event, marker) {\r\n            $scope.SelectedPosition = marker;\r\n        }\r\n    }]);\r\n})(moment);","angular.module('Main').controller('ImageModalController', function ($uibModalInstance, $scope, title, image) {\r\n    $scope.image = image;\r\n    $scope.title = title;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});","angular.module('Main').controller('NoteModalController', function ($scope, $uibModalInstance, note) {\r\n    $scope.note = note;\r\n\r\n    $scope.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    $scope.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n});"],"sourceRoot":"/source/"}